2025-06-20 11:18:41,007 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-20 11:18:43,034 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000166AF151160>
2025-06-20 11:18:43,034 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-20 11:18:43,034 - DEBUG - send_request_headers.complete
2025-06-20 11:18:43,035 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-20 11:18:43,035 - DEBUG - send_request_body.complete
2025-06-20 11:18:43,035 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-20 11:18:43,037 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 20 Jun 2025 09:18:42 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-20 11:18:43,037 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-20 11:18:43,037 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-20 11:18:43,038 - DEBUG - receive_response_body.complete
2025-06-20 11:18:43,038 - DEBUG - response_closed.started
2025-06-20 11:18:43,038 - DEBUG - response_closed.complete
2025-06-20 11:18:43,038 - DEBUG - close.started
2025-06-20 11:18:43,038 - DEBUG - close.complete
2025-06-20 11:18:47,427 - DEBUG - Context after update: {'last_message': 'incidencias del abonado 87654321B', 'requires_real_data': True, 'is_referential': False, 'query_type': 'incidencia_creacion', 'dni': '87654321B'}
2025-06-20 11:18:47,428 - WARNING - Missing context fields: Faltan los siguientes campos: ubicacion, descripcion
2025-06-20 11:20:20,291 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-20 11:20:22,352 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000197AB731160>
2025-06-20 11:20:22,353 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-20 11:20:22,353 - DEBUG - send_request_headers.complete
2025-06-20 11:20:22,353 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-20 11:20:22,353 - DEBUG - send_request_body.complete
2025-06-20 11:20:22,353 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-20 11:20:22,366 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 20 Jun 2025 09:20:22 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-20 11:20:22,366 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-20 11:20:22,367 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-20 11:20:22,367 - DEBUG - receive_response_body.complete
2025-06-20 11:20:22,367 - DEBUG - response_closed.started
2025-06-20 11:20:22,367 - DEBUG - response_closed.complete
2025-06-20 11:20:22,367 - DEBUG - close.started
2025-06-20 11:20:22,367 - DEBUG - close.complete
2025-06-20 11:21:12,260 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-20 11:21:14,272 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001B6999A1160>
2025-06-20 11:21:14,272 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-20 11:21:14,272 - DEBUG - send_request_headers.complete
2025-06-20 11:21:14,272 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-20 11:21:14,272 - DEBUG - send_request_body.complete
2025-06-20 11:21:14,272 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-20 11:21:14,298 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 20 Jun 2025 09:21:13 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-20 11:21:14,298 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-20 11:21:14,299 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-20 11:21:14,299 - DEBUG - receive_response_body.complete
2025-06-20 11:21:14,299 - DEBUG - response_closed.started
2025-06-20 11:21:14,299 - DEBUG - response_closed.complete
2025-06-20 11:21:14,299 - DEBUG - close.started
2025-06-20 11:21:14,300 - DEBUG - close.complete
2025-06-20 11:21:26,458 - DEBUG - Context after update: {'last_message': 'incidencias del abonado 87654321B', 'requires_real_data': True, 'is_referential': False, 'query_type': 'incidencia_consulta', 'dni': '87654321B'}
2025-06-20 11:21:26,458 - INFO - User message: incidencias del abonado 87654321B
2025-06-20 11:21:26,458 - INFO - Sending initial request to LLM with tool_choice='auto'...
2025-06-20 11:21:26,510 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-dc0070d5-f66d-4bb3-8edc-abecc87eb34e', 'json_data': {'messages': [{'role': 'system', 'content': "Eres un agente especializado en gestión de incidencias. **No inventes datos**; extrae el DNI o ID de incidencia y llama a la herramienta correcta. Presenta sólo los datos reales obtenidos de la API. \n\nCuando te pregunten por una ubicación, usa siempre incidencias_por_ubicacion. Si la pregunta es referencial (ejemplo: 'Y en Barcelona?'), significa que el usuario quiere consultar las incidencias en esa nueva ubicación."}, {'role': 'user', 'content': 'incidencias del abonado 87654321B'}], 'model': 'llama-3.3-70b-versatile', 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'existe_abonado', 'description': 'Herramienta para existe_abonado', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_existe_abonado'}}, 'endpoint': '/existe_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'direccion_abonado', 'description': 'Herramienta para direccion_abonado', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_direccion_abonado'}}, 'endpoint': '/direccion_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'estado_pagos', 'description': 'Herramienta para estado_pagos', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_estado_pagos'}}, 'endpoint': '/estado_pagos', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'ultimo_pago', 'description': 'Herramienta para ultimo_pago', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_ultimo_pago'}}, 'endpoint': '/ultimo_pago', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'deuda_total', 'description': 'Herramienta para deuda_total', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_deuda_total'}}, 'endpoint': '/deuda_total', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'facturas_pendientes', 'description': 'Herramienta para facturas_pendientes', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_facturas_pendientes'}}, 'endpoint': '/facturas_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'todas_las_facturas', 'description': 'Herramienta para todas_las_facturas', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_todas_las_facturas'}}, 'endpoint': '/todas_las_facturas', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'datos_abonado', 'description': 'Herramienta para datos_abonado', 'parameters': {'properties': {'dni': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Dni'}, 'poliza': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Poliza'}}, 'type': 'object', 'title': 'DatosAbonadoInput'}}, 'endpoint': '/datos_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'crear_incidencia', 'description': 'Herramienta para crear_incidencia', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}, 'ubicacion': {'type': 'string', 'title': 'Ubicacion'}, 'descripcion': {'type': 'string', 'title': 'Descripcion'}, 'estado': {'type': 'string', 'title': 'Estado', 'default': 'Abierto'}}, 'type': 'object', 'required': ['dni', 'ubicacion', 'descripcion'], 'title': 'Body_crear_incidencia'}}, 'endpoint': '/crear_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_dni', 'description': 'Herramienta para incidencias_por_dni', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_incidencias_por_dni'}}, 'endpoint': '/incidencias_por_dni', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_nombre', 'description': 'Herramienta para incidencias_por_nombre', 'parameters': {'properties': {'nombre': {'type': 'string', 'title': 'Nombre'}}, 'type': 'object', 'required': ['nombre'], 'title': 'Body_incidencias_por_nombre'}}, 'endpoint': '/incidencias_por_nombre', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'actualizar_estado_incidencia', 'description': 'Herramienta para actualizar_estado_incidencia', 'parameters': {'properties': {'incidencia_id': {'type': 'integer', 'title': 'Incidencia Id'}, 'nuevo_estado': {'type': 'string', 'title': 'Nuevo Estado'}}, 'type': 'object', 'required': ['incidencia_id', 'nuevo_estado'], 'title': 'Body_actualizar_estado_incidencia'}}, 'endpoint': '/actualizar_estado_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_pendientes', 'description': 'Herramienta para incidencias_pendientes', 'parameters': {}}, 'endpoint': '/incidencias_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_ubicacion', 'description': 'Herramienta para incidencias_por_ubicacion', 'parameters': {'properties': {'ubicacion': {'type': 'string', 'title': 'Ubicacion'}}, 'type': 'object', 'required': ['ubicacion'], 'title': 'Body_incidencias_por_ubicacion'}}, 'endpoint': '/incidencias_por_ubicacion', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'herramientas_disponibles', 'description': 'Herramienta para herramientas_disponibles', 'parameters': {}}, 'endpoint': '/herramientas_disponibles', 'method': 'GET'}]}}
2025-06-20 11:21:26,610 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-06-20 11:21:26,610 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-20 11:21:26,697 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001B699A511D0>
2025-06-20 11:21:26,698 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001B699951B50> server_hostname='api.groq.com' timeout=5.0
2025-06-20 11:21:26,729 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001B699A51310>
2025-06-20 11:21:26,729 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-20 11:21:26,730 - DEBUG - send_request_headers.complete
2025-06-20 11:21:26,730 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-20 11:21:26,730 - DEBUG - send_request_body.complete
2025-06-20 11:21:26,730 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-20 11:21:27,076 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 20 Jun 2025 09:21:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'gcp-europe-west3'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'12000'), (b'x-ratelimit-remaining-requests', b'997'), (b'x-ratelimit-remaining-tokens', b'11876'), (b'x-ratelimit-reset-requests', b'3m35.151s'), (b'x-ratelimit-reset-tokens', b'620ms'), (b'x-request-id', b'req_01jy6a9686e0p9p35s1hk4j8ty'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=FKs7ZwRp8e.VyXAbmU5oWsgCsMbJgZbl8TxKvpu9ofE-1750411287-1.0.1.1-yEp6UVACD3BLH9eBQQbCBx0UEUZe3JxmYRu7xq3F.SdGLhjL7nBsz5I94v5x9bfLiV_Pn1jRcvM.fv.9FEAs7k.t11T3wWut3l7rN3YB0kk; path=/; expires=Fri, 20-Jun-25 09:51:27 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'952a322e3d29026b-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-20 11:21:27,077 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-20 11:21:27,077 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-20 11:21:27,077 - DEBUG - receive_response_body.complete
2025-06-20 11:21:27,077 - DEBUG - response_closed.started
2025-06-20 11:21:27,078 - DEBUG - response_closed.complete
2025-06-20 11:21:27,078 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Fri, 20 Jun 2025 09:21:27 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'gcp-europe-west3', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '12000', 'x-ratelimit-remaining-requests': '997', 'x-ratelimit-remaining-tokens': '11876', 'x-ratelimit-reset-requests': '3m35.151s', 'x-ratelimit-reset-tokens': '620ms', 'x-request-id': 'req_01jy6a9686e0p9p35s1hk4j8ty', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=FKs7ZwRp8e.VyXAbmU5oWsgCsMbJgZbl8TxKvpu9ofE-1750411287-1.0.1.1-yEp6UVACD3BLH9eBQQbCBx0UEUZe3JxmYRu7xq3F.SdGLhjL7nBsz5I94v5x9bfLiV_Pn1jRcvM.fv.9FEAs7k.t11T3wWut3l7rN3YB0kk; path=/; expires=Fri, 20-Jun-25 09:51:27 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '952a322e3d29026b-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-20 11:21:27,079 - INFO - Received response: ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='dsnq22sne', function=Function(arguments='{"dni":"87654321B"}', name='incidencias_por_dni'), type='function')])
2025-06-20 11:21:27,080 - INFO - Executing tool: incidencias_por_dni with args: {'dni': '87654321B'}
2025-06-20 11:21:27,554 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-20 11:21:29,603 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001B6998E36F0>
2025-06-20 11:21:29,604 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-20 11:21:29,604 - DEBUG - send_request_headers.complete
2025-06-20 11:21:29,604 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-20 11:21:29,605 - DEBUG - send_request_body.complete
2025-06-20 11:21:29,605 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-20 11:21:29,609 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 20 Jun 2025 09:21:29 GMT'), (b'server', b'uvicorn'), (b'content-length', b'185'), (b'content-type', b'application/json')])
2025-06-20 11:21:29,609 - INFO - HTTP Request: POST http://localhost:8000/incidencias_por_dni "HTTP/1.1 200 OK"
2025-06-20 11:21:29,609 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-20 11:21:29,609 - DEBUG - receive_response_body.complete
2025-06-20 11:21:29,610 - DEBUG - response_closed.started
2025-06-20 11:21:29,610 - DEBUG - response_closed.complete
2025-06-20 11:21:29,610 - DEBUG - close.started
2025-06-20 11:21:29,610 - DEBUG - close.complete
2025-06-20 11:21:29,610 - INFO - Raw tool response for incidencias_por_dni: {'incidencias': [{'ubicacion': 'Barcelona', 'descripcion': 'Problema con la factura', 'estado': 'Resuelto'}, {'ubicacion': 'Barcelona', 'descripcion': 'fallo en el servicio', 'estado': 'Abierto'}]}
2025-06-20 11:21:29,610 - INFO - Final response prepared (tool_call only, markdown returned).
2025-06-20 11:21:29,610 - INFO - Final Markdown content: ### Incidencias del usuario 

**Estado actual de sus incidencias:**
- Total: 2 incidencia(s)
- Abiertas: 1
- En proceso: 0
- Resueltas: 1

**Tiene incidencias abiertas pendientes de resolución**

#### Lista detallada de incidencias
| Ubicación | Descripción | Estado |
|:----------|:------------|:-------|
| Barcelona | fallo en el servicio | Abierto |
| Barcelona | Problema con la factura | Resuelto |
2025-06-20 11:21:42,511 - DEBUG - Context after update: {'last_message': 'Y las de Madrid?', 'requires_real_data': False, 'is_referential': True, 'query_type': 'incidencia_consulta', 'dni': '87654321B', 'ubicacion': 'Madrid'}
2025-06-20 11:21:42,512 - DEBUG - Referential prompt injected: Reference context: The previous DNI used in this conversation is 87654321B.
2025-06-20 11:21:42,512 - INFO - User message: Y las de Madrid?
2025-06-20 11:21:42,512 - INFO - Sending initial request to LLM with tool_choice='auto'...
2025-06-20 11:21:42,513 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-d5f7f40b-b0ad-4e4a-9653-206131669a48', 'json_data': {'messages': [{'role': 'system', 'content': 'Eres un asistente general. Responde preguntas comunes sin inventar datos. Si no aplican herramientas específicas, responde con conocimiento general. Utiliza siempre el contexto disponible (como DNI, tipo de consulta, etc.) para responder o realizar llamadas a herramientas, especialmente en consultas referenciales.'}, {'role': 'system', 'content': 'Reference context: The previous DNI used in this conversation is 87654321B.'}, {'role': 'user', 'content': 'Y las de Madrid?'}], 'model': 'llama-3.3-70b-versatile', 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'existe_abonado', 'description': 'Herramienta para existe_abonado', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_existe_abonado'}}, 'endpoint': '/existe_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'direccion_abonado', 'description': 'Herramienta para direccion_abonado', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_direccion_abonado'}}, 'endpoint': '/direccion_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'estado_pagos', 'description': 'Herramienta para estado_pagos', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_estado_pagos'}}, 'endpoint': '/estado_pagos', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'ultimo_pago', 'description': 'Herramienta para ultimo_pago', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_ultimo_pago'}}, 'endpoint': '/ultimo_pago', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'deuda_total', 'description': 'Herramienta para deuda_total', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_deuda_total'}}, 'endpoint': '/deuda_total', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'facturas_pendientes', 'description': 'Herramienta para facturas_pendientes', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_facturas_pendientes'}}, 'endpoint': '/facturas_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'todas_las_facturas', 'description': 'Herramienta para todas_las_facturas', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_todas_las_facturas'}}, 'endpoint': '/todas_las_facturas', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'datos_abonado', 'description': 'Herramienta para datos_abonado', 'parameters': {'properties': {'dni': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Dni'}, 'poliza': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Poliza'}}, 'type': 'object', 'title': 'DatosAbonadoInput'}}, 'endpoint': '/datos_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'crear_incidencia', 'description': 'Herramienta para crear_incidencia', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}, 'ubicacion': {'type': 'string', 'title': 'Ubicacion'}, 'descripcion': {'type': 'string', 'title': 'Descripcion'}, 'estado': {'type': 'string', 'title': 'Estado', 'default': 'Abierto'}}, 'type': 'object', 'required': ['dni', 'ubicacion', 'descripcion'], 'title': 'Body_crear_incidencia'}}, 'endpoint': '/crear_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_dni', 'description': 'Herramienta para incidencias_por_dni', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_incidencias_por_dni'}}, 'endpoint': '/incidencias_por_dni', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_nombre', 'description': 'Herramienta para incidencias_por_nombre', 'parameters': {'properties': {'nombre': {'type': 'string', 'title': 'Nombre'}}, 'type': 'object', 'required': ['nombre'], 'title': 'Body_incidencias_por_nombre'}}, 'endpoint': '/incidencias_por_nombre', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'actualizar_estado_incidencia', 'description': 'Herramienta para actualizar_estado_incidencia', 'parameters': {'properties': {'incidencia_id': {'type': 'integer', 'title': 'Incidencia Id'}, 'nuevo_estado': {'type': 'string', 'title': 'Nuevo Estado'}}, 'type': 'object', 'required': ['incidencia_id', 'nuevo_estado'], 'title': 'Body_actualizar_estado_incidencia'}}, 'endpoint': '/actualizar_estado_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_pendientes', 'description': 'Herramienta para incidencias_pendientes', 'parameters': {}}, 'endpoint': '/incidencias_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_ubicacion', 'description': 'Herramienta para incidencias_por_ubicacion', 'parameters': {'properties': {'ubicacion': {'type': 'string', 'title': 'Ubicacion'}}, 'type': 'object', 'required': ['ubicacion'], 'title': 'Body_incidencias_por_ubicacion'}}, 'endpoint': '/incidencias_por_ubicacion', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'herramientas_disponibles', 'description': 'Herramienta para herramientas_disponibles', 'parameters': {}}, 'endpoint': '/herramientas_disponibles', 'method': 'GET'}]}}
2025-06-20 11:21:42,514 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-06-20 11:21:42,514 - DEBUG - close.started
2025-06-20 11:21:42,515 - DEBUG - close.complete
2025-06-20 11:21:42,515 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-20 11:21:42,550 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001B699A74D60>
2025-06-20 11:21:42,550 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001B699951B50> server_hostname='api.groq.com' timeout=5.0
2025-06-20 11:21:42,582 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001B69999B530>
2025-06-20 11:21:42,582 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-20 11:21:42,582 - DEBUG - send_request_headers.complete
2025-06-20 11:21:42,582 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-20 11:21:42,583 - DEBUG - send_request_body.complete
2025-06-20 11:21:42,583 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-20 11:21:42,972 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 20 Jun 2025 09:21:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'gcp-europe-west3'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'12000'), (b'x-ratelimit-remaining-requests', b'996'), (b'x-ratelimit-remaining-tokens', b'11884'), (b'x-ratelimit-reset-requests', b'5m29.751s'), (b'x-ratelimit-reset-tokens', b'580ms'), (b'x-request-id', b'req_01jy6a9nqfeehtprz5vj4xt1mq'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'952a32915f650329-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-20 11:21:42,972 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-20 11:21:42,972 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-20 11:21:42,972 - DEBUG - receive_response_body.complete
2025-06-20 11:21:42,972 - DEBUG - response_closed.started
2025-06-20 11:21:42,973 - DEBUG - response_closed.complete
2025-06-20 11:21:42,973 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Fri, 20 Jun 2025 09:21:42 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'gcp-europe-west3', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '12000', 'x-ratelimit-remaining-requests': '996', 'x-ratelimit-remaining-tokens': '11884', 'x-ratelimit-reset-requests': '5m29.751s', 'x-ratelimit-reset-tokens': '580ms', 'x-request-id': 'req_01jy6a9nqfeehtprz5vj4xt1mq', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '952a32915f650329-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-20 11:21:42,973 - INFO - Received response: ChatCompletionMessage(content='No tengo información sobre "las de Madrid". ¿Podrías proporcionar más contexto o detalles sobre lo que estás buscando? Estoy aquí para ayudarte con cualquier pregunta que tengas.', role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=None)
2025-06-20 11:21:42,973 - INFO - Final response prepared: No tengo información sobre "las de Madrid". ¿Podrías proporcionar más contexto o detalles sobre lo que estás buscando? Estoy aquí para ayudarte con cualquier pregunta que tengas.
2025-06-20 11:21:47,903 - DEBUG - Context after update: {'last_message': 'Incidencias de madrid', 'requires_real_data': True, 'is_referential': False, 'query_type': 'incidencia_consulta', 'dni': '87654321B', 'ubicacion': 'madrid'}
2025-06-20 11:21:47,903 - INFO - User message: Incidencias de madrid
2025-06-20 11:21:47,903 - INFO - Sending initial request to LLM with tool_choice='auto'...
2025-06-20 11:21:47,905 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-b38ecd08-ff95-4877-b4bd-84f4effcabe1', 'json_data': {'messages': [{'role': 'system', 'content': "Eres un agente especializado en gestión de incidencias. **No inventes datos**; extrae el DNI o ID de incidencia y llama a la herramienta correcta. Presenta sólo los datos reales obtenidos de la API. \n\nCuando te pregunten por una ubicación, usa siempre incidencias_por_ubicacion. Si la pregunta es referencial (ejemplo: 'Y en Barcelona?'), significa que el usuario quiere consultar las incidencias en esa nueva ubicación."}, {'role': 'user', 'content': 'Incidencias de madrid'}], 'model': 'llama-3.3-70b-versatile', 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'existe_abonado', 'description': 'Herramienta para existe_abonado', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_existe_abonado'}}, 'endpoint': '/existe_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'direccion_abonado', 'description': 'Herramienta para direccion_abonado', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_direccion_abonado'}}, 'endpoint': '/direccion_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'estado_pagos', 'description': 'Herramienta para estado_pagos', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_estado_pagos'}}, 'endpoint': '/estado_pagos', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'ultimo_pago', 'description': 'Herramienta para ultimo_pago', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_ultimo_pago'}}, 'endpoint': '/ultimo_pago', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'deuda_total', 'description': 'Herramienta para deuda_total', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_deuda_total'}}, 'endpoint': '/deuda_total', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'facturas_pendientes', 'description': 'Herramienta para facturas_pendientes', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_facturas_pendientes'}}, 'endpoint': '/facturas_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'todas_las_facturas', 'description': 'Herramienta para todas_las_facturas', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_todas_las_facturas'}}, 'endpoint': '/todas_las_facturas', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'datos_abonado', 'description': 'Herramienta para datos_abonado', 'parameters': {'properties': {'dni': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Dni'}, 'poliza': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Poliza'}}, 'type': 'object', 'title': 'DatosAbonadoInput'}}, 'endpoint': '/datos_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'crear_incidencia', 'description': 'Herramienta para crear_incidencia', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}, 'ubicacion': {'type': 'string', 'title': 'Ubicacion'}, 'descripcion': {'type': 'string', 'title': 'Descripcion'}, 'estado': {'type': 'string', 'title': 'Estado', 'default': 'Abierto'}}, 'type': 'object', 'required': ['dni', 'ubicacion', 'descripcion'], 'title': 'Body_crear_incidencia'}}, 'endpoint': '/crear_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_dni', 'description': 'Herramienta para incidencias_por_dni', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_incidencias_por_dni'}}, 'endpoint': '/incidencias_por_dni', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_nombre', 'description': 'Herramienta para incidencias_por_nombre', 'parameters': {'properties': {'nombre': {'type': 'string', 'title': 'Nombre'}}, 'type': 'object', 'required': ['nombre'], 'title': 'Body_incidencias_por_nombre'}}, 'endpoint': '/incidencias_por_nombre', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'actualizar_estado_incidencia', 'description': 'Herramienta para actualizar_estado_incidencia', 'parameters': {'properties': {'incidencia_id': {'type': 'integer', 'title': 'Incidencia Id'}, 'nuevo_estado': {'type': 'string', 'title': 'Nuevo Estado'}}, 'type': 'object', 'required': ['incidencia_id', 'nuevo_estado'], 'title': 'Body_actualizar_estado_incidencia'}}, 'endpoint': '/actualizar_estado_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_pendientes', 'description': 'Herramienta para incidencias_pendientes', 'parameters': {}}, 'endpoint': '/incidencias_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_ubicacion', 'description': 'Herramienta para incidencias_por_ubicacion', 'parameters': {'properties': {'ubicacion': {'type': 'string', 'title': 'Ubicacion'}}, 'type': 'object', 'required': ['ubicacion'], 'title': 'Body_incidencias_por_ubicacion'}}, 'endpoint': '/incidencias_por_ubicacion', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'herramientas_disponibles', 'description': 'Herramienta para herramientas_disponibles', 'parameters': {}}, 'endpoint': '/herramientas_disponibles', 'method': 'GET'}]}}
2025-06-20 11:21:47,906 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-06-20 11:21:47,906 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-20 11:21:47,907 - DEBUG - send_request_headers.complete
2025-06-20 11:21:47,907 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-20 11:21:47,907 - DEBUG - send_request_body.complete
2025-06-20 11:21:47,907 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-20 11:21:48,304 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 20 Jun 2025 09:21:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'gcp-europe-west3'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'12000'), (b'x-ratelimit-remaining-requests', b'995'), (b'x-ratelimit-remaining-tokens', b'11405'), (b'x-ratelimit-reset-requests', b'7m6.616999999s'), (b'x-ratelimit-reset-tokens', b'2.975s'), (b'x-request-id', b'req_01jy6a9tzqedpt44d7jsrc0jnw'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'952a32b29aa10329-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-20 11:21:48,304 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-20 11:21:48,304 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-20 11:21:48,304 - DEBUG - receive_response_body.complete
2025-06-20 11:21:48,304 - DEBUG - response_closed.started
2025-06-20 11:21:48,304 - DEBUG - response_closed.complete
2025-06-20 11:21:48,304 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Fri, 20 Jun 2025 09:21:48 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'gcp-europe-west3', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '12000', 'x-ratelimit-remaining-requests': '995', 'x-ratelimit-remaining-tokens': '11405', 'x-ratelimit-reset-requests': '7m6.616999999s', 'x-ratelimit-reset-tokens': '2.975s', 'x-request-id': 'req_01jy6a9tzqedpt44d7jsrc0jnw', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '952a32b29aa10329-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-20 11:21:48,305 - INFO - Received response: ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='654fydkcc', function=Function(arguments='{"ubicacion":"madrid"}', name='incidencias_por_ubicacion'), type='function')])
2025-06-20 11:21:48,305 - INFO - Executing tool: incidencias_por_ubicacion with args: {'ubicacion': 'madrid'}
2025-06-20 11:21:48,905 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-20 11:21:50,937 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001B699A786B0>
2025-06-20 11:21:50,937 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-20 11:21:50,937 - DEBUG - send_request_headers.complete
2025-06-20 11:21:50,938 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-20 11:21:50,938 - DEBUG - send_request_body.complete
2025-06-20 11:21:50,938 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-20 11:21:50,941 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 20 Jun 2025 09:21:50 GMT'), (b'server', b'uvicorn'), (b'content-length', b'109'), (b'content-type', b'application/json')])
2025-06-20 11:21:50,942 - INFO - HTTP Request: POST http://localhost:8000/incidencias_por_ubicacion "HTTP/1.1 200 OK"
2025-06-20 11:21:50,942 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-20 11:21:50,942 - DEBUG - receive_response_body.complete
2025-06-20 11:21:50,942 - DEBUG - response_closed.started
2025-06-20 11:21:50,942 - DEBUG - response_closed.complete
2025-06-20 11:21:50,942 - DEBUG - close.started
2025-06-20 11:21:50,942 - DEBUG - close.complete
2025-06-20 11:21:50,942 - INFO - Raw tool response for incidencias_por_ubicacion: {'incidencias': [{'ubicacion': 'Madrid', 'descripcion': 'Fallo en el suministro eléctrico', 'estado': 'Abierto'}]}
2025-06-20 11:21:50,942 - INFO - Final response prepared (tool_call only, markdown returned).
2025-06-20 11:21:50,942 - INFO - Final Markdown content: ### Incidencias
**Resumen:**
- Total: 1 incidencia(s)
- Abiertas: 1
- En proceso: 0
- Resueltas: 0

#### Detalles
| Ubicación | Descripción | Estado |
|:----------|:------------|:-------|
| Madrid | Fallo en el suministro eléctrico | Abierto |
2025-06-20 11:21:56,614 - DEBUG - Context after update: {'last_message': 'incidencias en valencia', 'requires_real_data': True, 'is_referential': False, 'query_type': 'incidencia_consulta', 'dni': '87654321B', 'ubicacion': 'valencia'}
2025-06-20 11:21:56,614 - INFO - User message: incidencias en valencia
2025-06-20 11:21:56,614 - INFO - Sending initial request to LLM with tool_choice='auto'...
2025-06-20 11:21:56,615 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-335fb75f-208c-4405-8d4a-e90bc7c19a21', 'json_data': {'messages': [{'role': 'system', 'content': "Eres un agente especializado en gestión de incidencias. **No inventes datos**; extrae el DNI o ID de incidencia y llama a la herramienta correcta. Presenta sólo los datos reales obtenidos de la API. \n\nCuando te pregunten por una ubicación, usa siempre incidencias_por_ubicacion. Si la pregunta es referencial (ejemplo: 'Y en Barcelona?'), significa que el usuario quiere consultar las incidencias en esa nueva ubicación."}, {'role': 'user', 'content': 'incidencias en valencia'}], 'model': 'llama-3.3-70b-versatile', 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'existe_abonado', 'description': 'Herramienta para existe_abonado', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_existe_abonado'}}, 'endpoint': '/existe_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'direccion_abonado', 'description': 'Herramienta para direccion_abonado', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_direccion_abonado'}}, 'endpoint': '/direccion_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'estado_pagos', 'description': 'Herramienta para estado_pagos', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_estado_pagos'}}, 'endpoint': '/estado_pagos', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'ultimo_pago', 'description': 'Herramienta para ultimo_pago', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_ultimo_pago'}}, 'endpoint': '/ultimo_pago', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'deuda_total', 'description': 'Herramienta para deuda_total', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_deuda_total'}}, 'endpoint': '/deuda_total', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'facturas_pendientes', 'description': 'Herramienta para facturas_pendientes', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_facturas_pendientes'}}, 'endpoint': '/facturas_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'todas_las_facturas', 'description': 'Herramienta para todas_las_facturas', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_todas_las_facturas'}}, 'endpoint': '/todas_las_facturas', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'datos_abonado', 'description': 'Herramienta para datos_abonado', 'parameters': {'properties': {'dni': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Dni'}, 'poliza': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Poliza'}}, 'type': 'object', 'title': 'DatosAbonadoInput'}}, 'endpoint': '/datos_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'crear_incidencia', 'description': 'Herramienta para crear_incidencia', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}, 'ubicacion': {'type': 'string', 'title': 'Ubicacion'}, 'descripcion': {'type': 'string', 'title': 'Descripcion'}, 'estado': {'type': 'string', 'title': 'Estado', 'default': 'Abierto'}}, 'type': 'object', 'required': ['dni', 'ubicacion', 'descripcion'], 'title': 'Body_crear_incidencia'}}, 'endpoint': '/crear_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_dni', 'description': 'Herramienta para incidencias_por_dni', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_incidencias_por_dni'}}, 'endpoint': '/incidencias_por_dni', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_nombre', 'description': 'Herramienta para incidencias_por_nombre', 'parameters': {'properties': {'nombre': {'type': 'string', 'title': 'Nombre'}}, 'type': 'object', 'required': ['nombre'], 'title': 'Body_incidencias_por_nombre'}}, 'endpoint': '/incidencias_por_nombre', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'actualizar_estado_incidencia', 'description': 'Herramienta para actualizar_estado_incidencia', 'parameters': {'properties': {'incidencia_id': {'type': 'integer', 'title': 'Incidencia Id'}, 'nuevo_estado': {'type': 'string', 'title': 'Nuevo Estado'}}, 'type': 'object', 'required': ['incidencia_id', 'nuevo_estado'], 'title': 'Body_actualizar_estado_incidencia'}}, 'endpoint': '/actualizar_estado_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_pendientes', 'description': 'Herramienta para incidencias_pendientes', 'parameters': {}}, 'endpoint': '/incidencias_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_ubicacion', 'description': 'Herramienta para incidencias_por_ubicacion', 'parameters': {'properties': {'ubicacion': {'type': 'string', 'title': 'Ubicacion'}}, 'type': 'object', 'required': ['ubicacion'], 'title': 'Body_incidencias_por_ubicacion'}}, 'endpoint': '/incidencias_por_ubicacion', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'herramientas_disponibles', 'description': 'Herramienta para herramientas_disponibles', 'parameters': {}}, 'endpoint': '/herramientas_disponibles', 'method': 'GET'}]}}
2025-06-20 11:21:56,616 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-06-20 11:21:56,616 - DEBUG - close.started
2025-06-20 11:21:56,617 - DEBUG - close.complete
2025-06-20 11:21:56,617 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-20 11:21:56,654 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001B699A798C0>
2025-06-20 11:21:56,654 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001B699951B50> server_hostname='api.groq.com' timeout=5.0
2025-06-20 11:21:56,685 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001B699A8C550>
2025-06-20 11:21:56,686 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-20 11:21:56,686 - DEBUG - send_request_headers.complete
2025-06-20 11:21:56,686 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-20 11:21:56,686 - DEBUG - send_request_body.complete
2025-06-20 11:21:56,686 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-20 11:21:57,025 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 20 Jun 2025 09:21:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'gcp-europe-west3'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'12000'), (b'x-ratelimit-remaining-requests', b'994'), (b'x-ratelimit-remaining-tokens', b'11663'), (b'x-ratelimit-reset-requests', b'8m29.680999999s'), (b'x-ratelimit-reset-tokens', b'1.685s'), (b'x-request-id', b'req_01jy6aa3g6ef4rd8x94bvfxjz3'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'952a32e97e1af778-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-20 11:21:57,025 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-20 11:21:57,025 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-20 11:21:57,026 - DEBUG - receive_response_body.complete
2025-06-20 11:21:57,026 - DEBUG - response_closed.started
2025-06-20 11:21:57,026 - DEBUG - response_closed.complete
2025-06-20 11:21:57,026 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Fri, 20 Jun 2025 09:21:57 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'gcp-europe-west3', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '12000', 'x-ratelimit-remaining-requests': '994', 'x-ratelimit-remaining-tokens': '11663', 'x-ratelimit-reset-requests': '8m29.680999999s', 'x-ratelimit-reset-tokens': '1.685s', 'x-request-id': 'req_01jy6aa3g6ef4rd8x94bvfxjz3', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '952a32e97e1af778-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-20 11:21:57,027 - INFO - Received response: ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='zt0ka9xqr', function=Function(arguments='{"ubicacion":"valencia"}', name='incidencias_por_ubicacion'), type='function')])
2025-06-20 11:21:57,027 - INFO - Executing tool: incidencias_por_ubicacion with args: {'ubicacion': 'valencia'}
2025-06-20 11:21:57,617 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-20 11:21:59,638 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001B699A8C750>
2025-06-20 11:21:59,638 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-20 11:21:59,639 - DEBUG - send_request_headers.complete
2025-06-20 11:21:59,639 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-20 11:21:59,639 - DEBUG - send_request_body.complete
2025-06-20 11:21:59,639 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-20 11:21:59,643 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 20 Jun 2025 09:21:59 GMT'), (b'server', b'uvicorn'), (b'content-length', b'106'), (b'content-type', b'application/json')])
2025-06-20 11:21:59,643 - INFO - HTTP Request: POST http://localhost:8000/incidencias_por_ubicacion "HTTP/1.1 200 OK"
2025-06-20 11:21:59,643 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-20 11:21:59,643 - DEBUG - receive_response_body.complete
2025-06-20 11:21:59,643 - DEBUG - response_closed.started
2025-06-20 11:21:59,643 - DEBUG - response_closed.complete
2025-06-20 11:21:59,643 - DEBUG - close.started
2025-06-20 11:21:59,644 - DEBUG - close.complete
2025-06-20 11:21:59,644 - INFO - Raw tool response for incidencias_por_ubicacion: {'incidencias': [{'ubicacion': 'Valencia', 'descripcion': 'Consulta sobre el contrato', 'estado': 'Pendiente'}]}
2025-06-20 11:21:59,644 - INFO - Final response prepared (tool_call only, markdown returned).
2025-06-20 11:21:59,644 - INFO - Final Markdown content: ### Incidencias
**Resumen:**
- Total: 1 incidencia(s)
- Abiertas: 0
- En proceso: 0
- Resueltas: 0

#### Detalles
| Ubicación | Descripción | Estado |
|:----------|:------------|:-------|
| Valencia | Consulta sobre el contrato | Pendiente |
2025-06-20 11:22:12,341 - DEBUG - Context after update: {'last_message': 'dame las incidencias del 87654321B', 'requires_real_data': True, 'is_referential': False, 'query_type': 'incidencia_consulta', 'dni': '87654321B'}
2025-06-20 11:22:12,341 - INFO - User message: dame las incidencias del 87654321B
2025-06-20 11:22:12,341 - INFO - Sending initial request to LLM with tool_choice='auto'...
2025-06-20 11:22:12,343 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a01ea428-ee46-4fdd-9edd-853f36fe9051', 'json_data': {'messages': [{'role': 'system', 'content': "Eres un agente especializado en gestión de incidencias. **No inventes datos**; extrae el DNI o ID de incidencia y llama a la herramienta correcta. Presenta sólo los datos reales obtenidos de la API. \n\nCuando te pregunten por una ubicación, usa siempre incidencias_por_ubicacion. Si la pregunta es referencial (ejemplo: 'Y en Barcelona?'), significa que el usuario quiere consultar las incidencias en esa nueva ubicación."}, {'role': 'user', 'content': 'dame las incidencias del 87654321B'}], 'model': 'llama-3.3-70b-versatile', 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'existe_abonado', 'description': 'Herramienta para existe_abonado', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_existe_abonado'}}, 'endpoint': '/existe_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'direccion_abonado', 'description': 'Herramienta para direccion_abonado', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_direccion_abonado'}}, 'endpoint': '/direccion_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'estado_pagos', 'description': 'Herramienta para estado_pagos', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_estado_pagos'}}, 'endpoint': '/estado_pagos', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'ultimo_pago', 'description': 'Herramienta para ultimo_pago', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_ultimo_pago'}}, 'endpoint': '/ultimo_pago', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'deuda_total', 'description': 'Herramienta para deuda_total', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_deuda_total'}}, 'endpoint': '/deuda_total', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'facturas_pendientes', 'description': 'Herramienta para facturas_pendientes', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_facturas_pendientes'}}, 'endpoint': '/facturas_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'todas_las_facturas', 'description': 'Herramienta para todas_las_facturas', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_todas_las_facturas'}}, 'endpoint': '/todas_las_facturas', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'datos_abonado', 'description': 'Herramienta para datos_abonado', 'parameters': {'properties': {'dni': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Dni'}, 'poliza': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Poliza'}}, 'type': 'object', 'title': 'DatosAbonadoInput'}}, 'endpoint': '/datos_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'crear_incidencia', 'description': 'Herramienta para crear_incidencia', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}, 'ubicacion': {'type': 'string', 'title': 'Ubicacion'}, 'descripcion': {'type': 'string', 'title': 'Descripcion'}, 'estado': {'type': 'string', 'title': 'Estado', 'default': 'Abierto'}}, 'type': 'object', 'required': ['dni', 'ubicacion', 'descripcion'], 'title': 'Body_crear_incidencia'}}, 'endpoint': '/crear_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_dni', 'description': 'Herramienta para incidencias_por_dni', 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_incidencias_por_dni'}}, 'endpoint': '/incidencias_por_dni', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_nombre', 'description': 'Herramienta para incidencias_por_nombre', 'parameters': {'properties': {'nombre': {'type': 'string', 'title': 'Nombre'}}, 'type': 'object', 'required': ['nombre'], 'title': 'Body_incidencias_por_nombre'}}, 'endpoint': '/incidencias_por_nombre', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'actualizar_estado_incidencia', 'description': 'Herramienta para actualizar_estado_incidencia', 'parameters': {'properties': {'incidencia_id': {'type': 'integer', 'title': 'Incidencia Id'}, 'nuevo_estado': {'type': 'string', 'title': 'Nuevo Estado'}}, 'type': 'object', 'required': ['incidencia_id', 'nuevo_estado'], 'title': 'Body_actualizar_estado_incidencia'}}, 'endpoint': '/actualizar_estado_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_pendientes', 'description': 'Herramienta para incidencias_pendientes', 'parameters': {}}, 'endpoint': '/incidencias_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_ubicacion', 'description': 'Herramienta para incidencias_por_ubicacion', 'parameters': {'properties': {'ubicacion': {'type': 'string', 'title': 'Ubicacion'}}, 'type': 'object', 'required': ['ubicacion'], 'title': 'Body_incidencias_por_ubicacion'}}, 'endpoint': '/incidencias_por_ubicacion', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'herramientas_disponibles', 'description': 'Herramienta para herramientas_disponibles', 'parameters': {}}, 'endpoint': '/herramientas_disponibles', 'method': 'GET'}]}}
2025-06-20 11:22:12,343 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-06-20 11:22:12,344 - DEBUG - close.started
2025-06-20 11:22:12,344 - DEBUG - close.complete
2025-06-20 11:22:12,344 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-20 11:22:12,371 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001B6999D0F50>
2025-06-20 11:22:12,371 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001B699951B50> server_hostname='api.groq.com' timeout=5.0
2025-06-20 11:22:12,403 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001B6999D0320>
2025-06-20 11:22:12,403 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-20 11:22:12,403 - DEBUG - send_request_headers.complete
2025-06-20 11:22:12,403 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-20 11:22:12,404 - DEBUG - send_request_body.complete
2025-06-20 11:22:12,404 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-20 11:22:12,474 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Fri, 20 Jun 2025 09:22:12 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'384'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'397'), (b'vary', b'Origin'), (b'x-groq-region', b'gcp-europe-west3'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'12000'), (b'x-ratelimit-remaining-requests', b'994'), (b'x-ratelimit-remaining-tokens', b'12000'), (b'x-ratelimit-reset-requests', b'8m22.681s'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_01jy6aajveeffaaktk74paf02r'), (b'x-should-retry', b'false'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'952a334bb89102d4-MAD'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-20 11:22:12,474 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-06-20 11:22:12,475 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-20 11:22:12,475 - DEBUG - receive_response_body.complete
2025-06-20 11:22:12,475 - DEBUG - response_closed.started
2025-06-20 11:22:12,475 - DEBUG - response_closed.complete
2025-06-20 11:22:12,475 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Fri, 20 Jun 2025 09:22:12 GMT', 'content-type': 'application/json', 'content-length': '384', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'retry-after': '397', 'vary': 'Origin', 'x-groq-region': 'gcp-europe-west3', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '12000', 'x-ratelimit-remaining-requests': '994', 'x-ratelimit-remaining-tokens': '12000', 'x-ratelimit-reset-requests': '8m22.681s', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_01jy6aajveeffaaktk74paf02r', 'x-should-retry': 'false', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '952a334bb89102d4-MAD', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-20 11:22:12,475 - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\projects\mcp_groq\.venv\Lib\site-packages\groq\_base_client.py", line 1014, in request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\projects\mcp_groq\.venv\Lib\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-06-20 11:22:12,478 - DEBUG - Not retrying as header `x-should-retry` is set to `false`
2025-06-20 11:22:12,478 - DEBUG - Re-raising status error
2025-06-20 11:23:09,314 - DEBUG - close.started
2025-06-20 11:23:09,316 - DEBUG - close.complete
2025-06-20 11:23:11,611 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-20 11:23:13,638 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002176DE41160>
2025-06-20 11:23:13,638 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-20 11:23:13,639 - DEBUG - send_request_headers.complete
2025-06-20 11:23:13,640 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-20 11:23:13,640 - DEBUG - send_request_body.complete
2025-06-20 11:23:13,640 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-20 11:23:13,651 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 20 Jun 2025 09:23:12 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-20 11:23:13,651 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-20 11:23:13,651 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-20 11:23:13,652 - DEBUG - receive_response_body.complete
2025-06-20 11:23:13,652 - DEBUG - response_closed.started
2025-06-20 11:23:13,652 - DEBUG - response_closed.complete
2025-06-20 11:23:13,652 - DEBUG - close.started
2025-06-20 11:23:13,652 - DEBUG - close.complete

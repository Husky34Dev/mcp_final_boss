2025-06-23 14:16:50,280 - DEBUG - Context after update: {'last_message': 'hola, dame los datos del abonado con dni 12345678A', 'requires_real_data': True, 'is_referential': False, 'query_type': 'abonado', 'dni': '12345678A'}
2025-06-23 14:16:50,280 - INFO - User message: hola, dame los datos del abonado con dni 12345678A
2025-06-23 14:16:50,280 - INFO - Sending initial request to LLM with tool_choice='auto'...
2025-06-23 14:16:50,362 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-25bee923-3157-4e95-8a37-d619597bc92c', 'json_data': {'messages': [{'role': 'system', 'content': 'Eres un asistente general. Responde preguntas comunes sin inventar datos. Si no aplican herramientas específicas, responde con conocimiento general. Utiliza siempre el  ultimo contexto disponible (como DNI, tipo de consulta, etc.) para responder o realizar llamadas a herramientas, especialmente en consultas referenciales.'}, {'role': 'user', 'content': 'hola, dame los datos del abonado con dni 12345678A'}], 'model': 'meta-llama/llama-4-scout-17b-16e-instruct', 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'existe_abonado', 'description': "Esta herramienta realiza la operación 'existe_abonado' en el endpoint '/existe_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_existe_abonado'}}, 'endpoint': '/existe_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'direccion_abonado', 'description': "Esta herramienta realiza la operación 'direccion_abonado' en el endpoint '/direccion_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_direccion_abonado'}}, 'endpoint': '/direccion_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'estado_pagos', 'description': "Esta herramienta realiza la operación 'estado_pagos' en el endpoint '/estado_pagos' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_estado_pagos'}}, 'endpoint': '/estado_pagos', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'ultimo_pago', 'description': "Esta herramienta realiza la operación 'ultimo_pago' en el endpoint '/ultimo_pago' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_ultimo_pago'}}, 'endpoint': '/ultimo_pago', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'deuda_total', 'description': "Esta herramienta realiza la operación 'deuda_total' en el endpoint '/deuda_total' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_deuda_total'}}, 'endpoint': '/deuda_total', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'facturas_pendientes', 'description': "Esta herramienta realiza la operación 'facturas_pendientes' en el endpoint '/facturas_pendientes' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_facturas_pendientes'}}, 'endpoint': '/facturas_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'todas_las_facturas', 'description': "Esta herramienta realiza la operación 'todas_las_facturas' en el endpoint '/todas_las_facturas' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_todas_las_facturas'}}, 'endpoint': '/todas_las_facturas', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'datos_abonado', 'description': "Esta herramienta realiza la operación 'datos_abonado' en el endpoint '/datos_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Dni'}, 'poliza': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Poliza'}}, 'type': 'object', 'title': 'DatosAbonadoInput'}}, 'endpoint': '/datos_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'crear_incidencia', 'description': "Esta herramienta realiza la operación 'crear_incidencia' en el endpoint '/crear_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}, 'ubicacion': {'type': 'string', 'title': 'Ubicacion'}, 'descripcion': {'type': 'string', 'title': 'Descripcion'}, 'estado': {'type': 'string', 'title': 'Estado', 'default': 'Abierto'}}, 'type': 'object', 'required': ['dni', 'ubicacion', 'descripcion'], 'title': 'Body_crear_incidencia'}}, 'endpoint': '/crear_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_dni', 'description': "Esta herramienta realiza la operación 'incidencias_por_dni' en el endpoint '/incidencias_por_dni' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_incidencias_por_dni'}}, 'endpoint': '/incidencias_por_dni', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_nombre', 'description': "Esta herramienta realiza la operación 'incidencias_por_nombre' en el endpoint '/incidencias_por_nombre' usando el método 'POST.'", 'parameters': {'properties': {'nombre': {'type': 'string', 'title': 'Nombre'}}, 'type': 'object', 'required': ['nombre'], 'title': 'Body_incidencias_por_nombre'}}, 'endpoint': '/incidencias_por_nombre', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'actualizar_estado_incidencia', 'description': "Esta herramienta realiza la operación 'actualizar_estado_incidencia' en el endpoint '/actualizar_estado_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'incidencia_id': {'type': 'integer', 'title': 'Incidencia Id'}, 'nuevo_estado': {'type': 'string', 'title': 'Nuevo Estado'}}, 'type': 'object', 'required': ['incidencia_id', 'nuevo_estado'], 'title': 'Body_actualizar_estado_incidencia'}}, 'endpoint': '/actualizar_estado_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_pendientes', 'description': "Esta herramienta realiza la operación 'incidencias_pendientes' en el endpoint '/incidencias_pendientes' usando el método 'POST.'", 'parameters': {}}, 'endpoint': '/incidencias_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_ubicacion', 'description': "Esta herramienta realiza la operación 'incidencias_por_ubicacion' en el endpoint '/incidencias_por_ubicacion' usando el método 'POST.'", 'parameters': {'properties': {'ubicacion': {'type': 'string', 'title': 'Ubicacion'}}, 'type': 'object', 'required': ['ubicacion'], 'title': 'Body_incidencias_por_ubicacion'}}, 'endpoint': '/incidencias_por_ubicacion', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'herramientas_disponibles', 'description': "Esta herramienta realiza la operación 'herramientas_disponibles' en el endpoint '/herramientas_disponibles' usando el método 'GET.'", 'parameters': {}}, 'endpoint': '/herramientas_disponibles', 'method': 'GET'}]}}
2025-06-23 14:16:50,486 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-06-23 14:16:50,486 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:16:50,539 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001C27EC851D0>
2025-06-23 14:16:50,539 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C27EB81C70> server_hostname='api.groq.com' timeout=5.0
2025-06-23 14:16:50,576 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001C27EC85310>
2025-06-23 14:16:50,577 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 14:16:50,577 - DEBUG - send_request_headers.complete
2025-06-23 14:16:50,578 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 14:16:50,578 - DEBUG - send_request_body.complete
2025-06-23 14:16:50,579 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 14:16:51,115 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 23 Jun 2025 12:16:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'gcp-europe-west3'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'998'), (b'x-ratelimit-remaining-tokens', b'29897'), (b'x-ratelimit-reset-requests', b'2m39.338s'), (b'x-ratelimit-reset-tokens', b'206ms'), (b'x-request-id', b'req_01jyebgghxfzs8eg9mc4yp8zxg'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=kOYCKdZhg1OdRDXfnpweEBzfBnZVcxGTgFKXe3sgss0-1750681010-1.0.1.1-JzAgNjNg09tD6YXGCd7yabBX9j6YCV5Vsn0QFSRti1kMylmFvFdBMCp9xlXvk3_.IzVvFXHHG5c3AfabFZ41S9H7sTXgRxF_YOJ5_a0VTS4; path=/; expires=Mon, 23-Jun-25 12:46:50 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9543eb3ce9a45e12-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-23 14:16:51,116 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-23 14:16:51,117 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 14:16:51,117 - DEBUG - receive_response_body.complete
2025-06-23 14:16:51,117 - DEBUG - response_closed.started
2025-06-23 14:16:51,117 - DEBUG - response_closed.complete
2025-06-23 14:16:51,117 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Mon, 23 Jun 2025 12:16:50 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'gcp-europe-west3', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '998', 'x-ratelimit-remaining-tokens': '29897', 'x-ratelimit-reset-requests': '2m39.338s', 'x-ratelimit-reset-tokens': '206ms', 'x-request-id': 'req_01jyebgghxfzs8eg9mc4yp8zxg', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=kOYCKdZhg1OdRDXfnpweEBzfBnZVcxGTgFKXe3sgss0-1750681010-1.0.1.1-JzAgNjNg09tD6YXGCd7yabBX9j6YCV5Vsn0QFSRti1kMylmFvFdBMCp9xlXvk3_.IzVvFXHHG5c3AfabFZ41S9H7sTXgRxF_YOJ5_a0VTS4; path=/; expires=Mon, 23-Jun-25 12:46:50 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '9543eb3ce9a45e12-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-23 14:16:51,121 - INFO - Received response: ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='t1vn1pz6c', function=Function(arguments='{"dni":"12345678A"}', name='datos_abonado'), type='function')])
2025-06-23 14:16:51,121 - INFO - Executing tool: datos_abonado with args: {'dni': '12345678A'}
2025-06-23 14:16:51,681 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:16:53,750 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001C27EB136F0>
2025-06-23 14:16:53,750 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 14:16:53,751 - DEBUG - send_request_headers.complete
2025-06-23 14:16:53,751 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 14:16:53,751 - DEBUG - send_request_body.complete
2025-06-23 14:16:53,751 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 14:16:53,756 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:16:53 GMT'), (b'server', b'uvicorn'), (b'content-length', b'141'), (b'content-type', b'application/json')])
2025-06-23 14:16:53,756 - INFO - HTTP Request: POST http://localhost:8000/datos_abonado "HTTP/1.1 200 OK"
2025-06-23 14:16:53,756 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 14:16:53,756 - DEBUG - receive_response_body.complete
2025-06-23 14:16:53,756 - DEBUG - response_closed.started
2025-06-23 14:16:53,756 - DEBUG - response_closed.complete
2025-06-23 14:16:53,756 - DEBUG - close.started
2025-06-23 14:16:53,757 - DEBUG - close.complete
2025-06-23 14:16:53,757 - INFO - Raw tool response for datos_abonado: {'nombre': 'Juan Pérez', 'dni': '12345678A', 'direccion': 'Calle Falsa 123', 'correo': 'juan@example.com', 'telefono': '123456789', 'poliza': 'POL123'}
2025-06-23 14:16:53,757 - INFO - Final response prepared (tool_call only, markdown returned).
2025-06-23 14:16:53,757 - INFO - Final Markdown content: ### Datos del abonado
- **Nombre:** Juan Pérez
- **DNI:** 12345678A
- **Dirección:** Calle Falsa 123
- **Correo electrónico:** juan@example.com
- **Teléfono:** 123456789
- **Póliza:** POL123
2025-06-23 14:16:54,505 - DEBUG - Context after update: {'last_message': 'crea una incidencia en Huelva, furgoneta averiada', 'requires_real_data': True, 'is_referential': False, 'query_type': 'incidencia_creacion', 'dni': '12345678A', 'ubicacion': 'Huelva', 'descripcion': 'furgoneta averiada'}
2025-06-23 14:16:54,506 - INFO - User message: crea una incidencia en Huelva, furgoneta averiada
2025-06-23 14:16:54,506 - INFO - Sending initial request to LLM with tool_choice='auto'...
2025-06-23 14:16:54,508 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-2c05add7-16c3-443a-82bf-8b0650aa7b67', 'json_data': {'messages': [{'role': 'system', 'content': "Eres un agente especializado en gestión de incidencias. **No inventes datos**; extrae el DNI o ID de incidencia y llama a la herramienta correcta. Presenta sólo los datos reales obtenidos de la API. No llames a herramientas de abonado como direccion_abonado para consultas de incidencias. \n\nCuando te pregunten por una ubicación, usa siempre incidencias_por_ubicacion. Si la pregunta es referencial (ejemplo: 'Y en Barcelona?'), significa que el usuario quiere consultar las incidencias en esa nueva ubicación. Asegúrate de que las consultas referenciales con ubicación generen siempre una llamada a la herramienta adecuada."}, {'role': 'user', 'content': 'crea una incidencia en Huelva, furgoneta averiada'}], 'model': 'meta-llama/llama-4-scout-17b-16e-instruct', 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'existe_abonado', 'description': "Esta herramienta realiza la operación 'existe_abonado' en el endpoint '/existe_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_existe_abonado'}}, 'endpoint': '/existe_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'direccion_abonado', 'description': "Esta herramienta realiza la operación 'direccion_abonado' en el endpoint '/direccion_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_direccion_abonado'}}, 'endpoint': '/direccion_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'estado_pagos', 'description': "Esta herramienta realiza la operación 'estado_pagos' en el endpoint '/estado_pagos' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_estado_pagos'}}, 'endpoint': '/estado_pagos', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'ultimo_pago', 'description': "Esta herramienta realiza la operación 'ultimo_pago' en el endpoint '/ultimo_pago' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_ultimo_pago'}}, 'endpoint': '/ultimo_pago', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'deuda_total', 'description': "Esta herramienta realiza la operación 'deuda_total' en el endpoint '/deuda_total' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_deuda_total'}}, 'endpoint': '/deuda_total', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'facturas_pendientes', 'description': "Esta herramienta realiza la operación 'facturas_pendientes' en el endpoint '/facturas_pendientes' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_facturas_pendientes'}}, 'endpoint': '/facturas_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'todas_las_facturas', 'description': "Esta herramienta realiza la operación 'todas_las_facturas' en el endpoint '/todas_las_facturas' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_todas_las_facturas'}}, 'endpoint': '/todas_las_facturas', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'datos_abonado', 'description': "Esta herramienta realiza la operación 'datos_abonado' en el endpoint '/datos_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Dni'}, 'poliza': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Poliza'}}, 'type': 'object', 'title': 'DatosAbonadoInput'}}, 'endpoint': '/datos_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'crear_incidencia', 'description': "Esta herramienta realiza la operación 'crear_incidencia' en el endpoint '/crear_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}, 'ubicacion': {'type': 'string', 'title': 'Ubicacion'}, 'descripcion': {'type': 'string', 'title': 'Descripcion'}, 'estado': {'type': 'string', 'title': 'Estado', 'default': 'Abierto'}}, 'type': 'object', 'required': ['dni', 'ubicacion', 'descripcion'], 'title': 'Body_crear_incidencia'}}, 'endpoint': '/crear_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_dni', 'description': "Esta herramienta realiza la operación 'incidencias_por_dni' en el endpoint '/incidencias_por_dni' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_incidencias_por_dni'}}, 'endpoint': '/incidencias_por_dni', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_nombre', 'description': "Esta herramienta realiza la operación 'incidencias_por_nombre' en el endpoint '/incidencias_por_nombre' usando el método 'POST.'", 'parameters': {'properties': {'nombre': {'type': 'string', 'title': 'Nombre'}}, 'type': 'object', 'required': ['nombre'], 'title': 'Body_incidencias_por_nombre'}}, 'endpoint': '/incidencias_por_nombre', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'actualizar_estado_incidencia', 'description': "Esta herramienta realiza la operación 'actualizar_estado_incidencia' en el endpoint '/actualizar_estado_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'incidencia_id': {'type': 'integer', 'title': 'Incidencia Id'}, 'nuevo_estado': {'type': 'string', 'title': 'Nuevo Estado'}}, 'type': 'object', 'required': ['incidencia_id', 'nuevo_estado'], 'title': 'Body_actualizar_estado_incidencia'}}, 'endpoint': '/actualizar_estado_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_pendientes', 'description': "Esta herramienta realiza la operación 'incidencias_pendientes' en el endpoint '/incidencias_pendientes' usando el método 'POST.'", 'parameters': {}}, 'endpoint': '/incidencias_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_ubicacion', 'description': "Esta herramienta realiza la operación 'incidencias_por_ubicacion' en el endpoint '/incidencias_por_ubicacion' usando el método 'POST.'", 'parameters': {'properties': {'ubicacion': {'type': 'string', 'title': 'Ubicacion'}}, 'type': 'object', 'required': ['ubicacion'], 'title': 'Body_incidencias_por_ubicacion'}}, 'endpoint': '/incidencias_por_ubicacion', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'herramientas_disponibles', 'description': "Esta herramienta realiza la operación 'herramientas_disponibles' en el endpoint '/herramientas_disponibles' usando el método 'GET.'", 'parameters': {}}, 'endpoint': '/herramientas_disponibles', 'method': 'GET'}]}}
2025-06-23 14:16:54,510 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-06-23 14:16:54,511 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 14:16:54,512 - DEBUG - send_request_headers.complete
2025-06-23 14:16:54,512 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 14:16:54,513 - DEBUG - send_request_body.complete
2025-06-23 14:16:54,513 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 14:16:55,413 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 23 Jun 2025 12:16:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'gcp-europe-west3'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'997'), (b'x-ratelimit-remaining-tokens', b'29681'), (b'x-ratelimit-reset-requests', b'4m15.269s'), (b'x-ratelimit-reset-tokens', b'638ms'), (b'x-request-id', b'req_01jyebgmcrfzwap1dj764cvc20'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9543eb557b645e12-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-23 14:16:55,414 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-23 14:16:55,414 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 14:16:55,415 - DEBUG - receive_response_body.complete
2025-06-23 14:16:55,415 - DEBUG - response_closed.started
2025-06-23 14:16:55,415 - DEBUG - response_closed.complete
2025-06-23 14:16:55,415 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Mon, 23 Jun 2025 12:16:55 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'gcp-europe-west3', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '997', 'x-ratelimit-remaining-tokens': '29681', 'x-ratelimit-reset-requests': '4m15.269s', 'x-ratelimit-reset-tokens': '638ms', 'x-request-id': 'req_01jyebgmcrfzwap1dj764cvc20', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '9543eb557b645e12-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-23 14:16:55,416 - INFO - Received response: ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='3nx455ewt', function=Function(arguments='{"descripcion":"furgoneta averiada","dni":"","ubicacion":"Huelva"}', name='crear_incidencia'), type='function')])
2025-06-23 14:16:55,416 - INFO - Executing tool: crear_incidencia with args: {'descripcion': 'furgoneta averiada', 'dni': '', 'ubicacion': 'Huelva'}
2025-06-23 14:16:55,962 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:16:57,999 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001C27ECAA190>
2025-06-23 14:16:57,999 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 14:16:58,000 - DEBUG - send_request_headers.complete
2025-06-23 14:16:58,000 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 14:16:58,000 - DEBUG - send_request_body.complete
2025-06-23 14:16:58,000 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 14:16:58,006 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:16:57 GMT'), (b'server', b'uvicorn'), (b'content-length', b'64'), (b'content-type', b'application/json')])
2025-06-23 14:16:58,006 - INFO - HTTP Request: POST http://localhost:8000/crear_incidencia "HTTP/1.1 200 OK"
2025-06-23 14:16:58,006 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 14:16:58,007 - DEBUG - receive_response_body.complete
2025-06-23 14:16:58,007 - DEBUG - response_closed.started
2025-06-23 14:16:58,007 - DEBUG - response_closed.complete
2025-06-23 14:16:58,007 - DEBUG - close.started
2025-06-23 14:16:58,007 - DEBUG - close.complete
2025-06-23 14:16:58,007 - INFO - Raw tool response for crear_incidencia: {'error': 'No se encontró un abonado con el DNI proporcionado.'}
2025-06-23 14:16:58,007 - INFO - Final response prepared (tool_call only, markdown returned).
2025-06-23 14:16:58,008 - INFO - Final Markdown content: No se pudo crear la incidencia.
2025-06-23 14:17:46,857 - DEBUG - close.started
2025-06-23 14:17:46,859 - DEBUG - close.complete
2025-06-23 14:17:49,166 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:17:51,195 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000013BC8A59160>
2025-06-23 14:17:51,195 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-23 14:17:51,196 - DEBUG - send_request_headers.complete
2025-06-23 14:17:51,196 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-23 14:17:51,196 - DEBUG - send_request_body.complete
2025-06-23 14:17:51,196 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-23 14:17:51,215 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:17:50 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-23 14:17:51,215 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-23 14:17:51,215 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-23 14:17:51,215 - DEBUG - receive_response_body.complete
2025-06-23 14:17:51,215 - DEBUG - response_closed.started
2025-06-23 14:17:51,215 - DEBUG - response_closed.complete
2025-06-23 14:17:51,215 - DEBUG - close.started
2025-06-23 14:17:51,216 - DEBUG - close.complete
2025-06-23 14:18:01,976 - DEBUG - Initial context before applying field rules: {'last_message': 'hola, dame los datos del abonado con dni 12345678A', 'requires_real_data': True, 'is_referential': False, 'query_type': 'abonado', 'dni': '12345678A'}
2025-06-23 14:18:01,976 - DEBUG - Context after update: {'last_message': 'hola, dame los datos del abonado con dni 12345678A', 'requires_real_data': True, 'is_referential': False, 'query_type': 'abonado', 'dni': '12345678A'}
2025-06-23 14:18:01,977 - INFO - User message: hola, dame los datos del abonado con dni 12345678A
2025-06-23 14:18:01,977 - INFO - Sending initial request to LLM with tool_choice='auto'...
2025-06-23 14:18:02,074 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-7730b84d-6e75-406d-b609-3a2d77a72dca', 'json_data': {'messages': [{'role': 'system', 'content': 'Eres un asistente general. Responde preguntas comunes sin inventar datos. Si no aplican herramientas específicas, responde con conocimiento general. Utiliza siempre el  ultimo contexto disponible (como DNI, tipo de consulta, etc.) para responder o realizar llamadas a herramientas, especialmente en consultas referenciales.'}, {'role': 'user', 'content': 'hola, dame los datos del abonado con dni 12345678A'}], 'model': 'meta-llama/llama-4-scout-17b-16e-instruct', 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'existe_abonado', 'description': "Esta herramienta realiza la operación 'existe_abonado' en el endpoint '/existe_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_existe_abonado'}}, 'endpoint': '/existe_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'direccion_abonado', 'description': "Esta herramienta realiza la operación 'direccion_abonado' en el endpoint '/direccion_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_direccion_abonado'}}, 'endpoint': '/direccion_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'estado_pagos', 'description': "Esta herramienta realiza la operación 'estado_pagos' en el endpoint '/estado_pagos' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_estado_pagos'}}, 'endpoint': '/estado_pagos', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'ultimo_pago', 'description': "Esta herramienta realiza la operación 'ultimo_pago' en el endpoint '/ultimo_pago' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_ultimo_pago'}}, 'endpoint': '/ultimo_pago', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'deuda_total', 'description': "Esta herramienta realiza la operación 'deuda_total' en el endpoint '/deuda_total' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_deuda_total'}}, 'endpoint': '/deuda_total', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'facturas_pendientes', 'description': "Esta herramienta realiza la operación 'facturas_pendientes' en el endpoint '/facturas_pendientes' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_facturas_pendientes'}}, 'endpoint': '/facturas_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'todas_las_facturas', 'description': "Esta herramienta realiza la operación 'todas_las_facturas' en el endpoint '/todas_las_facturas' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_todas_las_facturas'}}, 'endpoint': '/todas_las_facturas', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'datos_abonado', 'description': "Esta herramienta realiza la operación 'datos_abonado' en el endpoint '/datos_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Dni'}, 'poliza': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Poliza'}}, 'type': 'object', 'title': 'DatosAbonadoInput'}}, 'endpoint': '/datos_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'crear_incidencia', 'description': "Esta herramienta realiza la operación 'crear_incidencia' en el endpoint '/crear_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}, 'ubicacion': {'type': 'string', 'title': 'Ubicacion'}, 'descripcion': {'type': 'string', 'title': 'Descripcion'}, 'estado': {'type': 'string', 'title': 'Estado', 'default': 'Abierto'}}, 'type': 'object', 'required': ['dni', 'ubicacion', 'descripcion'], 'title': 'Body_crear_incidencia'}}, 'endpoint': '/crear_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_dni', 'description': "Esta herramienta realiza la operación 'incidencias_por_dni' en el endpoint '/incidencias_por_dni' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_incidencias_por_dni'}}, 'endpoint': '/incidencias_por_dni', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_nombre', 'description': "Esta herramienta realiza la operación 'incidencias_por_nombre' en el endpoint '/incidencias_por_nombre' usando el método 'POST.'", 'parameters': {'properties': {'nombre': {'type': 'string', 'title': 'Nombre'}}, 'type': 'object', 'required': ['nombre'], 'title': 'Body_incidencias_por_nombre'}}, 'endpoint': '/incidencias_por_nombre', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'actualizar_estado_incidencia', 'description': "Esta herramienta realiza la operación 'actualizar_estado_incidencia' en el endpoint '/actualizar_estado_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'incidencia_id': {'type': 'integer', 'title': 'Incidencia Id'}, 'nuevo_estado': {'type': 'string', 'title': 'Nuevo Estado'}}, 'type': 'object', 'required': ['incidencia_id', 'nuevo_estado'], 'title': 'Body_actualizar_estado_incidencia'}}, 'endpoint': '/actualizar_estado_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_pendientes', 'description': "Esta herramienta realiza la operación 'incidencias_pendientes' en el endpoint '/incidencias_pendientes' usando el método 'POST.'", 'parameters': {}}, 'endpoint': '/incidencias_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_ubicacion', 'description': "Esta herramienta realiza la operación 'incidencias_por_ubicacion' en el endpoint '/incidencias_por_ubicacion' usando el método 'POST.'", 'parameters': {'properties': {'ubicacion': {'type': 'string', 'title': 'Ubicacion'}}, 'type': 'object', 'required': ['ubicacion'], 'title': 'Body_incidencias_por_ubicacion'}}, 'endpoint': '/incidencias_por_ubicacion', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'herramientas_disponibles', 'description': "Esta herramienta realiza la operación 'herramientas_disponibles' en el endpoint '/herramientas_disponibles' usando el método 'GET.'", 'parameters': {}}, 'endpoint': '/herramientas_disponibles', 'method': 'GET'}]}}
2025-06-23 14:18:02,226 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-06-23 14:18:02,226 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:18:02,292 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000013BC8B051D0>
2025-06-23 14:18:02,292 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000013BC8A01C70> server_hostname='api.groq.com' timeout=5.0
2025-06-23 14:18:02,332 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000013BC8B05310>
2025-06-23 14:18:02,332 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 14:18:02,333 - DEBUG - send_request_headers.complete
2025-06-23 14:18:02,333 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 14:18:02,334 - DEBUG - send_request_body.complete
2025-06-23 14:18:02,334 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 14:18:03,306 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 23 Jun 2025 12:18:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'gcp-europe-west3'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'996'), (b'x-ratelimit-remaining-tokens', b'29897'), (b'x-ratelimit-reset-requests', b'4m37.765s'), (b'x-ratelimit-reset-tokens', b'206ms'), (b'x-request-id', b'req_01jyebjpm5eef9pygws4v9eh9t'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=1t99ZJMmHvu4.deA196yLLXzbdbw.I2lm1LC.DuMfn8-1750681083-1.0.1.1-O1IcvwIdqVKd2jUoRGKkkclZC0FrpMxSVvRfGpvxgrepC1x923GBejLJRww4Y0Qjq7suMbtZ5Gje20NvZ2wM46szgVMoFvtD.5tPMEdtT04; path=/; expires=Mon, 23-Jun-25 12:48:03 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9543ecfd58746689-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-23 14:18:03,307 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-23 14:18:03,307 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 14:18:03,308 - DEBUG - receive_response_body.complete
2025-06-23 14:18:03,308 - DEBUG - response_closed.started
2025-06-23 14:18:03,308 - DEBUG - response_closed.complete
2025-06-23 14:18:03,308 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Mon, 23 Jun 2025 12:18:03 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'gcp-europe-west3', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '996', 'x-ratelimit-remaining-tokens': '29897', 'x-ratelimit-reset-requests': '4m37.765s', 'x-ratelimit-reset-tokens': '206ms', 'x-request-id': 'req_01jyebjpm5eef9pygws4v9eh9t', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=1t99ZJMmHvu4.deA196yLLXzbdbw.I2lm1LC.DuMfn8-1750681083-1.0.1.1-O1IcvwIdqVKd2jUoRGKkkclZC0FrpMxSVvRfGpvxgrepC1x923GBejLJRww4Y0Qjq7suMbtZ5Gje20NvZ2wM46szgVMoFvtD.5tPMEdtT04; path=/; expires=Mon, 23-Jun-25 12:48:03 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '9543ecfd58746689-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-23 14:18:03,311 - INFO - Received response: ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='vdbf8ff5c', function=Function(arguments='{"dni":"12345678A"}', name='datos_abonado'), type='function')])
2025-06-23 14:18:03,311 - INFO - Executing tool: datos_abonado with args: {'dni': '12345678A'}
2025-06-23 14:18:03,809 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:18:05,861 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000013BC89936F0>
2025-06-23 14:18:05,861 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 14:18:05,862 - DEBUG - send_request_headers.complete
2025-06-23 14:18:05,862 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 14:18:05,862 - DEBUG - send_request_body.complete
2025-06-23 14:18:05,862 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 14:18:05,870 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:18:05 GMT'), (b'server', b'uvicorn'), (b'content-length', b'141'), (b'content-type', b'application/json')])
2025-06-23 14:18:05,871 - INFO - HTTP Request: POST http://localhost:8000/datos_abonado "HTTP/1.1 200 OK"
2025-06-23 14:18:05,871 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 14:18:05,871 - DEBUG - receive_response_body.complete
2025-06-23 14:18:05,871 - DEBUG - response_closed.started
2025-06-23 14:18:05,871 - DEBUG - response_closed.complete
2025-06-23 14:18:05,871 - DEBUG - close.started
2025-06-23 14:18:05,871 - DEBUG - close.complete
2025-06-23 14:18:05,871 - INFO - Raw tool response for datos_abonado: {'nombre': 'Juan Pérez', 'dni': '12345678A', 'direccion': 'Calle Falsa 123', 'correo': 'juan@example.com', 'telefono': '123456789', 'poliza': 'POL123'}
2025-06-23 14:18:05,872 - INFO - Final response prepared (tool_call only, markdown returned).
2025-06-23 14:18:05,872 - INFO - Final Markdown content: ### Datos del abonado
- **Nombre:** Juan Pérez
- **DNI:** 12345678A
- **Dirección:** Calle Falsa 123
- **Correo electrónico:** juan@example.com
- **Teléfono:** 123456789
- **Póliza:** POL123
2025-06-23 14:18:07,066 - DEBUG - Initial context before applying field rules: {'last_message': 'crea una incidencia en Huelva, furgoneta averiada', 'requires_real_data': True, 'is_referential': False, 'query_type': 'incidencia_creacion', 'dni': '12345678A', 'ubicacion': 'Huelva', 'descripcion': 'furgoneta averiada'}
2025-06-23 14:18:07,066 - DEBUG - Context after update: {'last_message': 'crea una incidencia en Huelva, furgoneta averiada', 'requires_real_data': True, 'is_referential': False, 'query_type': 'incidencia_creacion', 'dni': '12345678A', 'ubicacion': 'Huelva', 'descripcion': 'furgoneta averiada'}
2025-06-23 14:18:07,066 - INFO - User message: crea una incidencia en Huelva, furgoneta averiada
2025-06-23 14:18:07,067 - INFO - Sending initial request to LLM with tool_choice='auto'...
2025-06-23 14:18:07,069 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-7ea3458b-a183-403d-b18a-184a67c73045', 'json_data': {'messages': [{'role': 'system', 'content': "Eres un agente especializado en gestión de incidencias. **No inventes datos**; extrae el DNI o ID de incidencia y llama a la herramienta correcta. Presenta sólo los datos reales obtenidos de la API. No llames a herramientas de abonado como direccion_abonado para consultas de incidencias. \n\nCuando te pregunten por una ubicación, usa siempre incidencias_por_ubicacion. Si la pregunta es referencial (ejemplo: 'Y en Barcelona?'), significa que el usuario quiere consultar las incidencias en esa nueva ubicación. Asegúrate de que las consultas referenciales con ubicación generen siempre una llamada a la herramienta adecuada."}, {'role': 'user', 'content': 'crea una incidencia en Huelva, furgoneta averiada'}], 'model': 'meta-llama/llama-4-scout-17b-16e-instruct', 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'existe_abonado', 'description': "Esta herramienta realiza la operación 'existe_abonado' en el endpoint '/existe_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_existe_abonado'}}, 'endpoint': '/existe_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'direccion_abonado', 'description': "Esta herramienta realiza la operación 'direccion_abonado' en el endpoint '/direccion_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_direccion_abonado'}}, 'endpoint': '/direccion_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'estado_pagos', 'description': "Esta herramienta realiza la operación 'estado_pagos' en el endpoint '/estado_pagos' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_estado_pagos'}}, 'endpoint': '/estado_pagos', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'ultimo_pago', 'description': "Esta herramienta realiza la operación 'ultimo_pago' en el endpoint '/ultimo_pago' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_ultimo_pago'}}, 'endpoint': '/ultimo_pago', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'deuda_total', 'description': "Esta herramienta realiza la operación 'deuda_total' en el endpoint '/deuda_total' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_deuda_total'}}, 'endpoint': '/deuda_total', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'facturas_pendientes', 'description': "Esta herramienta realiza la operación 'facturas_pendientes' en el endpoint '/facturas_pendientes' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_facturas_pendientes'}}, 'endpoint': '/facturas_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'todas_las_facturas', 'description': "Esta herramienta realiza la operación 'todas_las_facturas' en el endpoint '/todas_las_facturas' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_todas_las_facturas'}}, 'endpoint': '/todas_las_facturas', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'datos_abonado', 'description': "Esta herramienta realiza la operación 'datos_abonado' en el endpoint '/datos_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Dni'}, 'poliza': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Poliza'}}, 'type': 'object', 'title': 'DatosAbonadoInput'}}, 'endpoint': '/datos_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'crear_incidencia', 'description': "Esta herramienta realiza la operación 'crear_incidencia' en el endpoint '/crear_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}, 'ubicacion': {'type': 'string', 'title': 'Ubicacion'}, 'descripcion': {'type': 'string', 'title': 'Descripcion'}, 'estado': {'type': 'string', 'title': 'Estado', 'default': 'Abierto'}}, 'type': 'object', 'required': ['dni', 'ubicacion', 'descripcion'], 'title': 'Body_crear_incidencia'}}, 'endpoint': '/crear_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_dni', 'description': "Esta herramienta realiza la operación 'incidencias_por_dni' en el endpoint '/incidencias_por_dni' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_incidencias_por_dni'}}, 'endpoint': '/incidencias_por_dni', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_nombre', 'description': "Esta herramienta realiza la operación 'incidencias_por_nombre' en el endpoint '/incidencias_por_nombre' usando el método 'POST.'", 'parameters': {'properties': {'nombre': {'type': 'string', 'title': 'Nombre'}}, 'type': 'object', 'required': ['nombre'], 'title': 'Body_incidencias_por_nombre'}}, 'endpoint': '/incidencias_por_nombre', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'actualizar_estado_incidencia', 'description': "Esta herramienta realiza la operación 'actualizar_estado_incidencia' en el endpoint '/actualizar_estado_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'incidencia_id': {'type': 'integer', 'title': 'Incidencia Id'}, 'nuevo_estado': {'type': 'string', 'title': 'Nuevo Estado'}}, 'type': 'object', 'required': ['incidencia_id', 'nuevo_estado'], 'title': 'Body_actualizar_estado_incidencia'}}, 'endpoint': '/actualizar_estado_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_pendientes', 'description': "Esta herramienta realiza la operación 'incidencias_pendientes' en el endpoint '/incidencias_pendientes' usando el método 'POST.'", 'parameters': {}}, 'endpoint': '/incidencias_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_ubicacion', 'description': "Esta herramienta realiza la operación 'incidencias_por_ubicacion' en el endpoint '/incidencias_por_ubicacion' usando el método 'POST.'", 'parameters': {'properties': {'ubicacion': {'type': 'string', 'title': 'Ubicacion'}}, 'type': 'object', 'required': ['ubicacion'], 'title': 'Body_incidencias_por_ubicacion'}}, 'endpoint': '/incidencias_por_ubicacion', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'herramientas_disponibles', 'description': "Esta herramienta realiza la operación 'herramientas_disponibles' en el endpoint '/herramientas_disponibles' usando el método 'GET.'", 'parameters': {}}, 'endpoint': '/herramientas_disponibles', 'method': 'GET'}]}}
2025-06-23 14:18:07,072 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-06-23 14:18:07,072 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 14:18:07,073 - DEBUG - send_request_headers.complete
2025-06-23 14:18:07,073 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 14:18:07,074 - DEBUG - send_request_body.complete
2025-06-23 14:18:07,074 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 14:18:08,347 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 23 Jun 2025 12:18:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'gcp-europe-west3'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'995'), (b'x-ratelimit-remaining-tokens', b'29742'), (b'x-ratelimit-reset-requests', b'7m7.284s'), (b'x-ratelimit-reset-tokens', b'516ms'), (b'x-request-id', b'req_01jyebjv80eeqv3p81mdt5qdb8'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9543ed1afdcb6689-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-23 14:18:08,348 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-23 14:18:08,349 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 14:18:08,349 - DEBUG - receive_response_body.complete
2025-06-23 14:18:08,350 - DEBUG - response_closed.started
2025-06-23 14:18:08,350 - DEBUG - response_closed.complete
2025-06-23 14:18:08,350 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Mon, 23 Jun 2025 12:18:08 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'gcp-europe-west3', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '995', 'x-ratelimit-remaining-tokens': '29742', 'x-ratelimit-reset-requests': '7m7.284s', 'x-ratelimit-reset-tokens': '516ms', 'x-request-id': 'req_01jyebjv80eeqv3p81mdt5qdb8', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '9543ed1afdcb6689-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-23 14:18:08,351 - INFO - Received response: ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='5n6a279kn', function=Function(arguments='{"descripcion":"furgoneta averiada","dni":"","estado":"Abierto","ubicacion":"Huelva"}', name='crear_incidencia'), type='function')])
2025-06-23 14:18:08,351 - INFO - Executing tool: crear_incidencia with args: {'descripcion': 'furgoneta averiada', 'dni': '', 'estado': 'Abierto', 'ubicacion': 'Huelva'}
2025-06-23 14:18:08,918 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:18:10,975 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000013BC8B2A190>
2025-06-23 14:18:10,976 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 14:18:10,976 - DEBUG - send_request_headers.complete
2025-06-23 14:18:10,976 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 14:18:10,976 - DEBUG - send_request_body.complete
2025-06-23 14:18:10,976 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 14:18:10,982 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:18:10 GMT'), (b'server', b'uvicorn'), (b'content-length', b'64'), (b'content-type', b'application/json')])
2025-06-23 14:18:10,982 - INFO - HTTP Request: POST http://localhost:8000/crear_incidencia "HTTP/1.1 200 OK"
2025-06-23 14:18:10,983 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 14:18:10,983 - DEBUG - receive_response_body.complete
2025-06-23 14:18:10,983 - DEBUG - response_closed.started
2025-06-23 14:18:10,983 - DEBUG - response_closed.complete
2025-06-23 14:18:10,983 - DEBUG - close.started
2025-06-23 14:18:10,983 - DEBUG - close.complete
2025-06-23 14:18:10,983 - INFO - Raw tool response for crear_incidencia: {'error': 'No se encontró un abonado con el DNI proporcionado.'}
2025-06-23 14:18:10,983 - INFO - Final response prepared (tool_call only, markdown returned).
2025-06-23 14:18:10,984 - INFO - Final Markdown content: No se pudo crear la incidencia.
2025-06-23 14:19:01,757 - DEBUG - close.started
2025-06-23 14:19:01,759 - DEBUG - close.complete
2025-06-23 14:19:04,042 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:19:06,110 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000209CEE59400>
2025-06-23 14:19:06,111 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-23 14:19:06,111 - DEBUG - send_request_headers.complete
2025-06-23 14:19:06,111 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-23 14:19:06,111 - DEBUG - send_request_body.complete
2025-06-23 14:19:06,112 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-23 14:19:06,129 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:19:05 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-23 14:19:06,130 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-23 14:19:06,130 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-23 14:19:06,130 - DEBUG - receive_response_body.complete
2025-06-23 14:19:06,130 - DEBUG - response_closed.started
2025-06-23 14:19:06,130 - DEBUG - response_closed.complete
2025-06-23 14:19:06,130 - DEBUG - close.started
2025-06-23 14:19:06,130 - DEBUG - close.complete
2025-06-23 14:19:16,729 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:19:18,787 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000028E8B8F9400>
2025-06-23 14:19:18,788 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-23 14:19:18,788 - DEBUG - send_request_headers.complete
2025-06-23 14:19:18,788 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-23 14:19:18,788 - DEBUG - send_request_body.complete
2025-06-23 14:19:18,788 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-23 14:19:18,802 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:19:18 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-23 14:19:18,803 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-23 14:19:18,803 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-23 14:19:18,803 - DEBUG - receive_response_body.complete
2025-06-23 14:19:18,803 - DEBUG - response_closed.started
2025-06-23 14:19:18,803 - DEBUG - response_closed.complete
2025-06-23 14:19:18,803 - DEBUG - close.started
2025-06-23 14:19:18,803 - DEBUG - close.complete
2025-06-23 14:19:30,036 - DEBUG - Initial context before applying field rules: {'last_message': 'hola, dame los datos del abonado con dni 12345678A', 'requires_real_data': True, 'is_referential': False, 'query_type': 'abonado', 'dni': '12345678A'}
2025-06-23 14:19:30,036 - DEBUG - Applying field rules: {'inherit': ['dni'], 'remove': []}
2025-06-23 14:19:30,036 - DEBUG - Context after applying removal rules: {'last_message': 'hola, dame los datos del abonado con dni 12345678A', 'requires_real_data': True, 'is_referential': False, 'query_type': 'abonado', 'dni': '12345678A'}
2025-06-23 14:19:30,036 - WARNING - Field dni not found in previous context, skipping inheritance
2025-06-23 14:19:30,037 - DEBUG - Context after applying inheritance rules: {'last_message': 'hola, dame los datos del abonado con dni 12345678A', 'requires_real_data': True, 'is_referential': False, 'query_type': 'abonado', 'dni': '12345678A'}
2025-06-23 14:19:30,037 - DEBUG - Context after update: {'last_message': 'hola, dame los datos del abonado con dni 12345678A', 'requires_real_data': True, 'is_referential': False, 'query_type': 'abonado', 'dni': '12345678A'}
2025-06-23 14:19:30,037 - INFO - User message: hola, dame los datos del abonado con dni 12345678A
2025-06-23 14:19:30,037 - INFO - Sending initial request to LLM with tool_choice='auto'...
2025-06-23 14:19:30,123 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-dfd03eb3-cc91-4f88-acec-2d081e994e26', 'json_data': {'messages': [{'role': 'system', 'content': 'Eres un asistente general. Responde preguntas comunes sin inventar datos. Si no aplican herramientas específicas, responde con conocimiento general. Utiliza siempre el  ultimo contexto disponible (como DNI, tipo de consulta, etc.) para responder o realizar llamadas a herramientas, especialmente en consultas referenciales.'}, {'role': 'user', 'content': 'hola, dame los datos del abonado con dni 12345678A'}], 'model': 'meta-llama/llama-4-scout-17b-16e-instruct', 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'existe_abonado', 'description': "Esta herramienta realiza la operación 'existe_abonado' en el endpoint '/existe_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_existe_abonado'}}, 'endpoint': '/existe_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'direccion_abonado', 'description': "Esta herramienta realiza la operación 'direccion_abonado' en el endpoint '/direccion_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_direccion_abonado'}}, 'endpoint': '/direccion_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'estado_pagos', 'description': "Esta herramienta realiza la operación 'estado_pagos' en el endpoint '/estado_pagos' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_estado_pagos'}}, 'endpoint': '/estado_pagos', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'ultimo_pago', 'description': "Esta herramienta realiza la operación 'ultimo_pago' en el endpoint '/ultimo_pago' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_ultimo_pago'}}, 'endpoint': '/ultimo_pago', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'deuda_total', 'description': "Esta herramienta realiza la operación 'deuda_total' en el endpoint '/deuda_total' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_deuda_total'}}, 'endpoint': '/deuda_total', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'facturas_pendientes', 'description': "Esta herramienta realiza la operación 'facturas_pendientes' en el endpoint '/facturas_pendientes' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_facturas_pendientes'}}, 'endpoint': '/facturas_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'todas_las_facturas', 'description': "Esta herramienta realiza la operación 'todas_las_facturas' en el endpoint '/todas_las_facturas' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_todas_las_facturas'}}, 'endpoint': '/todas_las_facturas', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'datos_abonado', 'description': "Esta herramienta realiza la operación 'datos_abonado' en el endpoint '/datos_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Dni'}, 'poliza': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Poliza'}}, 'type': 'object', 'title': 'DatosAbonadoInput'}}, 'endpoint': '/datos_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'crear_incidencia', 'description': "Esta herramienta realiza la operación 'crear_incidencia' en el endpoint '/crear_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}, 'ubicacion': {'type': 'string', 'title': 'Ubicacion'}, 'descripcion': {'type': 'string', 'title': 'Descripcion'}, 'estado': {'type': 'string', 'title': 'Estado', 'default': 'Abierto'}}, 'type': 'object', 'required': ['dni', 'ubicacion', 'descripcion'], 'title': 'Body_crear_incidencia'}}, 'endpoint': '/crear_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_dni', 'description': "Esta herramienta realiza la operación 'incidencias_por_dni' en el endpoint '/incidencias_por_dni' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_incidencias_por_dni'}}, 'endpoint': '/incidencias_por_dni', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_nombre', 'description': "Esta herramienta realiza la operación 'incidencias_por_nombre' en el endpoint '/incidencias_por_nombre' usando el método 'POST.'", 'parameters': {'properties': {'nombre': {'type': 'string', 'title': 'Nombre'}}, 'type': 'object', 'required': ['nombre'], 'title': 'Body_incidencias_por_nombre'}}, 'endpoint': '/incidencias_por_nombre', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'actualizar_estado_incidencia', 'description': "Esta herramienta realiza la operación 'actualizar_estado_incidencia' en el endpoint '/actualizar_estado_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'incidencia_id': {'type': 'integer', 'title': 'Incidencia Id'}, 'nuevo_estado': {'type': 'string', 'title': 'Nuevo Estado'}}, 'type': 'object', 'required': ['incidencia_id', 'nuevo_estado'], 'title': 'Body_actualizar_estado_incidencia'}}, 'endpoint': '/actualizar_estado_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_pendientes', 'description': "Esta herramienta realiza la operación 'incidencias_pendientes' en el endpoint '/incidencias_pendientes' usando el método 'POST.'", 'parameters': {}}, 'endpoint': '/incidencias_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_ubicacion', 'description': "Esta herramienta realiza la operación 'incidencias_por_ubicacion' en el endpoint '/incidencias_por_ubicacion' usando el método 'POST.'", 'parameters': {'properties': {'ubicacion': {'type': 'string', 'title': 'Ubicacion'}}, 'type': 'object', 'required': ['ubicacion'], 'title': 'Body_incidencias_por_ubicacion'}}, 'endpoint': '/incidencias_por_ubicacion', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'herramientas_disponibles', 'description': "Esta herramienta realiza la operación 'herramientas_disponibles' en el endpoint '/herramientas_disponibles' usando el método 'GET.'", 'parameters': {}}, 'endpoint': '/herramientas_disponibles', 'method': 'GET'}]}}
2025-06-23 14:19:30,229 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-06-23 14:19:30,230 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:19:30,293 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000028E8B9A51D0>
2025-06-23 14:19:30,293 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000028E8B8A5BE0> server_hostname='api.groq.com' timeout=5.0
2025-06-23 14:19:30,325 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000028E8B9A5310>
2025-06-23 14:19:30,325 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 14:19:30,325 - DEBUG - send_request_headers.complete
2025-06-23 14:19:30,326 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 14:19:30,326 - DEBUG - send_request_body.complete
2025-06-23 14:19:30,326 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 14:19:31,063 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 23 Jun 2025 12:19:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'gcp-europe-west3'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'994'), (b'x-ratelimit-remaining-tokens', b'29897'), (b'x-ratelimit-reset-requests', b'7m15.076s'), (b'x-ratelimit-reset-tokens', b'206ms'), (b'x-request-id', b'req_01jyebncksensaq608h834xnyq'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=WO6Z7EEljcGhFRy6f2nhyYRx4vUepTGRuw.u5kdjgAE-1750681171-1.0.1.1-whDHtFbgxAPxM1VYrhAOGdxvTtqY59sASx4fMALmX86OUQrsQXikeKJ5XLp.6QpdO_LsXhtTUMa4H2RNmPFSRce144WP6o4i1HtGsujdGvY; path=/; expires=Mon, 23-Jun-25 12:49:31 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9543ef2349c9cfda-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-23 14:19:31,064 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-23 14:19:31,064 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 14:19:31,065 - DEBUG - receive_response_body.complete
2025-06-23 14:19:31,065 - DEBUG - response_closed.started
2025-06-23 14:19:31,065 - DEBUG - response_closed.complete
2025-06-23 14:19:31,066 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Mon, 23 Jun 2025 12:19:31 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'gcp-europe-west3', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '994', 'x-ratelimit-remaining-tokens': '29897', 'x-ratelimit-reset-requests': '7m15.076s', 'x-ratelimit-reset-tokens': '206ms', 'x-request-id': 'req_01jyebncksensaq608h834xnyq', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=WO6Z7EEljcGhFRy6f2nhyYRx4vUepTGRuw.u5kdjgAE-1750681171-1.0.1.1-whDHtFbgxAPxM1VYrhAOGdxvTtqY59sASx4fMALmX86OUQrsQXikeKJ5XLp.6QpdO_LsXhtTUMa4H2RNmPFSRce144WP6o4i1HtGsujdGvY; path=/; expires=Mon, 23-Jun-25 12:49:31 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '9543ef2349c9cfda-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-23 14:19:31,070 - INFO - Received response: ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='jbxkxbsgs', function=Function(arguments='{"dni":"12345678A"}', name='datos_abonado'), type='function')])
2025-06-23 14:19:31,070 - INFO - Executing tool: datos_abonado with args: {'dni': '12345678A'}
2025-06-23 14:19:31,589 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:19:33,642 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000028E8B833360>
2025-06-23 14:19:33,642 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 14:19:33,643 - DEBUG - send_request_headers.complete
2025-06-23 14:19:33,643 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 14:19:33,643 - DEBUG - send_request_body.complete
2025-06-23 14:19:33,644 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 14:19:33,649 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:19:32 GMT'), (b'server', b'uvicorn'), (b'content-length', b'141'), (b'content-type', b'application/json')])
2025-06-23 14:19:33,649 - INFO - HTTP Request: POST http://localhost:8000/datos_abonado "HTTP/1.1 200 OK"
2025-06-23 14:19:33,649 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 14:19:33,650 - DEBUG - receive_response_body.complete
2025-06-23 14:19:33,650 - DEBUG - response_closed.started
2025-06-23 14:19:33,650 - DEBUG - response_closed.complete
2025-06-23 14:19:33,650 - DEBUG - close.started
2025-06-23 14:19:33,650 - DEBUG - close.complete
2025-06-23 14:19:33,650 - INFO - Raw tool response for datos_abonado: {'nombre': 'Juan Pérez', 'dni': '12345678A', 'direccion': 'Calle Falsa 123', 'correo': 'juan@example.com', 'telefono': '123456789', 'poliza': 'POL123'}
2025-06-23 14:19:33,650 - INFO - Final response prepared (tool_call only, markdown returned).
2025-06-23 14:19:33,650 - INFO - Final Markdown content: ### Datos del abonado
- **Nombre:** Juan Pérez
- **DNI:** 12345678A
- **Dirección:** Calle Falsa 123
- **Correo electrónico:** juan@example.com
- **Teléfono:** 123456789
- **Póliza:** POL123
2025-06-23 14:19:34,235 - DEBUG - Initial context before applying field rules: {'last_message': 'crea una incidencia en Huelva, furgoneta averiada', 'requires_real_data': True, 'is_referential': False, 'query_type': 'incidencia_creacion', 'dni': '12345678A', 'ubicacion': 'Huelva', 'descripcion': 'furgoneta averiada'}
2025-06-23 14:19:34,235 - DEBUG - Applying field rules: {'inherit': [], 'remove': ['dni']}
2025-06-23 14:19:34,235 - DEBUG - Removing field: dni from context
2025-06-23 14:19:34,235 - DEBUG - Context after applying removal rules: {'last_message': 'crea una incidencia en Huelva, furgoneta averiada', 'requires_real_data': True, 'is_referential': False, 'query_type': 'incidencia_creacion', 'ubicacion': 'Huelva', 'descripcion': 'furgoneta averiada'}
2025-06-23 14:19:34,235 - DEBUG - Context after applying inheritance rules: {'last_message': 'crea una incidencia en Huelva, furgoneta averiada', 'requires_real_data': True, 'is_referential': False, 'query_type': 'incidencia_creacion', 'ubicacion': 'Huelva', 'descripcion': 'furgoneta averiada'}
2025-06-23 14:19:34,235 - DEBUG - Context after update: {'last_message': 'crea una incidencia en Huelva, furgoneta averiada', 'requires_real_data': True, 'is_referential': False, 'query_type': 'incidencia_creacion', 'ubicacion': 'Huelva', 'descripcion': 'furgoneta averiada'}
2025-06-23 14:19:34,235 - WARNING - Missing context fields: {'dni': 'Perdona, ha habido un fallo: no pude identificar tu DNI. Por favor, reformula tu consulta incluyendo el DNI u otro dato clave.'}
2025-06-23 14:19:55,521 - DEBUG - Initial context before applying field rules: {'last_message': 'crea una incidencia en Huelva, furgoneta averiada para el usuario 12345678A', 'requires_real_data': True, 'is_referential': True, 'query_type': 'incidencia_creacion', 'ubicacion': 'Huelva', 'descripcion': 'furgoneta averiada para el usuario 12345678A', 'dni': '12345678A'}
2025-06-23 14:19:55,521 - DEBUG - Applying field rules: {'inherit': [], 'remove': ['dni']}
2025-06-23 14:19:55,522 - DEBUG - Removing field: dni from context
2025-06-23 14:19:55,522 - DEBUG - Context after applying removal rules: {'last_message': 'crea una incidencia en Huelva, furgoneta averiada para el usuario 12345678A', 'requires_real_data': True, 'is_referential': True, 'query_type': 'incidencia_creacion', 'ubicacion': 'Huelva', 'descripcion': 'furgoneta averiada para el usuario 12345678A'}
2025-06-23 14:19:55,522 - DEBUG - Context after applying inheritance rules: {'last_message': 'crea una incidencia en Huelva, furgoneta averiada para el usuario 12345678A', 'requires_real_data': True, 'is_referential': True, 'query_type': 'incidencia_creacion', 'ubicacion': 'Huelva', 'descripcion': 'furgoneta averiada para el usuario 12345678A'}
2025-06-23 14:19:55,522 - DEBUG - Context after update: {'last_message': 'crea una incidencia en Huelva, furgoneta averiada para el usuario 12345678A', 'requires_real_data': True, 'is_referential': True, 'query_type': 'incidencia_creacion', 'ubicacion': 'Huelva', 'descripcion': 'furgoneta averiada para el usuario 12345678A'}
2025-06-23 14:19:55,522 - WARNING - Missing context fields: {'dni': 'Perdona, ha habido un fallo: no pude identificar tu DNI. Por favor, reformula tu consulta incluyendo el DNI u otro dato clave.'}
2025-06-23 14:21:43,876 - DEBUG - close.started
2025-06-23 14:21:43,877 - DEBUG - close.complete
2025-06-23 14:21:46,315 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:21:48,378 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000017972A69160>
2025-06-23 14:21:48,378 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-23 14:21:48,379 - DEBUG - send_request_headers.complete
2025-06-23 14:21:48,379 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-23 14:21:48,379 - DEBUG - send_request_body.complete
2025-06-23 14:21:48,379 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-23 14:21:48,396 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:21:47 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-23 14:21:48,396 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-23 14:21:48,396 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-23 14:21:48,396 - DEBUG - receive_response_body.complete
2025-06-23 14:21:48,397 - DEBUG - response_closed.started
2025-06-23 14:21:48,397 - DEBUG - response_closed.complete
2025-06-23 14:21:48,397 - DEBUG - close.started
2025-06-23 14:21:48,397 - DEBUG - close.complete
2025-06-23 14:22:23,691 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:22:25,742 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000022DCFA19160>
2025-06-23 14:22:25,743 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-23 14:22:25,743 - DEBUG - send_request_headers.complete
2025-06-23 14:22:25,743 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-23 14:22:25,743 - DEBUG - send_request_body.complete
2025-06-23 14:22:25,743 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-23 14:22:25,760 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:22:24 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-23 14:22:25,761 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-23 14:22:25,761 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-23 14:22:25,761 - DEBUG - receive_response_body.complete
2025-06-23 14:22:25,761 - DEBUG - response_closed.started
2025-06-23 14:22:25,761 - DEBUG - response_closed.complete
2025-06-23 14:22:25,761 - DEBUG - close.started
2025-06-23 14:22:25,761 - DEBUG - close.complete
2025-06-23 14:22:32,793 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:22:34,829 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001A838C19160>
2025-06-23 14:22:34,830 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-23 14:22:34,830 - DEBUG - send_request_headers.complete
2025-06-23 14:22:34,831 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-23 14:22:34,831 - DEBUG - send_request_body.complete
2025-06-23 14:22:34,831 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-23 14:22:34,858 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:22:34 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-23 14:22:34,859 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-23 14:22:34,859 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-23 14:22:34,860 - DEBUG - receive_response_body.complete
2025-06-23 14:22:34,860 - DEBUG - response_closed.started
2025-06-23 14:22:34,860 - DEBUG - response_closed.complete
2025-06-23 14:22:34,860 - DEBUG - close.started
2025-06-23 14:22:34,860 - DEBUG - close.complete
2025-06-23 14:23:04,132 - DEBUG - Initial context before applying field rules: {'last_message': 'hola, dame los datos del abonado con dni 12345678A', 'requires_real_data': True, 'is_referential': False, 'query_type': 'abonado', 'dni': '12345678A'}
2025-06-23 14:23:04,133 - DEBUG - Applying field rules: {'inherit': ['dni'], 'remove': []}
2025-06-23 14:23:04,133 - DEBUG - Context after applying removal rules: {'last_message': 'hola, dame los datos del abonado con dni 12345678A', 'requires_real_data': True, 'is_referential': False, 'query_type': 'abonado', 'dni': '12345678A'}
2025-06-23 14:23:04,133 - WARNING - Field dni not found in previous context, skipping inheritance
2025-06-23 14:23:04,133 - DEBUG - Context after applying inheritance rules: {'last_message': 'hola, dame los datos del abonado con dni 12345678A', 'requires_real_data': True, 'is_referential': False, 'query_type': 'abonado', 'dni': '12345678A'}
2025-06-23 14:23:04,133 - DEBUG - Context after update: {'last_message': 'hola, dame los datos del abonado con dni 12345678A', 'requires_real_data': True, 'is_referential': False, 'query_type': 'abonado', 'dni': '12345678A'}
2025-06-23 14:23:04,133 - INFO - User message: hola, dame los datos del abonado con dni 12345678A
2025-06-23 14:23:04,134 - INFO - Sending initial request to LLM with tool_choice='auto'...
2025-06-23 14:23:04,241 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-565a8041-ea75-42af-89e4-8e869952c74a', 'json_data': {'messages': [{'role': 'system', 'content': 'Eres un asistente general. Responde preguntas comunes sin inventar datos. Si no aplican herramientas específicas, responde con conocimiento general. Utiliza siempre el  ultimo contexto disponible (como DNI, tipo de consulta, etc.) para responder o realizar llamadas a herramientas, especialmente en consultas referenciales.'}, {'role': 'user', 'content': 'hola, dame los datos del abonado con dni 12345678A'}], 'model': 'meta-llama/llama-4-scout-17b-16e-instruct', 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'existe_abonado', 'description': "Esta herramienta realiza la operación 'existe_abonado' en el endpoint '/existe_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_existe_abonado'}}, 'endpoint': '/existe_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'direccion_abonado', 'description': "Esta herramienta realiza la operación 'direccion_abonado' en el endpoint '/direccion_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_direccion_abonado'}}, 'endpoint': '/direccion_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'estado_pagos', 'description': "Esta herramienta realiza la operación 'estado_pagos' en el endpoint '/estado_pagos' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_estado_pagos'}}, 'endpoint': '/estado_pagos', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'ultimo_pago', 'description': "Esta herramienta realiza la operación 'ultimo_pago' en el endpoint '/ultimo_pago' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_ultimo_pago'}}, 'endpoint': '/ultimo_pago', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'deuda_total', 'description': "Esta herramienta realiza la operación 'deuda_total' en el endpoint '/deuda_total' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_deuda_total'}}, 'endpoint': '/deuda_total', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'facturas_pendientes', 'description': "Esta herramienta realiza la operación 'facturas_pendientes' en el endpoint '/facturas_pendientes' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_facturas_pendientes'}}, 'endpoint': '/facturas_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'todas_las_facturas', 'description': "Esta herramienta realiza la operación 'todas_las_facturas' en el endpoint '/todas_las_facturas' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_todas_las_facturas'}}, 'endpoint': '/todas_las_facturas', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'datos_abonado', 'description': "Esta herramienta realiza la operación 'datos_abonado' en el endpoint '/datos_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Dni'}, 'poliza': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Poliza'}}, 'type': 'object', 'title': 'DatosAbonadoInput'}}, 'endpoint': '/datos_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'crear_incidencia', 'description': "Esta herramienta realiza la operación 'crear_incidencia' en el endpoint '/crear_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}, 'ubicacion': {'type': 'string', 'title': 'Ubicacion'}, 'descripcion': {'type': 'string', 'title': 'Descripcion'}, 'estado': {'type': 'string', 'title': 'Estado', 'default': 'Abierto'}}, 'type': 'object', 'required': ['dni', 'ubicacion', 'descripcion'], 'title': 'Body_crear_incidencia'}}, 'endpoint': '/crear_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_dni', 'description': "Esta herramienta realiza la operación 'incidencias_por_dni' en el endpoint '/incidencias_por_dni' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_incidencias_por_dni'}}, 'endpoint': '/incidencias_por_dni', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_nombre', 'description': "Esta herramienta realiza la operación 'incidencias_por_nombre' en el endpoint '/incidencias_por_nombre' usando el método 'POST.'", 'parameters': {'properties': {'nombre': {'type': 'string', 'title': 'Nombre'}}, 'type': 'object', 'required': ['nombre'], 'title': 'Body_incidencias_por_nombre'}}, 'endpoint': '/incidencias_por_nombre', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'actualizar_estado_incidencia', 'description': "Esta herramienta realiza la operación 'actualizar_estado_incidencia' en el endpoint '/actualizar_estado_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'incidencia_id': {'type': 'integer', 'title': 'Incidencia Id'}, 'nuevo_estado': {'type': 'string', 'title': 'Nuevo Estado'}}, 'type': 'object', 'required': ['incidencia_id', 'nuevo_estado'], 'title': 'Body_actualizar_estado_incidencia'}}, 'endpoint': '/actualizar_estado_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_pendientes', 'description': "Esta herramienta realiza la operación 'incidencias_pendientes' en el endpoint '/incidencias_pendientes' usando el método 'POST.'", 'parameters': {}}, 'endpoint': '/incidencias_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_ubicacion', 'description': "Esta herramienta realiza la operación 'incidencias_por_ubicacion' en el endpoint '/incidencias_por_ubicacion' usando el método 'POST.'", 'parameters': {'properties': {'ubicacion': {'type': 'string', 'title': 'Ubicacion'}}, 'type': 'object', 'required': ['ubicacion'], 'title': 'Body_incidencias_por_ubicacion'}}, 'endpoint': '/incidencias_por_ubicacion', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'herramientas_disponibles', 'description': "Esta herramienta realiza la operación 'herramientas_disponibles' en el endpoint '/herramientas_disponibles' usando el método 'GET.'", 'parameters': {}}, 'endpoint': '/herramientas_disponibles', 'method': 'GET'}]}}
2025-06-23 14:23:04,381 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-06-23 14:23:04,381 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:23:04,441 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001A838CC51D0>
2025-06-23 14:23:04,441 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001A838BC1D90> server_hostname='api.groq.com' timeout=5.0
2025-06-23 14:23:04,475 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001A838CC5310>
2025-06-23 14:23:04,475 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 14:23:04,476 - DEBUG - send_request_headers.complete
2025-06-23 14:23:04,476 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 14:23:04,476 - DEBUG - send_request_body.complete
2025-06-23 14:23:04,476 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 14:23:04,882 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 23 Jun 2025 12:23:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'gcp-europe-west3'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'995'), (b'x-ratelimit-remaining-tokens', b'29897'), (b'x-ratelimit-reset-requests', b'6m30.702999999s'), (b'x-ratelimit-reset-tokens', b'206ms'), (b'x-request-id', b'req_01jyebvxpef0rvv8nfkfkze4vs'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=WpPlTBs80gujOfjh6.oDplVqE3t4i3oBZ0T5KTLrmF4-1750681384-1.0.1.1-mlhE9FuNfaQ7RiQ6aVG8mzhanMfqlzoOUgkrif2IkQgUxldxs3pxZ760ybXx4ur_MfFA23ffuHo93nA2MRnVp8CiI9m4i_j1zDE2Iyc5suA; path=/; expires=Mon, 23-Jun-25 12:53:04 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9543f45dbe226665-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-23 14:23:04,884 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-23 14:23:04,884 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 14:23:04,885 - DEBUG - receive_response_body.complete
2025-06-23 14:23:04,885 - DEBUG - response_closed.started
2025-06-23 14:23:04,885 - DEBUG - response_closed.complete
2025-06-23 14:23:04,886 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Mon, 23 Jun 2025 12:23:04 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'gcp-europe-west3', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '995', 'x-ratelimit-remaining-tokens': '29897', 'x-ratelimit-reset-requests': '6m30.702999999s', 'x-ratelimit-reset-tokens': '206ms', 'x-request-id': 'req_01jyebvxpef0rvv8nfkfkze4vs', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=WpPlTBs80gujOfjh6.oDplVqE3t4i3oBZ0T5KTLrmF4-1750681384-1.0.1.1-mlhE9FuNfaQ7RiQ6aVG8mzhanMfqlzoOUgkrif2IkQgUxldxs3pxZ760ybXx4ur_MfFA23ffuHo93nA2MRnVp8CiI9m4i_j1zDE2Iyc5suA; path=/; expires=Mon, 23-Jun-25 12:53:04 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '9543f45dbe226665-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-23 14:23:04,890 - INFO - Received response: ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='073at3nmn', function=Function(arguments='{"dni":"12345678A"}', name='datos_abonado'), type='function')])
2025-06-23 14:23:04,890 - INFO - Executing tool: datos_abonado with args: {'dni': '12345678A'}
2025-06-23 14:23:05,493 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:23:07,547 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001A838B535C0>
2025-06-23 14:23:07,547 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 14:23:07,547 - DEBUG - send_request_headers.complete
2025-06-23 14:23:07,548 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 14:23:07,548 - DEBUG - send_request_body.complete
2025-06-23 14:23:07,548 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 14:23:07,555 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:23:06 GMT'), (b'server', b'uvicorn'), (b'content-length', b'141'), (b'content-type', b'application/json')])
2025-06-23 14:23:07,556 - INFO - HTTP Request: POST http://localhost:8000/datos_abonado "HTTP/1.1 200 OK"
2025-06-23 14:23:07,556 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 14:23:07,556 - DEBUG - receive_response_body.complete
2025-06-23 14:23:07,556 - DEBUG - response_closed.started
2025-06-23 14:23:07,556 - DEBUG - response_closed.complete
2025-06-23 14:23:07,557 - DEBUG - close.started
2025-06-23 14:23:07,557 - DEBUG - close.complete
2025-06-23 14:23:07,557 - INFO - Raw tool response for datos_abonado: {'nombre': 'Juan Pérez', 'dni': '12345678A', 'direccion': 'Calle Falsa 123', 'correo': 'juan@example.com', 'telefono': '123456789', 'poliza': 'POL123'}
2025-06-23 14:23:07,557 - INFO - Final response prepared (tool_call only, markdown returned).
2025-06-23 14:23:07,557 - INFO - Final Markdown content: ### Datos del abonado
- **Nombre:** Juan Pérez
- **DNI:** 12345678A
- **Dirección:** Calle Falsa 123
- **Correo electrónico:** juan@example.com
- **Teléfono:** 123456789
- **Póliza:** POL123
2025-06-23 14:23:09,637 - DEBUG - Initial context before applying field rules: {'last_message': 'crea una incidencia en Huelva, furgoneta averiada para el usuario 12345678A', 'requires_real_data': True, 'is_referential': False, 'query_type': 'incidencia_creacion', 'dni': '12345678A', 'ubicacion': 'Huelva', 'descripcion': 'furgoneta averiada para el usuario 12345678A'}
2025-06-23 14:23:09,637 - DEBUG - Applying field rules: {'inherit': [], 'remove': ['dni']}
2025-06-23 14:23:09,637 - DEBUG - Skipping removal of field: dni
2025-06-23 14:23:09,637 - DEBUG - Context after applying removal rules: {'last_message': 'crea una incidencia en Huelva, furgoneta averiada para el usuario 12345678A', 'requires_real_data': True, 'is_referential': False, 'query_type': 'incidencia_creacion', 'dni': '12345678A', 'ubicacion': 'Huelva', 'descripcion': 'furgoneta averiada para el usuario 12345678A'}
2025-06-23 14:23:09,637 - DEBUG - Context after applying inheritance rules: {'last_message': 'crea una incidencia en Huelva, furgoneta averiada para el usuario 12345678A', 'requires_real_data': True, 'is_referential': False, 'query_type': 'incidencia_creacion', 'dni': '12345678A', 'ubicacion': 'Huelva', 'descripcion': 'furgoneta averiada para el usuario 12345678A'}
2025-06-23 14:23:09,637 - DEBUG - Context after update: {'last_message': 'crea una incidencia en Huelva, furgoneta averiada para el usuario 12345678A', 'requires_real_data': True, 'is_referential': False, 'query_type': 'incidencia_creacion', 'dni': '12345678A', 'ubicacion': 'Huelva', 'descripcion': 'furgoneta averiada para el usuario 12345678A'}
2025-06-23 14:23:09,637 - INFO - User message: crea una incidencia en Huelva, furgoneta averiada para el usuario 12345678A
2025-06-23 14:23:09,637 - INFO - Sending initial request to LLM with tool_choice='auto'...
2025-06-23 14:23:09,639 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-0969acb3-28de-4fd2-b9f2-46fb1cf0fd8a', 'json_data': {'messages': [{'role': 'system', 'content': "Eres un agente especializado en gestión de incidencias. **No inventes datos**; extrae el DNI o ID de incidencia y llama a la herramienta correcta. Presenta sólo los datos reales obtenidos de la API. No llames a herramientas de abonado como direccion_abonado para consultas de incidencias. \n\nCuando te pregunten por una ubicación, usa siempre incidencias_por_ubicacion. Si la pregunta es referencial (ejemplo: 'Y en Barcelona?'), significa que el usuario quiere consultar las incidencias en esa nueva ubicación. Asegúrate de que las consultas referenciales con ubicación generen siempre una llamada a la herramienta adecuada."}, {'role': 'user', 'content': 'crea una incidencia en Huelva, furgoneta averiada para el usuario 12345678A'}], 'model': 'meta-llama/llama-4-scout-17b-16e-instruct', 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'existe_abonado', 'description': "Esta herramienta realiza la operación 'existe_abonado' en el endpoint '/existe_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_existe_abonado'}}, 'endpoint': '/existe_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'direccion_abonado', 'description': "Esta herramienta realiza la operación 'direccion_abonado' en el endpoint '/direccion_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_direccion_abonado'}}, 'endpoint': '/direccion_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'estado_pagos', 'description': "Esta herramienta realiza la operación 'estado_pagos' en el endpoint '/estado_pagos' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_estado_pagos'}}, 'endpoint': '/estado_pagos', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'ultimo_pago', 'description': "Esta herramienta realiza la operación 'ultimo_pago' en el endpoint '/ultimo_pago' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_ultimo_pago'}}, 'endpoint': '/ultimo_pago', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'deuda_total', 'description': "Esta herramienta realiza la operación 'deuda_total' en el endpoint '/deuda_total' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_deuda_total'}}, 'endpoint': '/deuda_total', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'facturas_pendientes', 'description': "Esta herramienta realiza la operación 'facturas_pendientes' en el endpoint '/facturas_pendientes' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_facturas_pendientes'}}, 'endpoint': '/facturas_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'todas_las_facturas', 'description': "Esta herramienta realiza la operación 'todas_las_facturas' en el endpoint '/todas_las_facturas' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_todas_las_facturas'}}, 'endpoint': '/todas_las_facturas', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'datos_abonado', 'description': "Esta herramienta realiza la operación 'datos_abonado' en el endpoint '/datos_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Dni'}, 'poliza': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Poliza'}}, 'type': 'object', 'title': 'DatosAbonadoInput'}}, 'endpoint': '/datos_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'crear_incidencia', 'description': "Esta herramienta realiza la operación 'crear_incidencia' en el endpoint '/crear_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}, 'ubicacion': {'type': 'string', 'title': 'Ubicacion'}, 'descripcion': {'type': 'string', 'title': 'Descripcion'}, 'estado': {'type': 'string', 'title': 'Estado', 'default': 'Abierto'}}, 'type': 'object', 'required': ['dni', 'ubicacion', 'descripcion'], 'title': 'Body_crear_incidencia'}}, 'endpoint': '/crear_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_dni', 'description': "Esta herramienta realiza la operación 'incidencias_por_dni' en el endpoint '/incidencias_por_dni' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_incidencias_por_dni'}}, 'endpoint': '/incidencias_por_dni', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_nombre', 'description': "Esta herramienta realiza la operación 'incidencias_por_nombre' en el endpoint '/incidencias_por_nombre' usando el método 'POST.'", 'parameters': {'properties': {'nombre': {'type': 'string', 'title': 'Nombre'}}, 'type': 'object', 'required': ['nombre'], 'title': 'Body_incidencias_por_nombre'}}, 'endpoint': '/incidencias_por_nombre', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'actualizar_estado_incidencia', 'description': "Esta herramienta realiza la operación 'actualizar_estado_incidencia' en el endpoint '/actualizar_estado_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'incidencia_id': {'type': 'integer', 'title': 'Incidencia Id'}, 'nuevo_estado': {'type': 'string', 'title': 'Nuevo Estado'}}, 'type': 'object', 'required': ['incidencia_id', 'nuevo_estado'], 'title': 'Body_actualizar_estado_incidencia'}}, 'endpoint': '/actualizar_estado_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_pendientes', 'description': "Esta herramienta realiza la operación 'incidencias_pendientes' en el endpoint '/incidencias_pendientes' usando el método 'POST.'", 'parameters': {}}, 'endpoint': '/incidencias_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_ubicacion', 'description': "Esta herramienta realiza la operación 'incidencias_por_ubicacion' en el endpoint '/incidencias_por_ubicacion' usando el método 'POST.'", 'parameters': {'properties': {'ubicacion': {'type': 'string', 'title': 'Ubicacion'}}, 'type': 'object', 'required': ['ubicacion'], 'title': 'Body_incidencias_por_ubicacion'}}, 'endpoint': '/incidencias_por_ubicacion', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'herramientas_disponibles', 'description': "Esta herramienta realiza la operación 'herramientas_disponibles' en el endpoint '/herramientas_disponibles' usando el método 'GET.'", 'parameters': {}}, 'endpoint': '/herramientas_disponibles', 'method': 'GET'}]}}
2025-06-23 14:23:09,640 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-06-23 14:23:09,641 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 14:23:09,641 - DEBUG - send_request_headers.complete
2025-06-23 14:23:09,642 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 14:23:09,642 - DEBUG - send_request_body.complete
2025-06-23 14:23:09,642 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 14:23:09,995 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 23 Jun 2025 12:23:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'gcp-europe-west3'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'994'), (b'x-ratelimit-remaining-tokens', b'29815'), (b'x-ratelimit-reset-requests', b'8m33.248s'), (b'x-ratelimit-reset-tokens', b'370ms'), (b'x-request-id', b'req_01jyebw2qeeyar7ps5nffdq40t'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9543f47e18886665-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-23 14:23:09,995 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-23 14:23:09,996 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 14:23:09,996 - DEBUG - receive_response_body.complete
2025-06-23 14:23:09,996 - DEBUG - response_closed.started
2025-06-23 14:23:09,996 - DEBUG - response_closed.complete
2025-06-23 14:23:09,996 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Mon, 23 Jun 2025 12:23:10 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'gcp-europe-west3', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '994', 'x-ratelimit-remaining-tokens': '29815', 'x-ratelimit-reset-requests': '8m33.248s', 'x-ratelimit-reset-tokens': '370ms', 'x-request-id': 'req_01jyebw2qeeyar7ps5nffdq40t', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '9543f47e18886665-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-23 14:23:09,997 - INFO - Received response: ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='jhvpj8ert', function=Function(arguments='{"descripcion":"Furgoneta averiada","dni":"12345678A","ubicacion":"Huelva"}', name='crear_incidencia'), type='function')])
2025-06-23 14:23:09,998 - INFO - Executing tool: crear_incidencia with args: {'descripcion': 'Furgoneta averiada', 'dni': '12345678A', 'ubicacion': 'Huelva'}
2025-06-23 14:23:10,545 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:23:12,566 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001A838CEA060>
2025-06-23 14:23:12,567 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 14:23:12,568 - DEBUG - send_request_headers.complete
2025-06-23 14:23:12,568 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 14:23:12,568 - DEBUG - send_request_body.complete
2025-06-23 14:23:12,568 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 14:23:12,595 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:23:11 GMT'), (b'server', b'uvicorn'), (b'content-length', b'78'), (b'content-type', b'application/json')])
2025-06-23 14:23:12,596 - INFO - HTTP Request: POST http://localhost:8000/crear_incidencia "HTTP/1.1 200 OK"
2025-06-23 14:23:12,596 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 14:23:12,597 - DEBUG - receive_response_body.complete
2025-06-23 14:23:12,597 - DEBUG - response_closed.started
2025-06-23 14:23:12,597 - DEBUG - response_closed.complete
2025-06-23 14:23:12,597 - DEBUG - close.started
2025-06-23 14:23:12,597 - DEBUG - close.complete
2025-06-23 14:23:12,598 - INFO - Raw tool response for crear_incidencia: {'message': 'Incidencia creada exitosamente para el abonado con DNI 12345678A'}
2025-06-23 14:23:12,598 - INFO - Final response prepared (tool_call only, markdown returned).
2025-06-23 14:23:12,598 - INFO - Final Markdown content: ### Resultado de la creación de incidencia
- **Mensaje:** Incidencia creada exitosamente para el abonado con DNI 12345678A
2025-06-23 14:28:26,639 - DEBUG - close.started
2025-06-23 14:28:26,641 - DEBUG - close.complete
2025-06-23 14:28:28,871 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:28:30,916 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001AAA5449160>
2025-06-23 14:28:30,917 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-23 14:28:30,917 - DEBUG - send_request_headers.complete
2025-06-23 14:28:30,917 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-23 14:28:30,917 - DEBUG - send_request_body.complete
2025-06-23 14:28:30,917 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-23 14:28:30,933 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:28:30 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-23 14:28:30,933 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-23 14:28:30,933 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-23 14:28:30,934 - DEBUG - receive_response_body.complete
2025-06-23 14:28:30,934 - DEBUG - response_closed.started
2025-06-23 14:28:30,934 - DEBUG - response_closed.complete
2025-06-23 14:28:30,934 - DEBUG - close.started
2025-06-23 14:28:30,934 - DEBUG - close.complete
2025-06-23 14:28:50,492 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:28:52,527 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021871429160>
2025-06-23 14:28:52,527 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-23 14:28:52,528 - DEBUG - send_request_headers.complete
2025-06-23 14:28:52,528 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-23 14:28:52,529 - DEBUG - send_request_body.complete
2025-06-23 14:28:52,529 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-23 14:28:52,544 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:28:51 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-23 14:28:52,545 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-23 14:28:52,545 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-23 14:28:52,546 - DEBUG - receive_response_body.complete
2025-06-23 14:28:52,546 - DEBUG - response_closed.started
2025-06-23 14:28:52,546 - DEBUG - response_closed.complete
2025-06-23 14:28:52,546 - DEBUG - close.started
2025-06-23 14:28:52,546 - DEBUG - close.complete
2025-06-23 14:36:33,969 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:36:36,033 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002982CB19160>
2025-06-23 14:36:36,034 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-23 14:36:36,034 - DEBUG - send_request_headers.complete
2025-06-23 14:36:36,034 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-23 14:36:36,034 - DEBUG - send_request_body.complete
2025-06-23 14:36:36,034 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-23 14:36:36,413 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:36:36 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-23 14:36:36,413 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-23 14:36:36,414 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-23 14:36:36,414 - DEBUG - receive_response_body.complete
2025-06-23 14:36:36,414 - DEBUG - response_closed.started
2025-06-23 14:36:36,414 - DEBUG - response_closed.complete
2025-06-23 14:36:36,414 - DEBUG - close.started
2025-06-23 14:36:36,414 - DEBUG - close.complete
2025-06-23 14:36:38,865 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:36:40,935 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000018156CB9400>
2025-06-23 14:36:40,935 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-23 14:36:40,936 - DEBUG - send_request_headers.complete
2025-06-23 14:36:40,936 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-23 14:36:40,936 - DEBUG - send_request_body.complete
2025-06-23 14:36:40,936 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-23 14:36:40,939 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:36:40 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-23 14:36:40,939 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-23 14:36:40,939 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-23 14:36:40,939 - DEBUG - receive_response_body.complete
2025-06-23 14:36:40,939 - DEBUG - response_closed.started
2025-06-23 14:36:40,939 - DEBUG - response_closed.complete
2025-06-23 14:36:40,939 - DEBUG - close.started
2025-06-23 14:36:40,940 - DEBUG - close.complete
2025-06-23 14:52:21,290 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:52:23,325 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024982FC52B0>
2025-06-23 14:52:23,325 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-23 14:52:23,326 - DEBUG - send_request_headers.complete
2025-06-23 14:52:23,326 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-23 14:52:23,327 - DEBUG - send_request_body.complete
2025-06-23 14:52:23,327 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-23 14:52:23,354 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:52:22 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-23 14:52:23,356 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-23 14:52:23,357 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-23 14:52:23,357 - DEBUG - receive_response_body.complete
2025-06-23 14:52:23,357 - DEBUG - response_closed.started
2025-06-23 14:52:23,358 - DEBUG - response_closed.complete
2025-06-23 14:52:23,358 - DEBUG - close.started
2025-06-23 14:52:23,358 - DEBUG - close.complete
2025-06-23 14:52:33,571 - ERROR - Error inesperado procesando el mensaje: 'FrameworkContextManager' object has no attribute 'is_referential_query'
Traceback (most recent call last):
  File "C:\projects\mcp_groq\app\agent\agents\shared_chat_agent.py", line 65, in handle_message_with_context
    self.context.update(user_message)  # Actualiza el contexto con el mensaje
    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^
  File "C:\projects\mcp_groq\app\utils\conversation_context.py", line 25, in update
    self.data['is_referential'] = context_config.is_referential_query(user_message)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'FrameworkContextManager' object has no attribute 'is_referential_query'. Did you mean: 'is_referential'?
2025-06-23 14:53:35,108 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:53:37,146 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001CA47EA5160>
2025-06-23 14:53:37,146 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-23 14:53:37,146 - DEBUG - send_request_headers.complete
2025-06-23 14:53:37,146 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-23 14:53:37,146 - DEBUG - send_request_body.complete
2025-06-23 14:53:37,146 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-23 14:53:37,163 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:53:36 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-23 14:53:37,164 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-23 14:53:37,164 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-23 14:53:37,164 - DEBUG - receive_response_body.complete
2025-06-23 14:53:37,164 - DEBUG - response_closed.started
2025-06-23 14:53:37,164 - DEBUG - response_closed.complete
2025-06-23 14:53:37,164 - DEBUG - close.started
2025-06-23 14:53:37,164 - DEBUG - close.complete
2025-06-23 14:53:54,035 - DEBUG - Initial context before applying field rules: {'last_message': 'hola, dame los datos del abonado con dni 12345678A', 'requires_real_data': True, 'is_referential': False, 'query_type': 'abonado', 'dni': '12345678A'}
2025-06-23 14:53:54,036 - DEBUG - Context after update: {'last_message': 'hola, dame los datos del abonado con dni 12345678A', 'requires_real_data': True, 'is_referential': False, 'query_type': 'abonado', 'dni': '12345678A'}
2025-06-23 14:53:54,036 - INFO - User message: hola, dame los datos del abonado con dni 12345678A
2025-06-23 14:53:54,036 - INFO - Sending initial request to LLM with tool_choice='auto'...
2025-06-23 14:53:54,136 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-2bbacdc2-84bd-49a2-9aaa-4418192be862', 'json_data': {'messages': [{'role': 'system', 'content': 'Eres un asistente general. Responde preguntas comunes sin inventar datos. Si no aplican herramientas específicas, responde con conocimiento general. Utiliza siempre el  ultimo contexto disponible (como DNI, tipo de consulta, etc.) para responder o realizar llamadas a herramientas, especialmente en consultas referenciales.'}, {'role': 'user', 'content': 'hola, dame los datos del abonado con dni 12345678A'}], 'model': 'meta-llama/llama-4-scout-17b-16e-instruct', 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'existe_abonado', 'description': "Esta herramienta realiza la operación 'existe_abonado' en el endpoint '/existe_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_existe_abonado'}}, 'endpoint': '/existe_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'direccion_abonado', 'description': "Esta herramienta realiza la operación 'direccion_abonado' en el endpoint '/direccion_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_direccion_abonado'}}, 'endpoint': '/direccion_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'estado_pagos', 'description': "Esta herramienta realiza la operación 'estado_pagos' en el endpoint '/estado_pagos' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_estado_pagos'}}, 'endpoint': '/estado_pagos', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'ultimo_pago', 'description': "Esta herramienta realiza la operación 'ultimo_pago' en el endpoint '/ultimo_pago' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_ultimo_pago'}}, 'endpoint': '/ultimo_pago', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'deuda_total', 'description': "Esta herramienta realiza la operación 'deuda_total' en el endpoint '/deuda_total' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_deuda_total'}}, 'endpoint': '/deuda_total', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'facturas_pendientes', 'description': "Esta herramienta realiza la operación 'facturas_pendientes' en el endpoint '/facturas_pendientes' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_facturas_pendientes'}}, 'endpoint': '/facturas_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'todas_las_facturas', 'description': "Esta herramienta realiza la operación 'todas_las_facturas' en el endpoint '/todas_las_facturas' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_todas_las_facturas'}}, 'endpoint': '/todas_las_facturas', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'datos_abonado', 'description': "Esta herramienta realiza la operación 'datos_abonado' en el endpoint '/datos_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Dni'}, 'poliza': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Poliza'}}, 'type': 'object', 'title': 'DatosAbonadoInput'}}, 'endpoint': '/datos_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'crear_incidencia', 'description': "Esta herramienta realiza la operación 'crear_incidencia' en el endpoint '/crear_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}, 'ubicacion': {'type': 'string', 'title': 'Ubicacion'}, 'descripcion': {'type': 'string', 'title': 'Descripcion'}, 'estado': {'type': 'string', 'title': 'Estado', 'default': 'Abierto'}}, 'type': 'object', 'required': ['dni', 'ubicacion', 'descripcion'], 'title': 'Body_crear_incidencia'}}, 'endpoint': '/crear_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_dni', 'description': "Esta herramienta realiza la operación 'incidencias_por_dni' en el endpoint '/incidencias_por_dni' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_incidencias_por_dni'}}, 'endpoint': '/incidencias_por_dni', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_nombre', 'description': "Esta herramienta realiza la operación 'incidencias_por_nombre' en el endpoint '/incidencias_por_nombre' usando el método 'POST.'", 'parameters': {'properties': {'nombre': {'type': 'string', 'title': 'Nombre'}}, 'type': 'object', 'required': ['nombre'], 'title': 'Body_incidencias_por_nombre'}}, 'endpoint': '/incidencias_por_nombre', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'actualizar_estado_incidencia', 'description': "Esta herramienta realiza la operación 'actualizar_estado_incidencia' en el endpoint '/actualizar_estado_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'incidencia_id': {'type': 'integer', 'title': 'Incidencia Id'}, 'nuevo_estado': {'type': 'string', 'title': 'Nuevo Estado'}}, 'type': 'object', 'required': ['incidencia_id', 'nuevo_estado'], 'title': 'Body_actualizar_estado_incidencia'}}, 'endpoint': '/actualizar_estado_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_pendientes', 'description': "Esta herramienta realiza la operación 'incidencias_pendientes' en el endpoint '/incidencias_pendientes' usando el método 'POST.'", 'parameters': {}}, 'endpoint': '/incidencias_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_ubicacion', 'description': "Esta herramienta realiza la operación 'incidencias_por_ubicacion' en el endpoint '/incidencias_por_ubicacion' usando el método 'POST.'", 'parameters': {'properties': {'ubicacion': {'type': 'string', 'title': 'Ubicacion'}}, 'type': 'object', 'required': ['ubicacion'], 'title': 'Body_incidencias_por_ubicacion'}}, 'endpoint': '/incidencias_por_ubicacion', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'herramientas_disponibles', 'description': "Esta herramienta realiza la operación 'herramientas_disponibles' en el endpoint '/herramientas_disponibles' usando el método 'GET.'", 'parameters': {}}, 'endpoint': '/herramientas_disponibles', 'method': 'GET'}]}}
2025-06-23 14:53:54,309 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-06-23 14:53:54,310 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:53:54,379 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001CA47F51450>
2025-06-23 14:53:54,379 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001CA47E59AC0> server_hostname='api.groq.com' timeout=5.0
2025-06-23 14:53:54,413 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001CA47F51590>
2025-06-23 14:53:54,413 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 14:53:54,414 - DEBUG - send_request_headers.complete
2025-06-23 14:53:54,414 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 14:53:54,414 - DEBUG - send_request_body.complete
2025-06-23 14:53:54,414 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 14:53:54,757 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 23 Jun 2025 12:53:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'gcp-europe-west3'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'29897'), (b'x-ratelimit-reset-requests', b'1m26.4s'), (b'x-ratelimit-reset-tokens', b'206ms'), (b'x-request-id', b'req_01jyedmcasfnf81kzzftt7vbbv'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=Bg4w2DnX_aypPKYFEUp4T1FIUjs4qVYiWZL7Fc470LA-1750683234-1.0.1.1-6AA5lVUoIZXMzJanoGxiuUKprgBmtcBSbX0gc_Jf2iEl2P.ZHJ6mIOkefpw9QbBYe2sf2dC6aJtYTRBZMRdx6.he8pKrUIYRDPVMMDSlDUU; path=/; expires=Mon, 23-Jun-25 13:23:54 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95442187f9fdcbe4-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-23 14:53:54,759 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-23 14:53:54,759 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 14:53:54,759 - DEBUG - receive_response_body.complete
2025-06-23 14:53:54,760 - DEBUG - response_closed.started
2025-06-23 14:53:54,760 - DEBUG - response_closed.complete
2025-06-23 14:53:54,760 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Mon, 23 Jun 2025 12:53:54 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'gcp-europe-west3', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '29897', 'x-ratelimit-reset-requests': '1m26.4s', 'x-ratelimit-reset-tokens': '206ms', 'x-request-id': 'req_01jyedmcasfnf81kzzftt7vbbv', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=Bg4w2DnX_aypPKYFEUp4T1FIUjs4qVYiWZL7Fc470LA-1750683234-1.0.1.1-6AA5lVUoIZXMzJanoGxiuUKprgBmtcBSbX0gc_Jf2iEl2P.ZHJ6mIOkefpw9QbBYe2sf2dC6aJtYTRBZMRdx6.he8pKrUIYRDPVMMDSlDUU; path=/; expires=Mon, 23-Jun-25 13:23:54 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '95442187f9fdcbe4-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-23 14:53:54,764 - INFO - Received response: ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='m3z1k3cr5', function=Function(arguments='{"dni":"12345678A"}', name='datos_abonado'), type='function')])
2025-06-23 14:53:54,764 - INFO - Executing tool: datos_abonado with args: {'dni': '12345678A'}
2025-06-23 14:53:55,286 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:53:57,325 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001CA47DE3490>
2025-06-23 14:53:57,325 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 14:53:57,326 - DEBUG - send_request_headers.complete
2025-06-23 14:53:57,326 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 14:53:57,326 - DEBUG - send_request_body.complete
2025-06-23 14:53:57,326 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 14:53:57,334 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:53:56 GMT'), (b'server', b'uvicorn'), (b'content-length', b'141'), (b'content-type', b'application/json')])
2025-06-23 14:53:57,334 - INFO - HTTP Request: POST http://localhost:8000/datos_abonado "HTTP/1.1 200 OK"
2025-06-23 14:53:57,334 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 14:53:57,334 - DEBUG - receive_response_body.complete
2025-06-23 14:53:57,334 - DEBUG - response_closed.started
2025-06-23 14:53:57,334 - DEBUG - response_closed.complete
2025-06-23 14:53:57,335 - DEBUG - close.started
2025-06-23 14:53:57,335 - DEBUG - close.complete
2025-06-23 14:53:57,335 - INFO - Raw tool response for datos_abonado: {'nombre': 'Juan Pérez', 'dni': '12345678A', 'direccion': 'Calle Falsa 123', 'correo': 'juan@example.com', 'telefono': '123456789', 'poliza': 'POL123'}
2025-06-23 14:53:57,335 - INFO - Final response prepared (tool_call only, markdown returned).
2025-06-23 14:53:57,335 - INFO - Final Markdown content: ### Datos del abonado
- **Nombre:** Juan Pérez
- **DNI:** 12345678A
- **Dirección:** Calle Falsa 123
- **Correo electrónico:** juan@example.com
- **Teléfono:** 123456789
- **Póliza:** POL123
2025-06-23 14:56:10,205 - DEBUG - close.started
2025-06-23 14:56:10,207 - DEBUG - close.complete
2025-06-23 14:56:12,492 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:56:14,547 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000022ACDBE5160>
2025-06-23 14:56:14,548 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-23 14:56:14,548 - DEBUG - send_request_headers.complete
2025-06-23 14:56:14,548 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-23 14:56:14,548 - DEBUG - send_request_body.complete
2025-06-23 14:56:14,548 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-23 14:56:14,561 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:56:13 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-23 14:56:14,562 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-23 14:56:14,562 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-23 14:56:14,562 - DEBUG - receive_response_body.complete
2025-06-23 14:56:14,562 - DEBUG - response_closed.started
2025-06-23 14:56:14,562 - DEBUG - response_closed.complete
2025-06-23 14:56:14,562 - DEBUG - close.started
2025-06-23 14:56:14,562 - DEBUG - close.complete
2025-06-23 14:56:58,618 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:57:00,649 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000025B99C71160>
2025-06-23 14:57:00,649 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-23 14:57:00,649 - DEBUG - send_request_headers.complete
2025-06-23 14:57:00,650 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-23 14:57:00,650 - DEBUG - send_request_body.complete
2025-06-23 14:57:00,650 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-23 14:57:00,652 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:57:00 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-23 14:57:00,652 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-23 14:57:00,653 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-23 14:57:00,653 - DEBUG - receive_response_body.complete
2025-06-23 14:57:00,653 - DEBUG - response_closed.started
2025-06-23 14:57:00,653 - DEBUG - response_closed.complete
2025-06-23 14:57:00,653 - DEBUG - close.started
2025-06-23 14:57:00,653 - DEBUG - close.complete
2025-06-23 14:57:05,734 - DEBUG - Context after update: {'last_message': 'hola, dame los datos del abonado con dni 12345678A', 'requires_real_data': True, 'is_referential': False, 'query_type': 'abonado', 'dni': '12345678A', 'descripcion': 'dame los datos del abonado con dni 12345678A'}
2025-06-23 14:57:05,734 - ERROR - Error inesperado procesando el mensaje: 'ConversationContext' object has no attribute 'validate_context'
Traceback (most recent call last):
  File "C:\projects\mcp_groq\app\agent\agents\shared_chat_agent.py", line 69, in handle_message_with_context
    validation_result = self.context.validate_context()
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ConversationContext' object has no attribute 'validate_context'
2025-06-23 14:57:52,386 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:57:54,427 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000205D09D5160>
2025-06-23 14:57:54,427 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-23 14:57:54,428 - DEBUG - send_request_headers.complete
2025-06-23 14:57:54,428 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-23 14:57:54,429 - DEBUG - send_request_body.complete
2025-06-23 14:57:54,429 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-23 14:57:54,470 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:57:53 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-23 14:57:54,471 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-23 14:57:54,472 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-23 14:57:54,472 - DEBUG - receive_response_body.complete
2025-06-23 14:57:54,473 - DEBUG - response_closed.started
2025-06-23 14:57:54,473 - DEBUG - response_closed.complete
2025-06-23 14:57:54,473 - DEBUG - close.started
2025-06-23 14:57:54,473 - DEBUG - close.complete
2025-06-23 14:58:07,291 - DEBUG - Context after update: {'last_message': 'hola, dame los datos del abonado con dni 12345678A', 'requires_real_data': True, 'is_referential': False, 'query_type': 'abonado', 'dni': '12345678A', 'descripcion': 'dame los datos del abonado con dni 12345678A'}
2025-06-23 14:58:07,291 - INFO - User message: hola, dame los datos del abonado con dni 12345678A
2025-06-23 14:58:07,291 - INFO - Sending initial request to LLM with tool_choice='auto'...
2025-06-23 14:58:07,358 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-4239f6cb-7d4f-4d9e-90b0-5207378ccf76', 'json_data': {'messages': [{'role': 'system', 'content': 'Eres un asistente general. Responde preguntas comunes sin inventar datos. Si no aplican herramientas específicas, responde con conocimiento general. Utiliza siempre el  ultimo contexto disponible (como DNI, tipo de consulta, etc.) para responder o realizar llamadas a herramientas, especialmente en consultas referenciales.'}, {'role': 'user', 'content': 'hola, dame los datos del abonado con dni 12345678A'}], 'model': 'meta-llama/llama-4-scout-17b-16e-instruct', 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'existe_abonado', 'description': "Esta herramienta realiza la operación 'existe_abonado' en el endpoint '/existe_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_existe_abonado'}}, 'endpoint': '/existe_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'direccion_abonado', 'description': "Esta herramienta realiza la operación 'direccion_abonado' en el endpoint '/direccion_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_direccion_abonado'}}, 'endpoint': '/direccion_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'estado_pagos', 'description': "Esta herramienta realiza la operación 'estado_pagos' en el endpoint '/estado_pagos' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_estado_pagos'}}, 'endpoint': '/estado_pagos', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'ultimo_pago', 'description': "Esta herramienta realiza la operación 'ultimo_pago' en el endpoint '/ultimo_pago' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_ultimo_pago'}}, 'endpoint': '/ultimo_pago', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'deuda_total', 'description': "Esta herramienta realiza la operación 'deuda_total' en el endpoint '/deuda_total' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_deuda_total'}}, 'endpoint': '/deuda_total', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'facturas_pendientes', 'description': "Esta herramienta realiza la operación 'facturas_pendientes' en el endpoint '/facturas_pendientes' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_facturas_pendientes'}}, 'endpoint': '/facturas_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'todas_las_facturas', 'description': "Esta herramienta realiza la operación 'todas_las_facturas' en el endpoint '/todas_las_facturas' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_todas_las_facturas'}}, 'endpoint': '/todas_las_facturas', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'datos_abonado', 'description': "Esta herramienta realiza la operación 'datos_abonado' en el endpoint '/datos_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Dni'}, 'poliza': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Poliza'}}, 'type': 'object', 'title': 'DatosAbonadoInput'}}, 'endpoint': '/datos_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'crear_incidencia', 'description': "Esta herramienta realiza la operación 'crear_incidencia' en el endpoint '/crear_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}, 'ubicacion': {'type': 'string', 'title': 'Ubicacion'}, 'descripcion': {'type': 'string', 'title': 'Descripcion'}, 'estado': {'type': 'string', 'title': 'Estado', 'default': 'Abierto'}}, 'type': 'object', 'required': ['dni', 'ubicacion', 'descripcion'], 'title': 'Body_crear_incidencia'}}, 'endpoint': '/crear_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_dni', 'description': "Esta herramienta realiza la operación 'incidencias_por_dni' en el endpoint '/incidencias_por_dni' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_incidencias_por_dni'}}, 'endpoint': '/incidencias_por_dni', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_nombre', 'description': "Esta herramienta realiza la operación 'incidencias_por_nombre' en el endpoint '/incidencias_por_nombre' usando el método 'POST.'", 'parameters': {'properties': {'nombre': {'type': 'string', 'title': 'Nombre'}}, 'type': 'object', 'required': ['nombre'], 'title': 'Body_incidencias_por_nombre'}}, 'endpoint': '/incidencias_por_nombre', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'actualizar_estado_incidencia', 'description': "Esta herramienta realiza la operación 'actualizar_estado_incidencia' en el endpoint '/actualizar_estado_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'incidencia_id': {'type': 'integer', 'title': 'Incidencia Id'}, 'nuevo_estado': {'type': 'string', 'title': 'Nuevo Estado'}}, 'type': 'object', 'required': ['incidencia_id', 'nuevo_estado'], 'title': 'Body_actualizar_estado_incidencia'}}, 'endpoint': '/actualizar_estado_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_pendientes', 'description': "Esta herramienta realiza la operación 'incidencias_pendientes' en el endpoint '/incidencias_pendientes' usando el método 'POST.'", 'parameters': {}}, 'endpoint': '/incidencias_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_ubicacion', 'description': "Esta herramienta realiza la operación 'incidencias_por_ubicacion' en el endpoint '/incidencias_por_ubicacion' usando el método 'POST.'", 'parameters': {'properties': {'ubicacion': {'type': 'string', 'title': 'Ubicacion'}}, 'type': 'object', 'required': ['ubicacion'], 'title': 'Body_incidencias_por_ubicacion'}}, 'endpoint': '/incidencias_por_ubicacion', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'herramientas_disponibles', 'description': "Esta herramienta realiza la operación 'herramientas_disponibles' en el endpoint '/herramientas_disponibles' usando el método 'GET.'", 'parameters': {}}, 'endpoint': '/herramientas_disponibles', 'method': 'GET'}]}}
2025-06-23 14:58:07,534 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-06-23 14:58:07,535 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:58:07,630 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000205D0A81450>
2025-06-23 14:58:07,631 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000205D098D910> server_hostname='api.groq.com' timeout=5.0
2025-06-23 14:58:07,668 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000205D0A81590>
2025-06-23 14:58:07,669 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 14:58:07,669 - DEBUG - send_request_headers.complete
2025-06-23 14:58:07,669 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 14:58:07,670 - DEBUG - send_request_body.complete
2025-06-23 14:58:07,670 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 14:58:07,996 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 23 Jun 2025 12:58:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'gcp-europe-west3'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'29897'), (b'x-ratelimit-reset-requests', b'1m26.4s'), (b'x-ratelimit-reset-tokens', b'206ms'), (b'x-request-id', b'req_01jyedw3kgehpbnj27vb4kgg5k'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=Pa0hq8UqpV.0ADLErJYtamKFM3Ac6r_CWir29FqLzKw-1750683488-1.0.1.1-6PsZxRsmv3IyJs7byhqnpwTn73VKhGvnvqZgMdErIGmtXkP4GHRJyFZe2Qv11SJF.Q97SjIuE8DtKE3nOySrFgVbbt3M3oEkA3TTzkzMdqM; path=/; expires=Mon, 23-Jun-25 13:28:08 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'954427b6d8ce3857-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-23 14:58:07,997 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-23 14:58:07,998 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 14:58:07,998 - DEBUG - receive_response_body.complete
2025-06-23 14:58:07,999 - DEBUG - response_closed.started
2025-06-23 14:58:07,999 - DEBUG - response_closed.complete
2025-06-23 14:58:07,999 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Mon, 23 Jun 2025 12:58:08 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'gcp-europe-west3', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '29897', 'x-ratelimit-reset-requests': '1m26.4s', 'x-ratelimit-reset-tokens': '206ms', 'x-request-id': 'req_01jyedw3kgehpbnj27vb4kgg5k', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=Pa0hq8UqpV.0ADLErJYtamKFM3Ac6r_CWir29FqLzKw-1750683488-1.0.1.1-6PsZxRsmv3IyJs7byhqnpwTn73VKhGvnvqZgMdErIGmtXkP4GHRJyFZe2Qv11SJF.Q97SjIuE8DtKE3nOySrFgVbbt3M3oEkA3TTzkzMdqM; path=/; expires=Mon, 23-Jun-25 13:28:08 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '954427b6d8ce3857-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-23 14:58:08,002 - INFO - Received response: ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='4nntvdeyh', function=Function(arguments='{"dni":"12345678A"}', name='datos_abonado'), type='function')])
2025-06-23 14:58:08,002 - INFO - Executing tool: datos_abonado with args: {'dni': '12345678A'}
2025-06-23 14:58:08,523 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:58:10,562 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000205D0913360>
2025-06-23 14:58:10,563 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 14:58:10,563 - DEBUG - send_request_headers.complete
2025-06-23 14:58:10,564 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 14:58:10,564 - DEBUG - send_request_body.complete
2025-06-23 14:58:10,564 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 14:58:10,574 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:58:09 GMT'), (b'server', b'uvicorn'), (b'content-length', b'141'), (b'content-type', b'application/json')])
2025-06-23 14:58:10,575 - INFO - HTTP Request: POST http://localhost:8000/datos_abonado "HTTP/1.1 200 OK"
2025-06-23 14:58:10,575 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 14:58:10,575 - DEBUG - receive_response_body.complete
2025-06-23 14:58:10,575 - DEBUG - response_closed.started
2025-06-23 14:58:10,575 - DEBUG - response_closed.complete
2025-06-23 14:58:10,576 - DEBUG - close.started
2025-06-23 14:58:10,576 - DEBUG - close.complete
2025-06-23 14:58:10,576 - INFO - Raw tool response for datos_abonado: {'nombre': 'Juan Pérez', 'dni': '12345678A', 'direccion': 'Calle Falsa 123', 'correo': 'juan@example.com', 'telefono': '123456789', 'poliza': 'POL123'}
2025-06-23 14:58:10,577 - INFO - Final response prepared (tool_call only, markdown returned).
2025-06-23 14:58:10,577 - INFO - Final Markdown content: ### Datos del abonado
- **Nombre:** Juan Pérez
- **DNI:** 12345678A
- **Dirección:** Calle Falsa 123
- **Correo electrónico:** juan@example.com
- **Teléfono:** 123456789
- **Póliza:** POL123
2025-06-23 14:58:25,999 - DEBUG - close.started
2025-06-23 14:58:26,003 - DEBUG - close.complete
2025-06-23 14:58:30,033 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 14:58:32,064 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027AA7C052B0>
2025-06-23 14:58:32,065 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-23 14:58:32,066 - DEBUG - send_request_headers.complete
2025-06-23 14:58:32,066 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-23 14:58:32,066 - DEBUG - send_request_body.complete
2025-06-23 14:58:32,066 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-23 14:58:32,107 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 12:58:31 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-23 14:58:32,109 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-23 14:58:32,109 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-23 14:58:32,110 - DEBUG - receive_response_body.complete
2025-06-23 14:58:32,110 - DEBUG - response_closed.started
2025-06-23 14:58:32,110 - DEBUG - response_closed.complete
2025-06-23 14:58:32,110 - DEBUG - close.started
2025-06-23 14:58:32,111 - DEBUG - close.complete
2025-06-23 15:03:48,576 - DEBUG - Context after update: {'last_message': 'hola, dame los datos del abonado con dni 12345678A', 'requires_real_data': True, 'is_referential': False, 'query_type': 'abonado', 'dni': '12345678A', 'descripcion': 'dame los datos del abonado con dni 12345678A'}
2025-06-23 15:03:48,576 - INFO - User message: hola, dame los datos del abonado con dni 12345678A
2025-06-23 15:03:48,576 - INFO - Sending initial request to LLM with tool_choice='auto'...
2025-06-23 15:03:48,700 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-69374916-0937-4b13-a3f6-6547d2edd2d8', 'json_data': {'messages': [{'role': 'system', 'content': 'Eres un asistente general. Responde preguntas comunes sin inventar datos. Si no aplican herramientas específicas, responde con conocimiento general. Utiliza siempre el  ultimo contexto disponible (como DNI, tipo de consulta, etc.) para responder o realizar llamadas a herramientas, especialmente en consultas referenciales.'}, {'role': 'user', 'content': 'hola, dame los datos del abonado con dni 12345678A'}], 'model': 'meta-llama/llama-4-scout-17b-16e-instruct', 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'existe_abonado', 'description': "Esta herramienta realiza la operación 'existe_abonado' en el endpoint '/existe_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_existe_abonado'}}, 'endpoint': '/existe_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'direccion_abonado', 'description': "Esta herramienta realiza la operación 'direccion_abonado' en el endpoint '/direccion_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_direccion_abonado'}}, 'endpoint': '/direccion_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'estado_pagos', 'description': "Esta herramienta realiza la operación 'estado_pagos' en el endpoint '/estado_pagos' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_estado_pagos'}}, 'endpoint': '/estado_pagos', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'ultimo_pago', 'description': "Esta herramienta realiza la operación 'ultimo_pago' en el endpoint '/ultimo_pago' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_ultimo_pago'}}, 'endpoint': '/ultimo_pago', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'deuda_total', 'description': "Esta herramienta realiza la operación 'deuda_total' en el endpoint '/deuda_total' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_deuda_total'}}, 'endpoint': '/deuda_total', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'facturas_pendientes', 'description': "Esta herramienta realiza la operación 'facturas_pendientes' en el endpoint '/facturas_pendientes' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_facturas_pendientes'}}, 'endpoint': '/facturas_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'todas_las_facturas', 'description': "Esta herramienta realiza la operación 'todas_las_facturas' en el endpoint '/todas_las_facturas' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_todas_las_facturas'}}, 'endpoint': '/todas_las_facturas', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'datos_abonado', 'description': "Esta herramienta realiza la operación 'datos_abonado' en el endpoint '/datos_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Dni'}, 'poliza': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Poliza'}}, 'type': 'object', 'title': 'DatosAbonadoInput'}}, 'endpoint': '/datos_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'crear_incidencia', 'description': "Esta herramienta realiza la operación 'crear_incidencia' en el endpoint '/crear_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}, 'ubicacion': {'type': 'string', 'title': 'Ubicacion'}, 'descripcion': {'type': 'string', 'title': 'Descripcion'}, 'estado': {'type': 'string', 'title': 'Estado', 'default': 'Abierto'}}, 'type': 'object', 'required': ['dni', 'ubicacion', 'descripcion'], 'title': 'Body_crear_incidencia'}}, 'endpoint': '/crear_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_dni', 'description': "Esta herramienta realiza la operación 'incidencias_por_dni' en el endpoint '/incidencias_por_dni' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_incidencias_por_dni'}}, 'endpoint': '/incidencias_por_dni', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_nombre', 'description': "Esta herramienta realiza la operación 'incidencias_por_nombre' en el endpoint '/incidencias_por_nombre' usando el método 'POST.'", 'parameters': {'properties': {'nombre': {'type': 'string', 'title': 'Nombre'}}, 'type': 'object', 'required': ['nombre'], 'title': 'Body_incidencias_por_nombre'}}, 'endpoint': '/incidencias_por_nombre', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'actualizar_estado_incidencia', 'description': "Esta herramienta realiza la operación 'actualizar_estado_incidencia' en el endpoint '/actualizar_estado_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'incidencia_id': {'type': 'integer', 'title': 'Incidencia Id'}, 'nuevo_estado': {'type': 'string', 'title': 'Nuevo Estado'}}, 'type': 'object', 'required': ['incidencia_id', 'nuevo_estado'], 'title': 'Body_actualizar_estado_incidencia'}}, 'endpoint': '/actualizar_estado_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_pendientes', 'description': "Esta herramienta realiza la operación 'incidencias_pendientes' en el endpoint '/incidencias_pendientes' usando el método 'POST.'", 'parameters': {}}, 'endpoint': '/incidencias_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_ubicacion', 'description': "Esta herramienta realiza la operación 'incidencias_por_ubicacion' en el endpoint '/incidencias_por_ubicacion' usando el método 'POST.'", 'parameters': {'properties': {'ubicacion': {'type': 'string', 'title': 'Ubicacion'}}, 'type': 'object', 'required': ['ubicacion'], 'title': 'Body_incidencias_por_ubicacion'}}, 'endpoint': '/incidencias_por_ubicacion', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'herramientas_disponibles', 'description': "Esta herramienta realiza la operación 'herramientas_disponibles' en el endpoint '/herramientas_disponibles' usando el método 'GET.'", 'parameters': {}}, 'endpoint': '/herramientas_disponibles', 'method': 'GET'}]}}
2025-06-23 15:03:48,886 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-06-23 15:03:48,887 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-23 15:03:48,977 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027AA7CB1450>
2025-06-23 15:03:48,977 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000027AA7BBD880> server_hostname='api.groq.com' timeout=5.0
2025-06-23 15:03:49,017 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027AA7CB1590>
2025-06-23 15:03:49,017 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 15:03:49,018 - DEBUG - send_request_headers.complete
2025-06-23 15:03:49,018 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 15:03:49,018 - DEBUG - send_request_body.complete
2025-06-23 15:03:49,018 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 15:03:49,390 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 23 Jun 2025 13:03:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'gcp-europe-west3'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'29897'), (b'x-ratelimit-reset-requests', b'1m26.4s'), (b'x-ratelimit-reset-tokens', b'206ms'), (b'x-request-id', b'req_01jyee6gzrekma4tfhfk1mxdw5'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=7aPcqOcaQr7LoxSnnbGg6.oMoLCQcwe14ZahdU_0WYQ-1750683829-1.0.1.1-eUaTE7APYBGd54ysML6i5gNkEQoBnPGM5tCppEGcGSgw87Uv3uS.2ZoIOtl.XUlmRq5C1YVDgLNBxta.f8mYsXdhz3dFkylHrUlQaSFdxmw; path=/; expires=Mon, 23-Jun-25 13:33:49 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9544300c88b304ae-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-23 15:03:49,391 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-23 15:03:49,392 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 15:03:49,392 - DEBUG - receive_response_body.complete
2025-06-23 15:03:49,392 - DEBUG - response_closed.started
2025-06-23 15:03:49,393 - DEBUG - response_closed.complete
2025-06-23 15:03:49,393 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Mon, 23 Jun 2025 13:03:49 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'gcp-europe-west3', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '29897', 'x-ratelimit-reset-requests': '1m26.4s', 'x-ratelimit-reset-tokens': '206ms', 'x-request-id': 'req_01jyee6gzrekma4tfhfk1mxdw5', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=7aPcqOcaQr7LoxSnnbGg6.oMoLCQcwe14ZahdU_0WYQ-1750683829-1.0.1.1-eUaTE7APYBGd54ysML6i5gNkEQoBnPGM5tCppEGcGSgw87Uv3uS.2ZoIOtl.XUlmRq5C1YVDgLNBxta.f8mYsXdhz3dFkylHrUlQaSFdxmw; path=/; expires=Mon, 23-Jun-25 13:33:49 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '9544300c88b304ae-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-23 15:03:49,397 - INFO - Received response: ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='51fnq68me', function=Function(arguments='{"dni":"12345678A"}', name='datos_abonado'), type='function')])
2025-06-23 15:03:49,398 - INFO - Executing tool: datos_abonado with args: {'dni': '12345678A'}
2025-06-23 15:03:50,391 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 15:03:52,422 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027AA7B43490>
2025-06-23 15:03:52,422 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 15:03:52,423 - DEBUG - send_request_headers.complete
2025-06-23 15:03:52,423 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 15:03:52,424 - DEBUG - send_request_body.complete
2025-06-23 15:03:52,424 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 15:03:52,436 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 13:03:51 GMT'), (b'server', b'uvicorn'), (b'content-length', b'141'), (b'content-type', b'application/json')])
2025-06-23 15:03:52,437 - INFO - HTTP Request: POST http://localhost:8000/datos_abonado "HTTP/1.1 200 OK"
2025-06-23 15:03:52,437 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 15:03:52,438 - DEBUG - receive_response_body.complete
2025-06-23 15:03:52,438 - DEBUG - response_closed.started
2025-06-23 15:03:52,439 - DEBUG - response_closed.complete
2025-06-23 15:03:52,439 - DEBUG - close.started
2025-06-23 15:03:52,439 - DEBUG - close.complete
2025-06-23 15:03:52,440 - INFO - Raw tool response for datos_abonado: {'nombre': 'Juan Pérez', 'dni': '12345678A', 'direccion': 'Calle Falsa 123', 'correo': 'juan@example.com', 'telefono': '123456789', 'poliza': 'POL123'}
2025-06-23 15:03:52,440 - INFO - Final response prepared (tool_call only, markdown returned).
2025-06-23 15:03:52,440 - INFO - Final Markdown content: ### Datos del abonado
- **Nombre:** Juan Pérez
- **DNI:** 12345678A
- **Dirección:** Calle Falsa 123
- **Correo electrónico:** juan@example.com
- **Teléfono:** 123456789
- **Póliza:** POL123
2025-06-23 15:03:53,563 - DEBUG - Context after update: {'last_message': 'y todas sus facturas', 'requires_real_data': True, 'is_referential': True, 'query_type': 'factura', 'dni': '12345678A', 'descripcion': 'dame los datos del abonado con dni 12345678A'}
2025-06-23 15:03:53,563 - ERROR - Error inesperado procesando el mensaje: 'ConversationContext' object has no attribute 'get_referential_prompt'
Traceback (most recent call last):
  File "C:\projects\mcp_groq\app\agent\agents\shared_chat_agent.py", line 78, in handle_message_with_context
    referential_prompt = self.context.get_referential_prompt()
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ConversationContext' object has no attribute 'get_referential_prompt'
2025-06-23 15:06:46,733 - DEBUG - close.started
2025-06-23 15:06:46,735 - DEBUG - close.complete
2025-06-23 15:06:51,007 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 15:06:53,044 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002822B325160>
2025-06-23 15:06:53,044 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-23 15:06:53,045 - DEBUG - send_request_headers.complete
2025-06-23 15:06:53,045 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-23 15:06:53,046 - DEBUG - send_request_body.complete
2025-06-23 15:06:53,046 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-23 15:06:53,081 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 13:06:52 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-23 15:06:53,082 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-23 15:06:53,082 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-23 15:06:53,083 - DEBUG - receive_response_body.complete
2025-06-23 15:06:53,083 - DEBUG - response_closed.started
2025-06-23 15:06:53,083 - DEBUG - response_closed.complete
2025-06-23 15:06:53,083 - DEBUG - close.started
2025-06-23 15:06:53,083 - DEBUG - close.complete
2025-06-23 15:07:06,628 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 15:07:08,684 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000023354DF5160>
2025-06-23 15:07:08,685 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-23 15:07:08,686 - DEBUG - send_request_headers.complete
2025-06-23 15:07:08,686 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-23 15:07:08,686 - DEBUG - send_request_body.complete
2025-06-23 15:07:08,686 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-23 15:07:08,720 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 13:07:08 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-23 15:07:08,721 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-23 15:07:08,722 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-23 15:07:08,722 - DEBUG - receive_response_body.complete
2025-06-23 15:07:08,722 - DEBUG - response_closed.started
2025-06-23 15:07:08,723 - DEBUG - response_closed.complete
2025-06-23 15:07:08,723 - DEBUG - close.started
2025-06-23 15:07:08,723 - DEBUG - close.complete
2025-06-23 15:07:23,692 - DEBUG - Context after update: {'last_message': 'hola, dame los datos del abonado con dni 12345678A', 'requires_real_data': True, 'is_referential': False, 'query_type': 'abonado', 'dni': '12345678A', 'descripcion': 'dame los datos del abonado con dni 12345678A'}
2025-06-23 15:07:23,693 - INFO - User message: hola, dame los datos del abonado con dni 12345678A
2025-06-23 15:07:23,693 - INFO - Sending initial request to LLM with tool_choice='auto'...
2025-06-23 15:07:23,803 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-09dc5645-eb37-4ede-936e-6447ecb18e21', 'json_data': {'messages': [{'role': 'system', 'content': 'Eres un asistente general. Responde preguntas comunes sin inventar datos. Si no aplican herramientas específicas, responde con conocimiento general. Utiliza siempre el  ultimo contexto disponible (como DNI, tipo de consulta, etc.) para responder o realizar llamadas a herramientas, especialmente en consultas referenciales.'}, {'role': 'user', 'content': 'hola, dame los datos del abonado con dni 12345678A'}], 'model': 'meta-llama/llama-4-scout-17b-16e-instruct', 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'existe_abonado', 'description': "Esta herramienta realiza la operación 'existe_abonado' en el endpoint '/existe_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_existe_abonado'}}, 'endpoint': '/existe_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'direccion_abonado', 'description': "Esta herramienta realiza la operación 'direccion_abonado' en el endpoint '/direccion_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_direccion_abonado'}}, 'endpoint': '/direccion_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'estado_pagos', 'description': "Esta herramienta realiza la operación 'estado_pagos' en el endpoint '/estado_pagos' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_estado_pagos'}}, 'endpoint': '/estado_pagos', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'ultimo_pago', 'description': "Esta herramienta realiza la operación 'ultimo_pago' en el endpoint '/ultimo_pago' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_ultimo_pago'}}, 'endpoint': '/ultimo_pago', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'deuda_total', 'description': "Esta herramienta realiza la operación 'deuda_total' en el endpoint '/deuda_total' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_deuda_total'}}, 'endpoint': '/deuda_total', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'facturas_pendientes', 'description': "Esta herramienta realiza la operación 'facturas_pendientes' en el endpoint '/facturas_pendientes' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_facturas_pendientes'}}, 'endpoint': '/facturas_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'todas_las_facturas', 'description': "Esta herramienta realiza la operación 'todas_las_facturas' en el endpoint '/todas_las_facturas' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_todas_las_facturas'}}, 'endpoint': '/todas_las_facturas', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'datos_abonado', 'description': "Esta herramienta realiza la operación 'datos_abonado' en el endpoint '/datos_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Dni'}, 'poliza': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Poliza'}}, 'type': 'object', 'title': 'DatosAbonadoInput'}}, 'endpoint': '/datos_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'crear_incidencia', 'description': "Esta herramienta realiza la operación 'crear_incidencia' en el endpoint '/crear_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}, 'ubicacion': {'type': 'string', 'title': 'Ubicacion'}, 'descripcion': {'type': 'string', 'title': 'Descripcion'}, 'estado': {'type': 'string', 'title': 'Estado', 'default': 'Abierto'}}, 'type': 'object', 'required': ['dni', 'ubicacion', 'descripcion'], 'title': 'Body_crear_incidencia'}}, 'endpoint': '/crear_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_dni', 'description': "Esta herramienta realiza la operación 'incidencias_por_dni' en el endpoint '/incidencias_por_dni' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_incidencias_por_dni'}}, 'endpoint': '/incidencias_por_dni', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_nombre', 'description': "Esta herramienta realiza la operación 'incidencias_por_nombre' en el endpoint '/incidencias_por_nombre' usando el método 'POST.'", 'parameters': {'properties': {'nombre': {'type': 'string', 'title': 'Nombre'}}, 'type': 'object', 'required': ['nombre'], 'title': 'Body_incidencias_por_nombre'}}, 'endpoint': '/incidencias_por_nombre', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'actualizar_estado_incidencia', 'description': "Esta herramienta realiza la operación 'actualizar_estado_incidencia' en el endpoint '/actualizar_estado_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'incidencia_id': {'type': 'integer', 'title': 'Incidencia Id'}, 'nuevo_estado': {'type': 'string', 'title': 'Nuevo Estado'}}, 'type': 'object', 'required': ['incidencia_id', 'nuevo_estado'], 'title': 'Body_actualizar_estado_incidencia'}}, 'endpoint': '/actualizar_estado_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_pendientes', 'description': "Esta herramienta realiza la operación 'incidencias_pendientes' en el endpoint '/incidencias_pendientes' usando el método 'POST.'", 'parameters': {}}, 'endpoint': '/incidencias_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_ubicacion', 'description': "Esta herramienta realiza la operación 'incidencias_por_ubicacion' en el endpoint '/incidencias_por_ubicacion' usando el método 'POST.'", 'parameters': {'properties': {'ubicacion': {'type': 'string', 'title': 'Ubicacion'}}, 'type': 'object', 'required': ['ubicacion'], 'title': 'Body_incidencias_por_ubicacion'}}, 'endpoint': '/incidencias_por_ubicacion', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'herramientas_disponibles', 'description': "Esta herramienta realiza la operación 'herramientas_disponibles' en el endpoint '/herramientas_disponibles' usando el método 'GET.'", 'parameters': {}}, 'endpoint': '/herramientas_disponibles', 'method': 'GET'}]}}
2025-06-23 15:07:24,000 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-06-23 15:07:24,001 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-23 15:07:24,083 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000023354EA1450>
2025-06-23 15:07:24,084 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000023354DAD910> server_hostname='api.groq.com' timeout=5.0
2025-06-23 15:07:24,125 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000023354EA1590>
2025-06-23 15:07:24,126 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 15:07:24,126 - DEBUG - send_request_headers.complete
2025-06-23 15:07:24,127 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 15:07:24,127 - DEBUG - send_request_body.complete
2025-06-23 15:07:24,127 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 15:07:24,404 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 23 Jun 2025 13:07:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'gcp-europe-west3'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'29897'), (b'x-ratelimit-reset-requests', b'1m26.4s'), (b'x-ratelimit-reset-tokens', b'206ms'), (b'x-request-id', b'req_01jyeed30tezxtzv7nyqhzr1ch'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=ek7cpevh5rWDUc8Kvhp80w6SjrRfRlYVVGGluPyLmQk-1750684044-1.0.1.1-2JTkEhOFuDjy8lRXFfSuMmaIkWZob5sZt_cU7IwpLLIOsdxdYCDc7H_dnmzQd6iqUdTjRFFMpjBPPVjIjloNMBTuUG8CDmmwdGCvyFf8oBE; path=/; expires=Mon, 23-Jun-25 13:37:24 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9544354cbed30146-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-23 15:07:24,406 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-23 15:07:24,406 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 15:07:24,407 - DEBUG - receive_response_body.complete
2025-06-23 15:07:24,408 - DEBUG - response_closed.started
2025-06-23 15:07:24,408 - DEBUG - response_closed.complete
2025-06-23 15:07:24,408 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Mon, 23 Jun 2025 13:07:24 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'gcp-europe-west3', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '29897', 'x-ratelimit-reset-requests': '1m26.4s', 'x-ratelimit-reset-tokens': '206ms', 'x-request-id': 'req_01jyeed30tezxtzv7nyqhzr1ch', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=ek7cpevh5rWDUc8Kvhp80w6SjrRfRlYVVGGluPyLmQk-1750684044-1.0.1.1-2JTkEhOFuDjy8lRXFfSuMmaIkWZob5sZt_cU7IwpLLIOsdxdYCDc7H_dnmzQd6iqUdTjRFFMpjBPPVjIjloNMBTuUG8CDmmwdGCvyFf8oBE; path=/; expires=Mon, 23-Jun-25 13:37:24 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '9544354cbed30146-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-23 15:07:24,412 - INFO - Received response: ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='jqv94jxgn', function=Function(arguments='{"dni":"12345678A"}', name='datos_abonado'), type='function')])
2025-06-23 15:07:24,413 - INFO - Executing tool: datos_abonado with args: {'dni': '12345678A'}
2025-06-23 15:07:25,421 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 15:07:27,457 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000023354D33360>
2025-06-23 15:07:27,457 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 15:07:27,458 - DEBUG - send_request_headers.complete
2025-06-23 15:07:27,458 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 15:07:27,458 - DEBUG - send_request_body.complete
2025-06-23 15:07:27,458 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 15:07:27,470 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 13:07:26 GMT'), (b'server', b'uvicorn'), (b'content-length', b'141'), (b'content-type', b'application/json')])
2025-06-23 15:07:27,470 - INFO - HTTP Request: POST http://localhost:8000/datos_abonado "HTTP/1.1 200 OK"
2025-06-23 15:07:27,471 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 15:07:27,471 - DEBUG - receive_response_body.complete
2025-06-23 15:07:27,471 - DEBUG - response_closed.started
2025-06-23 15:07:27,471 - DEBUG - response_closed.complete
2025-06-23 15:07:27,472 - DEBUG - close.started
2025-06-23 15:07:27,472 - DEBUG - close.complete
2025-06-23 15:07:27,472 - INFO - Raw tool response for datos_abonado: {'nombre': 'Juan Pérez', 'dni': '12345678A', 'direccion': 'Calle Falsa 123', 'correo': 'juan@example.com', 'telefono': '123456789', 'poliza': 'POL123'}
2025-06-23 15:07:27,472 - INFO - Final response prepared (tool_call only, markdown returned).
2025-06-23 15:07:27,472 - INFO - Final Markdown content: ### Datos del abonado
- **Nombre:** Juan Pérez
- **DNI:** 12345678A
- **Dirección:** Calle Falsa 123
- **Correo electrónico:** juan@example.com
- **Teléfono:** 123456789
- **Póliza:** POL123
2025-06-23 15:07:28,314 - DEBUG - Context after update: {'last_message': 'y todas sus facturas', 'requires_real_data': True, 'is_referential': True, 'query_type': 'factura', 'dni': '12345678A', 'descripcion': 'dame los datos del abonado con dni 12345678A'}
2025-06-23 15:07:28,314 - DEBUG - Referential prompt injected: 
2025-06-23 15:07:28,314 - INFO - User message: y todas sus facturas
2025-06-23 15:07:28,315 - INFO - Sending initial request to LLM with tool_choice='auto'...
2025-06-23 15:07:28,319 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-39db751a-d045-46d6-a11d-6f598598f176', 'json_data': {'messages': [{'role': 'system', 'content': 'Eres un agente especializado en gestión de facturas. **No inventes datos**; utiliza herramientas para obtener información precisa. Si el usuario proporciona un DNI o ID de factura, llama a la herramienta correspondiente. Responde únicamente con los datos devueltos por la API en un formato claro y estructurado. Si no puedes encontrar datos, informa al usuario de manera transparente.'}, {'role': 'system', 'content': ''}, {'role': 'user', 'content': 'y todas sus facturas'}], 'model': 'meta-llama/llama-4-scout-17b-16e-instruct', 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'existe_abonado', 'description': "Esta herramienta realiza la operación 'existe_abonado' en el endpoint '/existe_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_existe_abonado'}}, 'endpoint': '/existe_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'direccion_abonado', 'description': "Esta herramienta realiza la operación 'direccion_abonado' en el endpoint '/direccion_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_direccion_abonado'}}, 'endpoint': '/direccion_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'estado_pagos', 'description': "Esta herramienta realiza la operación 'estado_pagos' en el endpoint '/estado_pagos' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_estado_pagos'}}, 'endpoint': '/estado_pagos', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'ultimo_pago', 'description': "Esta herramienta realiza la operación 'ultimo_pago' en el endpoint '/ultimo_pago' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_ultimo_pago'}}, 'endpoint': '/ultimo_pago', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'deuda_total', 'description': "Esta herramienta realiza la operación 'deuda_total' en el endpoint '/deuda_total' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_deuda_total'}}, 'endpoint': '/deuda_total', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'facturas_pendientes', 'description': "Esta herramienta realiza la operación 'facturas_pendientes' en el endpoint '/facturas_pendientes' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_facturas_pendientes'}}, 'endpoint': '/facturas_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'todas_las_facturas', 'description': "Esta herramienta realiza la operación 'todas_las_facturas' en el endpoint '/todas_las_facturas' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_todas_las_facturas'}}, 'endpoint': '/todas_las_facturas', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'datos_abonado', 'description': "Esta herramienta realiza la operación 'datos_abonado' en el endpoint '/datos_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Dni'}, 'poliza': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Poliza'}}, 'type': 'object', 'title': 'DatosAbonadoInput'}}, 'endpoint': '/datos_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'crear_incidencia', 'description': "Esta herramienta realiza la operación 'crear_incidencia' en el endpoint '/crear_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}, 'ubicacion': {'type': 'string', 'title': 'Ubicacion'}, 'descripcion': {'type': 'string', 'title': 'Descripcion'}, 'estado': {'type': 'string', 'title': 'Estado', 'default': 'Abierto'}}, 'type': 'object', 'required': ['dni', 'ubicacion', 'descripcion'], 'title': 'Body_crear_incidencia'}}, 'endpoint': '/crear_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_dni', 'description': "Esta herramienta realiza la operación 'incidencias_por_dni' en el endpoint '/incidencias_por_dni' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_incidencias_por_dni'}}, 'endpoint': '/incidencias_por_dni', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_nombre', 'description': "Esta herramienta realiza la operación 'incidencias_por_nombre' en el endpoint '/incidencias_por_nombre' usando el método 'POST.'", 'parameters': {'properties': {'nombre': {'type': 'string', 'title': 'Nombre'}}, 'type': 'object', 'required': ['nombre'], 'title': 'Body_incidencias_por_nombre'}}, 'endpoint': '/incidencias_por_nombre', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'actualizar_estado_incidencia', 'description': "Esta herramienta realiza la operación 'actualizar_estado_incidencia' en el endpoint '/actualizar_estado_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'incidencia_id': {'type': 'integer', 'title': 'Incidencia Id'}, 'nuevo_estado': {'type': 'string', 'title': 'Nuevo Estado'}}, 'type': 'object', 'required': ['incidencia_id', 'nuevo_estado'], 'title': 'Body_actualizar_estado_incidencia'}}, 'endpoint': '/actualizar_estado_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_pendientes', 'description': "Esta herramienta realiza la operación 'incidencias_pendientes' en el endpoint '/incidencias_pendientes' usando el método 'POST.'", 'parameters': {}}, 'endpoint': '/incidencias_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_ubicacion', 'description': "Esta herramienta realiza la operación 'incidencias_por_ubicacion' en el endpoint '/incidencias_por_ubicacion' usando el método 'POST.'", 'parameters': {'properties': {'ubicacion': {'type': 'string', 'title': 'Ubicacion'}}, 'type': 'object', 'required': ['ubicacion'], 'title': 'Body_incidencias_por_ubicacion'}}, 'endpoint': '/incidencias_por_ubicacion', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'herramientas_disponibles', 'description': "Esta herramienta realiza la operación 'herramientas_disponibles' en el endpoint '/herramientas_disponibles' usando el método 'GET.'", 'parameters': {}}, 'endpoint': '/herramientas_disponibles', 'method': 'GET'}]}}
2025-06-23 15:07:28,321 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-06-23 15:07:28,322 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 15:07:28,323 - DEBUG - send_request_headers.complete
2025-06-23 15:07:28,323 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 15:07:28,324 - DEBUG - send_request_body.complete
2025-06-23 15:07:28,324 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 15:07:28,630 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 23 Jun 2025 13:07:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'gcp-europe-west3'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'998'), (b'x-ratelimit-remaining-tokens', b'29878'), (b'x-ratelimit-reset-requests', b'2m48.607999999s'), (b'x-ratelimit-reset-tokens', b'243ms'), (b'x-request-id', b'req_01jyeed73vf05b0nh1sehq3x0h'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95443566f82d0146-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-23 15:07:28,631 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-23 15:07:28,631 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 15:07:28,631 - DEBUG - receive_response_body.complete
2025-06-23 15:07:28,632 - DEBUG - response_closed.started
2025-06-23 15:07:28,632 - DEBUG - response_closed.complete
2025-06-23 15:07:28,632 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Mon, 23 Jun 2025 13:07:28 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'gcp-europe-west3', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '998', 'x-ratelimit-remaining-tokens': '29878', 'x-ratelimit-reset-requests': '2m48.607999999s', 'x-ratelimit-reset-tokens': '243ms', 'x-request-id': 'req_01jyeed73vf05b0nh1sehq3x0h', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '95443566f82d0146-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-23 15:07:28,633 - INFO - Received response: ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='5r297n234', function=Function(arguments='{"dni":"12345678A"}', name='todas_las_facturas'), type='function')])
2025-06-23 15:07:28,634 - INFO - Executing tool: todas_las_facturas with args: {'dni': '12345678A'}
2025-06-23 15:07:29,641 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 15:07:31,689 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000023354EC9E00>
2025-06-23 15:07:31,690 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 15:07:31,691 - DEBUG - send_request_headers.complete
2025-06-23 15:07:31,691 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 15:07:31,691 - DEBUG - send_request_body.complete
2025-06-23 15:07:31,691 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 15:07:31,699 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 13:07:30 GMT'), (b'server', b'uvicorn'), (b'content-length', b'132'), (b'content-type', b'application/json')])
2025-06-23 15:07:31,699 - INFO - HTTP Request: POST http://localhost:8000/todas_las_facturas "HTTP/1.1 200 OK"
2025-06-23 15:07:31,700 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 15:07:31,700 - DEBUG - receive_response_body.complete
2025-06-23 15:07:31,700 - DEBUG - response_closed.started
2025-06-23 15:07:31,700 - DEBUG - response_closed.complete
2025-06-23 15:07:31,700 - DEBUG - close.started
2025-06-23 15:07:31,701 - DEBUG - close.complete
2025-06-23 15:07:31,701 - INFO - Raw tool response for todas_las_facturas: {'facturas': [{'fecha': '2025-06-10', 'estado': 'Pendiente', 'importe': 200.75}, {'fecha': '2025-06-01', 'estado': 'Pagado', 'importe': 100.5}]}
2025-06-23 15:07:31,701 - INFO - Final response prepared (tool_call only, markdown returned).
2025-06-23 15:07:31,702 - INFO - Final Markdown content: ### Facturas
| Fecha | Estado | Importe |
|:------|:--------|--------:|
| 2025-06-10 | Pendiente | 200.75  |
| 2025-06-01 | Pagado | 100.50  |

**Total pendiente:** 200.75 
2025-06-23 15:08:15,011 - DEBUG - close.started
2025-06-23 15:08:15,014 - DEBUG - close.complete
2025-06-23 15:08:18,901 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 15:08:20,956 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002584F165160>
2025-06-23 15:08:20,957 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-23 15:08:20,957 - DEBUG - send_request_headers.complete
2025-06-23 15:08:20,957 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-23 15:08:20,958 - DEBUG - send_request_body.complete
2025-06-23 15:08:20,958 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-23 15:08:20,989 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 13:08:20 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-23 15:08:20,990 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-23 15:08:20,990 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-23 15:08:20,990 - DEBUG - receive_response_body.complete
2025-06-23 15:08:20,990 - DEBUG - response_closed.started
2025-06-23 15:08:20,990 - DEBUG - response_closed.complete
2025-06-23 15:08:20,991 - DEBUG - close.started
2025-06-23 15:08:20,991 - DEBUG - close.complete
2025-06-23 15:08:51,134 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 15:08:53,178 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001EBF0845160>
2025-06-23 15:08:53,179 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-23 15:08:53,179 - DEBUG - send_request_headers.complete
2025-06-23 15:08:53,179 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-23 15:08:53,180 - DEBUG - send_request_body.complete
2025-06-23 15:08:53,180 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-23 15:08:53,209 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 13:08:52 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-23 15:08:53,210 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-23 15:08:53,210 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-23 15:08:53,211 - DEBUG - receive_response_body.complete
2025-06-23 15:08:53,211 - DEBUG - response_closed.started
2025-06-23 15:08:53,211 - DEBUG - response_closed.complete
2025-06-23 15:08:53,211 - DEBUG - close.started
2025-06-23 15:08:53,211 - DEBUG - close.complete
2025-06-23 15:10:02,137 - DEBUG - Context after update: {'last_message': 'hola, dame los datos del abonado con dni 12345678A', 'requires_real_data': True, 'is_referential': False, 'query_type': 'abonado', 'dni': '12345678A', 'descripcion': 'dame los datos del abonado con dni 12345678A'}
2025-06-23 15:10:02,138 - INFO - User message: hola, dame los datos del abonado con dni 12345678A
2025-06-23 15:10:02,138 - INFO - Sending initial request to LLM with tool_choice='auto'...
2025-06-23 15:10:02,238 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-c3439d59-71c6-4527-ac5a-ecc444d3322c', 'json_data': {'messages': [{'role': 'system', 'content': 'Eres un asistente general. Responde preguntas comunes sin inventar datos. Si no aplican herramientas específicas, responde con conocimiento general. Utiliza siempre el  ultimo contexto disponible (como DNI, tipo de consulta, etc.) para responder o realizar llamadas a herramientas, especialmente en consultas referenciales.'}, {'role': 'user', 'content': 'hola, dame los datos del abonado con dni 12345678A'}], 'model': 'meta-llama/llama-4-scout-17b-16e-instruct', 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'existe_abonado', 'description': "Esta herramienta realiza la operación 'existe_abonado' en el endpoint '/existe_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_existe_abonado'}}, 'endpoint': '/existe_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'direccion_abonado', 'description': "Esta herramienta realiza la operación 'direccion_abonado' en el endpoint '/direccion_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_direccion_abonado'}}, 'endpoint': '/direccion_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'estado_pagos', 'description': "Esta herramienta realiza la operación 'estado_pagos' en el endpoint '/estado_pagos' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_estado_pagos'}}, 'endpoint': '/estado_pagos', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'ultimo_pago', 'description': "Esta herramienta realiza la operación 'ultimo_pago' en el endpoint '/ultimo_pago' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_ultimo_pago'}}, 'endpoint': '/ultimo_pago', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'deuda_total', 'description': "Esta herramienta realiza la operación 'deuda_total' en el endpoint '/deuda_total' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_deuda_total'}}, 'endpoint': '/deuda_total', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'facturas_pendientes', 'description': "Esta herramienta realiza la operación 'facturas_pendientes' en el endpoint '/facturas_pendientes' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_facturas_pendientes'}}, 'endpoint': '/facturas_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'todas_las_facturas', 'description': "Esta herramienta realiza la operación 'todas_las_facturas' en el endpoint '/todas_las_facturas' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_todas_las_facturas'}}, 'endpoint': '/todas_las_facturas', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'datos_abonado', 'description': "Esta herramienta realiza la operación 'datos_abonado' en el endpoint '/datos_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Dni'}, 'poliza': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Poliza'}}, 'type': 'object', 'title': 'DatosAbonadoInput'}}, 'endpoint': '/datos_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'crear_incidencia', 'description': "Esta herramienta realiza la operación 'crear_incidencia' en el endpoint '/crear_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}, 'ubicacion': {'type': 'string', 'title': 'Ubicacion'}, 'descripcion': {'type': 'string', 'title': 'Descripcion'}, 'estado': {'type': 'string', 'title': 'Estado', 'default': 'Abierto'}}, 'type': 'object', 'required': ['dni', 'ubicacion', 'descripcion'], 'title': 'Body_crear_incidencia'}}, 'endpoint': '/crear_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_dni', 'description': "Esta herramienta realiza la operación 'incidencias_por_dni' en el endpoint '/incidencias_por_dni' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_incidencias_por_dni'}}, 'endpoint': '/incidencias_por_dni', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_nombre', 'description': "Esta herramienta realiza la operación 'incidencias_por_nombre' en el endpoint '/incidencias_por_nombre' usando el método 'POST.'", 'parameters': {'properties': {'nombre': {'type': 'string', 'title': 'Nombre'}}, 'type': 'object', 'required': ['nombre'], 'title': 'Body_incidencias_por_nombre'}}, 'endpoint': '/incidencias_por_nombre', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'actualizar_estado_incidencia', 'description': "Esta herramienta realiza la operación 'actualizar_estado_incidencia' en el endpoint '/actualizar_estado_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'incidencia_id': {'type': 'integer', 'title': 'Incidencia Id'}, 'nuevo_estado': {'type': 'string', 'title': 'Nuevo Estado'}}, 'type': 'object', 'required': ['incidencia_id', 'nuevo_estado'], 'title': 'Body_actualizar_estado_incidencia'}}, 'endpoint': '/actualizar_estado_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_pendientes', 'description': "Esta herramienta realiza la operación 'incidencias_pendientes' en el endpoint '/incidencias_pendientes' usando el método 'POST.'", 'parameters': {}}, 'endpoint': '/incidencias_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_ubicacion', 'description': "Esta herramienta realiza la operación 'incidencias_por_ubicacion' en el endpoint '/incidencias_por_ubicacion' usando el método 'POST.'", 'parameters': {'properties': {'ubicacion': {'type': 'string', 'title': 'Ubicacion'}}, 'type': 'object', 'required': ['ubicacion'], 'title': 'Body_incidencias_por_ubicacion'}}, 'endpoint': '/incidencias_por_ubicacion', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'herramientas_disponibles', 'description': "Esta herramienta realiza la operación 'herramientas_disponibles' en el endpoint '/herramientas_disponibles' usando el método 'GET.'", 'parameters': {}}, 'endpoint': '/herramientas_disponibles', 'method': 'GET'}]}}
2025-06-23 15:10:02,417 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-06-23 15:10:02,418 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-23 15:10:02,504 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001EBF08F1450>
2025-06-23 15:10:02,505 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001EBF07F9910> server_hostname='api.groq.com' timeout=5.0
2025-06-23 15:10:02,541 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001EBF08F1590>
2025-06-23 15:10:02,542 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 15:10:02,542 - DEBUG - send_request_headers.complete
2025-06-23 15:10:02,543 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 15:10:02,543 - DEBUG - send_request_body.complete
2025-06-23 15:10:02,543 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 15:10:02,853 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 23 Jun 2025 13:10:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'gcp-europe-west3'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'998'), (b'x-ratelimit-remaining-tokens', b'29897'), (b'x-ratelimit-reset-requests', b'1m44.977s'), (b'x-ratelimit-reset-tokens', b'206ms'), (b'x-request-id', b'req_01jyeehxqbe8evv500t9whf50h'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=XZgnWuXA2EQWVq73vDBCjJ2iosO9A3htXaRpr_hKj8U-1750684202-1.0.1.1-L9DmjVpZfaQjrvRNp76p.sHQaTiQm4hDkHtE5akMsU8gTSGGQEbYU6K6Xehtk5cDWMs8oW64kts6srU.0R2AkNvVMq_6SkpLfOX.QCLgisA; path=/; expires=Mon, 23-Jun-25 13:40:02 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9544392adc13f773-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-23 15:10:02,854 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-23 15:10:02,855 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 15:10:02,855 - DEBUG - receive_response_body.complete
2025-06-23 15:10:02,856 - DEBUG - response_closed.started
2025-06-23 15:10:02,856 - DEBUG - response_closed.complete
2025-06-23 15:10:02,856 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Mon, 23 Jun 2025 13:10:02 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'gcp-europe-west3', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '998', 'x-ratelimit-remaining-tokens': '29897', 'x-ratelimit-reset-requests': '1m44.977s', 'x-ratelimit-reset-tokens': '206ms', 'x-request-id': 'req_01jyeehxqbe8evv500t9whf50h', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=XZgnWuXA2EQWVq73vDBCjJ2iosO9A3htXaRpr_hKj8U-1750684202-1.0.1.1-L9DmjVpZfaQjrvRNp76p.sHQaTiQm4hDkHtE5akMsU8gTSGGQEbYU6K6Xehtk5cDWMs8oW64kts6srU.0R2AkNvVMq_6SkpLfOX.QCLgisA; path=/; expires=Mon, 23-Jun-25 13:40:02 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '9544392adc13f773-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-23 15:10:02,860 - INFO - Received response: ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='jxbgmgryz', function=Function(arguments='{"dni":"12345678A"}', name='datos_abonado'), type='function')])
2025-06-23 15:10:02,860 - INFO - Executing tool: datos_abonado with args: {'dni': '12345678A'}
2025-06-23 15:10:03,878 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 15:10:05,918 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001EBF0783360>
2025-06-23 15:10:05,918 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 15:10:05,919 - DEBUG - send_request_headers.complete
2025-06-23 15:10:05,919 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 15:10:05,919 - DEBUG - send_request_body.complete
2025-06-23 15:10:05,920 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 15:10:05,928 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 13:10:05 GMT'), (b'server', b'uvicorn'), (b'content-length', b'141'), (b'content-type', b'application/json')])
2025-06-23 15:10:05,928 - INFO - HTTP Request: POST http://localhost:8000/datos_abonado "HTTP/1.1 200 OK"
2025-06-23 15:10:05,929 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 15:10:05,929 - DEBUG - receive_response_body.complete
2025-06-23 15:10:05,929 - DEBUG - response_closed.started
2025-06-23 15:10:05,929 - DEBUG - response_closed.complete
2025-06-23 15:10:05,929 - DEBUG - close.started
2025-06-23 15:10:05,930 - DEBUG - close.complete
2025-06-23 15:10:05,930 - INFO - Raw tool response for datos_abonado: {'nombre': 'Juan Pérez', 'dni': '12345678A', 'direccion': 'Calle Falsa 123', 'correo': 'juan@example.com', 'telefono': '123456789', 'poliza': 'POL123'}
2025-06-23 15:10:05,931 - INFO - Final response prepared (tool_call only, markdown returned).
2025-06-23 15:10:05,931 - INFO - Final Markdown content: ### Datos del abonado
- **Nombre:** Juan Pérez
- **DNI:** 12345678A
- **Dirección:** Calle Falsa 123
- **Correo electrónico:** juan@example.com
- **Teléfono:** 123456789
- **Póliza:** POL123
2025-06-23 15:10:09,654 - DEBUG - Context after update: {'last_message': 'y todas sus facturas', 'requires_real_data': True, 'is_referential': True, 'query_type': 'factura', 'dni': '12345678A', 'descripcion': 'dame los datos del abonado con dni 12345678A'}
2025-06-23 15:10:09,655 - INFO - User message: y todas sus facturas
2025-06-23 15:10:09,655 - INFO - Sending initial request to LLM with tool_choice='auto'...
2025-06-23 15:10:09,658 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ecb290d4-dd6a-4c60-84c4-4cc3cd1d58fc', 'json_data': {'messages': [{'role': 'system', 'content': 'Eres un agente especializado en gestión de facturas. **No inventes datos**; utiliza herramientas para obtener información precisa. Si el usuario proporciona un DNI o ID de factura, llama a la herramienta correspondiente. Responde únicamente con los datos devueltos por la API en un formato claro y estructurado. Si no puedes encontrar datos, informa al usuario de manera transparente.'}, {'role': 'user', 'content': 'y todas sus facturas'}], 'model': 'meta-llama/llama-4-scout-17b-16e-instruct', 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'existe_abonado', 'description': "Esta herramienta realiza la operación 'existe_abonado' en el endpoint '/existe_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_existe_abonado'}}, 'endpoint': '/existe_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'direccion_abonado', 'description': "Esta herramienta realiza la operación 'direccion_abonado' en el endpoint '/direccion_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_direccion_abonado'}}, 'endpoint': '/direccion_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'estado_pagos', 'description': "Esta herramienta realiza la operación 'estado_pagos' en el endpoint '/estado_pagos' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_estado_pagos'}}, 'endpoint': '/estado_pagos', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'ultimo_pago', 'description': "Esta herramienta realiza la operación 'ultimo_pago' en el endpoint '/ultimo_pago' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_ultimo_pago'}}, 'endpoint': '/ultimo_pago', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'deuda_total', 'description': "Esta herramienta realiza la operación 'deuda_total' en el endpoint '/deuda_total' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_deuda_total'}}, 'endpoint': '/deuda_total', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'facturas_pendientes', 'description': "Esta herramienta realiza la operación 'facturas_pendientes' en el endpoint '/facturas_pendientes' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_facturas_pendientes'}}, 'endpoint': '/facturas_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'todas_las_facturas', 'description': "Esta herramienta realiza la operación 'todas_las_facturas' en el endpoint '/todas_las_facturas' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_todas_las_facturas'}}, 'endpoint': '/todas_las_facturas', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'datos_abonado', 'description': "Esta herramienta realiza la operación 'datos_abonado' en el endpoint '/datos_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Dni'}, 'poliza': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Poliza'}}, 'type': 'object', 'title': 'DatosAbonadoInput'}}, 'endpoint': '/datos_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'crear_incidencia', 'description': "Esta herramienta realiza la operación 'crear_incidencia' en el endpoint '/crear_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}, 'ubicacion': {'type': 'string', 'title': 'Ubicacion'}, 'descripcion': {'type': 'string', 'title': 'Descripcion'}, 'estado': {'type': 'string', 'title': 'Estado', 'default': 'Abierto'}}, 'type': 'object', 'required': ['dni', 'ubicacion', 'descripcion'], 'title': 'Body_crear_incidencia'}}, 'endpoint': '/crear_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_dni', 'description': "Esta herramienta realiza la operación 'incidencias_por_dni' en el endpoint '/incidencias_por_dni' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_incidencias_por_dni'}}, 'endpoint': '/incidencias_por_dni', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_nombre', 'description': "Esta herramienta realiza la operación 'incidencias_por_nombre' en el endpoint '/incidencias_por_nombre' usando el método 'POST.'", 'parameters': {'properties': {'nombre': {'type': 'string', 'title': 'Nombre'}}, 'type': 'object', 'required': ['nombre'], 'title': 'Body_incidencias_por_nombre'}}, 'endpoint': '/incidencias_por_nombre', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'actualizar_estado_incidencia', 'description': "Esta herramienta realiza la operación 'actualizar_estado_incidencia' en el endpoint '/actualizar_estado_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'incidencia_id': {'type': 'integer', 'title': 'Incidencia Id'}, 'nuevo_estado': {'type': 'string', 'title': 'Nuevo Estado'}}, 'type': 'object', 'required': ['incidencia_id', 'nuevo_estado'], 'title': 'Body_actualizar_estado_incidencia'}}, 'endpoint': '/actualizar_estado_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_pendientes', 'description': "Esta herramienta realiza la operación 'incidencias_pendientes' en el endpoint '/incidencias_pendientes' usando el método 'POST.'", 'parameters': {}}, 'endpoint': '/incidencias_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_ubicacion', 'description': "Esta herramienta realiza la operación 'incidencias_por_ubicacion' en el endpoint '/incidencias_por_ubicacion' usando el método 'POST.'", 'parameters': {'properties': {'ubicacion': {'type': 'string', 'title': 'Ubicacion'}}, 'type': 'object', 'required': ['ubicacion'], 'title': 'Body_incidencias_por_ubicacion'}}, 'endpoint': '/incidencias_por_ubicacion', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'herramientas_disponibles', 'description': "Esta herramienta realiza la operación 'herramientas_disponibles' en el endpoint '/herramientas_disponibles' usando el método 'GET.'", 'parameters': {}}, 'endpoint': '/herramientas_disponibles', 'method': 'GET'}]}}
2025-06-23 15:10:09,661 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-06-23 15:10:09,661 - DEBUG - close.started
2025-06-23 15:10:09,662 - DEBUG - close.complete
2025-06-23 15:10:09,662 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-23 15:10:09,733 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001EBF0918B00>
2025-06-23 15:10:09,734 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001EBF07F9910> server_hostname='api.groq.com' timeout=5.0
2025-06-23 15:10:09,771 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001EBF083AF90>
2025-06-23 15:10:09,772 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 15:10:09,773 - DEBUG - send_request_headers.complete
2025-06-23 15:10:09,773 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 15:10:09,774 - DEBUG - send_request_body.complete
2025-06-23 15:10:09,774 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 15:10:10,120 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 23 Jun 2025 13:10:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'gcp-europe-west3'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'997'), (b'x-ratelimit-remaining-tokens', b'29889'), (b'x-ratelimit-reset-requests', b'4m11.958999999s'), (b'x-ratelimit-reset-tokens', b'222ms'), (b'x-request-id', b'req_01jyeej4snf7g879h3ev2g5pf2'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'954439580e966a06-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-23 15:10:10,121 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-23 15:10:10,121 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 15:10:10,121 - DEBUG - receive_response_body.complete
2025-06-23 15:10:10,122 - DEBUG - response_closed.started
2025-06-23 15:10:10,122 - DEBUG - response_closed.complete
2025-06-23 15:10:10,122 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Mon, 23 Jun 2025 13:10:10 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'gcp-europe-west3', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '997', 'x-ratelimit-remaining-tokens': '29889', 'x-ratelimit-reset-requests': '4m11.958999999s', 'x-ratelimit-reset-tokens': '222ms', 'x-request-id': 'req_01jyeej4snf7g879h3ev2g5pf2', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '954439580e966a06-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-23 15:10:10,123 - INFO - Received response: ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='msepcgd6m', function=Function(arguments='{"dni":"12345678A"}', name='todas_las_facturas'), type='function')])
2025-06-23 15:10:10,123 - INFO - Executing tool: todas_las_facturas with args: {'dni': '12345678A'}
2025-06-23 15:10:11,117 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 15:10:13,161 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001EBF09088D0>
2025-06-23 15:10:13,162 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 15:10:13,162 - DEBUG - send_request_headers.complete
2025-06-23 15:10:13,162 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 15:10:13,163 - DEBUG - send_request_body.complete
2025-06-23 15:10:13,163 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 15:10:13,170 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 13:10:12 GMT'), (b'server', b'uvicorn'), (b'content-length', b'132'), (b'content-type', b'application/json')])
2025-06-23 15:10:13,171 - INFO - HTTP Request: POST http://localhost:8000/todas_las_facturas "HTTP/1.1 200 OK"
2025-06-23 15:10:13,171 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 15:10:13,172 - DEBUG - receive_response_body.complete
2025-06-23 15:10:13,172 - DEBUG - response_closed.started
2025-06-23 15:10:13,172 - DEBUG - response_closed.complete
2025-06-23 15:10:13,172 - DEBUG - close.started
2025-06-23 15:10:13,173 - DEBUG - close.complete
2025-06-23 15:10:13,173 - INFO - Raw tool response for todas_las_facturas: {'facturas': [{'fecha': '2025-06-10', 'estado': 'Pendiente', 'importe': 200.75}, {'fecha': '2025-06-01', 'estado': 'Pagado', 'importe': 100.5}]}
2025-06-23 15:10:13,173 - INFO - Final response prepared (tool_call only, markdown returned).
2025-06-23 15:10:13,173 - INFO - Final Markdown content: ### Facturas
| Fecha | Estado | Importe |
|:------|:--------|--------:|
| 2025-06-10 | Pendiente | 200.75  |
| 2025-06-01 | Pagado | 100.50  |

**Total pendiente:** 200.75 
2025-06-23 15:10:21,119 - DEBUG - Inheriting field dni
2025-06-23 15:10:21,119 - DEBUG - Context after update: {'last_message': 'dame los datos del abonado 87654321B', 'requires_real_data': True, 'is_referential': False, 'query_type': 'abonado', 'dni': '12345678A', 'descripcion': 'dame los datos del abonado con dni 12345678A'}
2025-06-23 15:10:21,120 - INFO - User message: dame los datos del abonado 87654321B
2025-06-23 15:10:21,120 - INFO - Sending initial request to LLM with tool_choice='auto'...
2025-06-23 15:10:21,123 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-6d3e5221-b3ca-4808-add6-9e0b46d34d6a', 'json_data': {'messages': [{'role': 'system', 'content': 'Eres un asistente general. Responde preguntas comunes sin inventar datos. Si no aplican herramientas específicas, responde con conocimiento general. Utiliza siempre el  ultimo contexto disponible (como DNI, tipo de consulta, etc.) para responder o realizar llamadas a herramientas, especialmente en consultas referenciales.'}, {'role': 'user', 'content': 'dame los datos del abonado 87654321B'}], 'model': 'meta-llama/llama-4-scout-17b-16e-instruct', 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'existe_abonado', 'description': "Esta herramienta realiza la operación 'existe_abonado' en el endpoint '/existe_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_existe_abonado'}}, 'endpoint': '/existe_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'direccion_abonado', 'description': "Esta herramienta realiza la operación 'direccion_abonado' en el endpoint '/direccion_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_direccion_abonado'}}, 'endpoint': '/direccion_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'estado_pagos', 'description': "Esta herramienta realiza la operación 'estado_pagos' en el endpoint '/estado_pagos' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_estado_pagos'}}, 'endpoint': '/estado_pagos', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'ultimo_pago', 'description': "Esta herramienta realiza la operación 'ultimo_pago' en el endpoint '/ultimo_pago' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_ultimo_pago'}}, 'endpoint': '/ultimo_pago', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'deuda_total', 'description': "Esta herramienta realiza la operación 'deuda_total' en el endpoint '/deuda_total' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_deuda_total'}}, 'endpoint': '/deuda_total', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'facturas_pendientes', 'description': "Esta herramienta realiza la operación 'facturas_pendientes' en el endpoint '/facturas_pendientes' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_facturas_pendientes'}}, 'endpoint': '/facturas_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'todas_las_facturas', 'description': "Esta herramienta realiza la operación 'todas_las_facturas' en el endpoint '/todas_las_facturas' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_todas_las_facturas'}}, 'endpoint': '/todas_las_facturas', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'datos_abonado', 'description': "Esta herramienta realiza la operación 'datos_abonado' en el endpoint '/datos_abonado' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Dni'}, 'poliza': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Poliza'}}, 'type': 'object', 'title': 'DatosAbonadoInput'}}, 'endpoint': '/datos_abonado', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'crear_incidencia', 'description': "Esta herramienta realiza la operación 'crear_incidencia' en el endpoint '/crear_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}, 'ubicacion': {'type': 'string', 'title': 'Ubicacion'}, 'descripcion': {'type': 'string', 'title': 'Descripcion'}, 'estado': {'type': 'string', 'title': 'Estado', 'default': 'Abierto'}}, 'type': 'object', 'required': ['dni', 'ubicacion', 'descripcion'], 'title': 'Body_crear_incidencia'}}, 'endpoint': '/crear_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_dni', 'description': "Esta herramienta realiza la operación 'incidencias_por_dni' en el endpoint '/incidencias_por_dni' usando el método 'POST.'", 'parameters': {'properties': {'dni': {'type': 'string', 'title': 'Dni'}}, 'type': 'object', 'required': ['dni'], 'title': 'Body_incidencias_por_dni'}}, 'endpoint': '/incidencias_por_dni', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_nombre', 'description': "Esta herramienta realiza la operación 'incidencias_por_nombre' en el endpoint '/incidencias_por_nombre' usando el método 'POST.'", 'parameters': {'properties': {'nombre': {'type': 'string', 'title': 'Nombre'}}, 'type': 'object', 'required': ['nombre'], 'title': 'Body_incidencias_por_nombre'}}, 'endpoint': '/incidencias_por_nombre', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'actualizar_estado_incidencia', 'description': "Esta herramienta realiza la operación 'actualizar_estado_incidencia' en el endpoint '/actualizar_estado_incidencia' usando el método 'POST.'", 'parameters': {'properties': {'incidencia_id': {'type': 'integer', 'title': 'Incidencia Id'}, 'nuevo_estado': {'type': 'string', 'title': 'Nuevo Estado'}}, 'type': 'object', 'required': ['incidencia_id', 'nuevo_estado'], 'title': 'Body_actualizar_estado_incidencia'}}, 'endpoint': '/actualizar_estado_incidencia', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_pendientes', 'description': "Esta herramienta realiza la operación 'incidencias_pendientes' en el endpoint '/incidencias_pendientes' usando el método 'POST.'", 'parameters': {}}, 'endpoint': '/incidencias_pendientes', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'incidencias_por_ubicacion', 'description': "Esta herramienta realiza la operación 'incidencias_por_ubicacion' en el endpoint '/incidencias_por_ubicacion' usando el método 'POST.'", 'parameters': {'properties': {'ubicacion': {'type': 'string', 'title': 'Ubicacion'}}, 'type': 'object', 'required': ['ubicacion'], 'title': 'Body_incidencias_por_ubicacion'}}, 'endpoint': '/incidencias_por_ubicacion', 'method': 'POST'}, {'type': 'function', 'function': {'name': 'herramientas_disponibles', 'description': "Esta herramienta realiza la operación 'herramientas_disponibles' en el endpoint '/herramientas_disponibles' usando el método 'GET.'", 'parameters': {}}, 'endpoint': '/herramientas_disponibles', 'method': 'GET'}]}}
2025-06-23 15:10:21,125 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-06-23 15:10:21,126 - DEBUG - close.started
2025-06-23 15:10:21,126 - DEBUG - close.complete
2025-06-23 15:10:21,127 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-23 15:10:21,200 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001EBF0908E20>
2025-06-23 15:10:21,200 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001EBF07F9910> server_hostname='api.groq.com' timeout=5.0
2025-06-23 15:10:21,237 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001EBF089FD50>
2025-06-23 15:10:21,237 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 15:10:21,238 - DEBUG - send_request_headers.complete
2025-06-23 15:10:21,238 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 15:10:21,239 - DEBUG - send_request_body.complete
2025-06-23 15:10:21,239 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 15:10:21,510 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 23 Jun 2025 13:10:21 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'gcp-europe-west3'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'996'), (b'x-ratelimit-remaining-tokens', b'29900'), (b'x-ratelimit-reset-requests', b'5m34.144s'), (b'x-ratelimit-reset-tokens', b'200ms'), (b'x-request-id', b'req_01jyeejfzpe9bv1ard3m1y9mgb'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9544399fbc45cf90-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-23 15:10:21,511 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-23 15:10:21,511 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 15:10:21,512 - DEBUG - receive_response_body.complete
2025-06-23 15:10:21,512 - DEBUG - response_closed.started
2025-06-23 15:10:21,512 - DEBUG - response_closed.complete
2025-06-23 15:10:21,513 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Mon, 23 Jun 2025 13:10:21 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'gcp-europe-west3', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '996', 'x-ratelimit-remaining-tokens': '29900', 'x-ratelimit-reset-requests': '5m34.144s', 'x-ratelimit-reset-tokens': '200ms', 'x-request-id': 'req_01jyeejfzpe9bv1ard3m1y9mgb', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '9544399fbc45cf90-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-23 15:10:21,514 - INFO - Received response: ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='hy974yhe7', function=Function(arguments='{"dni":"87654321B"}', name='datos_abonado'), type='function')])
2025-06-23 15:10:21,514 - INFO - Executing tool: datos_abonado with args: {'dni': '87654321B'}
2025-06-23 15:10:22,467 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 15:10:24,546 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001EBF0928250>
2025-06-23 15:10:24,547 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-23 15:10:24,548 - DEBUG - send_request_headers.complete
2025-06-23 15:10:24,548 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-23 15:10:24,549 - DEBUG - send_request_body.complete
2025-06-23 15:10:24,550 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-23 15:10:24,556 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 13:10:23 GMT'), (b'server', b'uvicorn'), (b'content-length', b'148'), (b'content-type', b'application/json')])
2025-06-23 15:10:24,556 - INFO - HTTP Request: POST http://localhost:8000/datos_abonado "HTTP/1.1 200 OK"
2025-06-23 15:10:24,557 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-23 15:10:24,557 - DEBUG - receive_response_body.complete
2025-06-23 15:10:24,557 - DEBUG - response_closed.started
2025-06-23 15:10:24,557 - DEBUG - response_closed.complete
2025-06-23 15:10:24,557 - DEBUG - close.started
2025-06-23 15:10:24,558 - DEBUG - close.complete
2025-06-23 15:10:24,558 - INFO - Raw tool response for datos_abonado: {'nombre': 'Ana López', 'dni': '87654321B', 'direccion': 'Avenida Siempre Viva 456', 'correo': 'ana@example.com', 'telefono': '987654321', 'poliza': 'POL456'}
2025-06-23 15:10:24,558 - INFO - Final response prepared (tool_call only, markdown returned).
2025-06-23 15:10:24,558 - INFO - Final Markdown content: ### Datos del abonado
- **Nombre:** Ana López
- **DNI:** 87654321B
- **Dirección:** Avenida Siempre Viva 456
- **Correo electrónico:** ana@example.com
- **Teléfono:** 987654321
- **Póliza:** POL456
2025-06-23 15:10:28,977 - DEBUG - Removing field dni
2025-06-23 15:10:28,977 - DEBUG - Context after update: {'last_message': 'crea una incidencia en madrid', 'requires_real_data': True, 'is_referential': False, 'query_type': 'incidencia_creacion', 'descripcion': 'dame los datos del abonado con dni 12345678A', 'ubicacion': 'madrid'}
2025-06-23 15:10:28,977 - WARNING - Missing context fields: {'dni': 'Perdona, ha habido un fallo: no pude identificar tu DNI. Por favor, reformula tu consulta incluyendo el DNI u otro dato clave.'}
2025-06-23 15:10:35,735 - DEBUG - close.started
2025-06-23 15:10:35,738 - DEBUG - close.complete
2025-06-23 15:10:39,043 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 15:10:41,083 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000142B7E75160>
2025-06-23 15:10:41,083 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-23 15:10:41,084 - DEBUG - send_request_headers.complete
2025-06-23 15:10:41,084 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-23 15:10:41,085 - DEBUG - send_request_body.complete
2025-06-23 15:10:41,085 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-23 15:10:42,405 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 13:10:42 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-23 15:10:42,406 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-23 15:10:42,406 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-23 15:10:42,407 - DEBUG - receive_response_body.complete
2025-06-23 15:10:42,407 - DEBUG - response_closed.started
2025-06-23 15:10:42,407 - DEBUG - response_closed.complete
2025-06-23 15:10:42,407 - DEBUG - close.started
2025-06-23 15:10:42,407 - DEBUG - close.complete
2025-06-23 15:10:46,356 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 15:10:50,472 - DEBUG - connect_tcp.failed exception=ConnectError(ConnectionRefusedError(10061, 'No se puede establecer una conexión ya que el equipo de destino denegó expresamente dicha conexión', None, 10061, None))
2025-06-23 15:10:57,346 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 15:11:01,445 - DEBUG - connect_tcp.failed exception=ConnectError(ConnectionRefusedError(10061, 'No se puede establecer una conexión ya que el equipo de destino denegó expresamente dicha conexión', None, 10061, None))
2025-06-23 15:12:06,720 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=5.0 socket_options=None
2025-06-23 15:12:08,770 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024AF42F1160>
2025-06-23 15:12:08,770 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-06-23 15:12:08,771 - DEBUG - send_request_headers.complete
2025-06-23 15:12:08,771 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-06-23 15:12:08,771 - DEBUG - send_request_body.complete
2025-06-23 15:12:08,771 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-06-23 15:12:08,799 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 23 Jun 2025 13:12:08 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9382'), (b'content-type', b'application/json')])
2025-06-23 15:12:08,800 - INFO - HTTP Request: GET http://localhost:8000/openapi.json "HTTP/1.1 200 OK"
2025-06-23 15:12:08,800 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-06-23 15:12:08,800 - DEBUG - receive_response_body.complete
2025-06-23 15:12:08,800 - DEBUG - response_closed.started
2025-06-23 15:12:08,801 - DEBUG - response_closed.complete
2025-06-23 15:12:08,801 - DEBUG - close.started
2025-06-23 15:12:08,801 - DEBUG - close.complete
